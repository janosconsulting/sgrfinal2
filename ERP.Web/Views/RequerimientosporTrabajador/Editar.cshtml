@model Mantenimiento.Negocio.Poco.GestionarRequerimientoPoco

@{
    Layout = "~/Views/Shared/_Layout2.cshtml";
    var detalle = Model.DetalleRequerimiento;
}

<div class="d-flex flex-column flex-column-fluid">
    <div id="kt_app_toolbar" class="app-toolbar pt-7 pt-lg-10">
        <div id="kt_app_toolbar_container" class="app-container container-fluid d-flex align-items-stretch">
            <div class="app-toolbar-wrapper d-flex flex-stack flex-wrap gap-4 w-100">
                <div class="page-title d-flex flex-column justify-content-center gap-1 me-3">
                    <h1 class="page-heading d-flex flex-column justify-content-center text-dark fw-bold fs-3 m-0">
                        Editar Requerimiento por Trabajador
                    </h1>
                    <ul class="breadcrumb breadcrumb-separatorless fw-semibold fs-7 my-0">
                        <li class="breadcrumb-item text-muted">
                            <a href="@Url.Action("Index","Cliente")" class="text-muted text-hover-primary">Home</a>
                        </li>
                        <li class="breadcrumb-item"><span class="bullet bg-gray-400 w-5px h-2px"></span></li>
                        <li class="breadcrumb-item text-muted">Reporte</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <div id="kt_app_content" class="app-content flex-column-fluid">
        <div id="kt_app_content_container" class="app-container container-fluid">

            @if (detalle != null)
            {
                <form id="formEditarDetalle" class="form d-flex flex-column gap-7 gap-lg-10">
                    <div class="card card-flush py-4">
                        <div class="card-header card-header-tabs-line">
                            <div class="card-title">
                                <h3 class="fw-bold m-0">Detalle de Requerimiento</h3>
                            </div>
                        </div>

                        <div class="card-body pt-0">
                            <input type="hidden" id="hdIdDetalle" value="@detalle.idDetalleRequerimiento" />

                            <div class="mb-4">
                                <label class="form-label required">DESCRIPCIÓN:</label>
                                <textarea class="form-control" id="txtDescripcion" placeholder="Ingrese descripción" style="height: 70px;" maxlength="300">@detalle.descripcion</textarea>
                            </div>

                            <div class="mb-4">
                                <label class="form-label required">MÓDULO:</label>
                                <textarea class="form-control" id="txtModulo" placeholder="Ingrese módulo" style="height: 70px;" maxlength="300">@detalle.modulo</textarea>
                            </div>

                            <div class="mb-4">
                                <label class="form-label">COMENTARIO CLIENTE:</label>
                                <textarea class="form-control" id="txtComentario" placeholder="Ingrese comentario" style="height: 70px;" maxlength="300">@detalle.comentarioCliente</textarea>
                            </div>

                            <div class="row mb-4 gx-5">
                                <div class="col-md-4">
                                    <label class="form-label">ESTADO DESARROLLO:</label>
                                    <select class="form-select" id="selEstadoDesarrollo" style="font-size: 11px;">
                                        <option value="-1">Seleccione estado desarrollo</option>
                                        <option value="1" @(detalle.estadoDesarrollo == 1 ? "selected" : "")>REGISTRADO</option>
                                        <option value="2" @(detalle.estadoDesarrollo == 2 ? "selected" : "")>EN PROCESO</option>
                                        <option value="3" @(detalle.estadoDesarrollo == 3 ? "selected" : "")>FINALIZADO</option>
                                    </select>
                                </div>

                                <div class="col-md-4">
                                    <label class="form-label">ESTADO CLIENTE:</label>
                                    <select class="form-select" id="selEstadoCliente" style="font-size: 11px;">
                                        <option value="-1">Seleccione estado cliente</option>
                                        <option value="1" @(detalle.estadoCliente == 1 ? "selected" : "")>APROBADO</option>
                                        <option value="2" @(detalle.estadoCliente == 2 ? "selected" : "")>NO APROBADO</option>
                                    </select>
                                </div>
                                <div class="col-md-4">
                                    <label class="form-label">ASIGNADO A:</label>
                                    <select class="form-select" id="selTrabajador" style="font-size: 11px;">
                                        <option value="" @(Model.DetalleRequerimiento.idPersona.HasValue ? "" : "selected")>Seleccione Trabajador</option>
                                        @foreach (var trabajador in Model.ListarTrabajadores)
                                        {
                                            <option value="@trabajador.idPersona"
                                                    @(trabajador.idPersona == Model.DetalleRequerimiento.idPersona ? "selected" : "")>
                                                @trabajador.nombreCli
                                            </option>
                                        }
                                    </select>
                                </div>
                            </div>

                            <div class="row mb-4 gx-5">
                                <div class="col-md-6">
                                    <label class="form-label" for="txtFechaInicio">FECHA INICIO:</label>
                                    <input type="text" id="txtFechaInicio" class="form-control" value="@detalle.fechaInicio?.ToString(" dd /MM/yyyy")" placeholder="Fecha inicio" />
                                </div>
                                <div class="col-md-6">
                                    <label class="form-label" for="txtFechaFin">FECHA FIN:</label>
                                    <input type="text" id="txtFechaFin" class="form-control" value="@(detalle.fechaFin.HasValue && detalle.fechaFin.Value != DateTime.Parse("1900-01-01") ? detalle.fechaFin.Value.ToString("dd/MM/yyyy") : "")"
                                           placeholder="Fecha fin" />
                                </div>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">CRITERIO DE ACEPTACIÓN:</label>
                                <textarea id="txtCriterioAceptacion" class="summernote form-control" rows="6">
                                @Html.Raw(detalle.criterioAceptacion)
                                </textarea>
                            </div>  
                            <div class="d-flex justify-content-end">
                                <a href="@Url.Action("Index","Requerimiento")" class="btn btn-light me-3">Cancelar</a>
                                <button type="button" class="btn btn-primary" onclick="GuardarDetalle();">Guardar</button>
                            </div>
                        </div>
                    </div>
                </form>
            }
            else
            {
                <div>No se encontró detalle para editar.</div>
            }
        </div>
    </div>
</div>

 @section Scripts {
        <script src="@Url.Content("~/Scripts/library.js?v=5.0")" type="text/javascript"></script>
        <script src="@Url.Content("~/Scripts/metronic/plugins/custom/formrepeater/formrepeater.bundle.js")"></script>

        <script>
        // Validar campos obligatorios
        function Validar() {
            if ($("#txtDescripcion").val().trim() === "") {
                ShowMessage(0, "Debe ingresar Descripción");
                return false;
            }
            if ($("#txtModulo").val().trim() === "") {
                ShowMessage(0, "Debe ingresar Módulo");
                return false;
            }
            return true;
        }

        // Función para guardar el detalle
        function GuardarDetalle() {
            if (!Validar()) return;

            const formData = new FormData();

            formData.append('IdDetalleRequerimiento', $("#hdIdDetalle").val());
            formData.append('IdPersona', $("#selTrabajador").val());
            formData.append('Descripcion', $("#txtDescripcion").val());
            formData.append('ComentarioCliente', $("#txtComentario").val());
            formData.append('EstadoDesarrollo', $("#selEstadoDesarrollo").val());
            formData.append('EstadoCliente', $("#selEstadoCliente").val());
            formData.append('FechaInicio', $("#txtFechaInicio").val());
            formData.append('FechaFin', $("#txtFechaFin").val());
            formData.append('Modulo', $("#txtModulo").val());
            formData.append('CriterioAceptacion', $('#txtCriterioAceptacion').summernote('code'));

            $.ajax({
                url: '@Url.Action("ActualizarDetalle", "RequerimientosporTrabajador")',
                type: "POST",
                data: formData,
                processData: false,
                contentType: false,
                success: function () {
                    Swal.fire({
                        text: "Detalle editado correctamente",
                        icon: "success",
                        confirmButtonText: "Ok"
                    }).then(() => {
                        window.location.href = '@Url.Action("Index", "RequerimientosporTrabajador")';
                    });
                },
                error: function () {
                    Swal.fire({
                        text: "Error al guardar el detalle",
                        icon: "error",
                        confirmButtonText: "Ok"
                    });
                }
            });
        }

        // Inicializar Summernote
            function initializeSummernote() {
                $('.summernote').summernote({
                    height: 300,
                    toolbar: [
                        ['style', ['bold', 'italic', 'underline', 'clear']],
                        ['font', ['strikethrough', 'superscript']],
                        ['fontsize', ['fontsize']],
                        ['color', ['color']],
                        ['para', ['ul', 'ol', 'paragraph']],
                        ['height', ['height']],
                        ['insert', ['picture', 'link', 'video']],
                        ['view', ['fullscreen', 'codeview']]
                    ],
                    callbacks: {
                        onInit: function () {
                            // Cambia el fondo de la barra de herramientas a gris claro cuando Summernote se inicialice
                            $(this).next('.note-editor').find('.note-toolbar').css('background-color', '#f0f0f0');
                        }
                    }
                });
            }

        // Inicializar datepickers
        function initializeDatePickers() {
            $("#txtFechaInicio").flatpickr({
                dateFormat: 'd/m/Y',
                locale: spanishLocale
            });

            $("#txtFechaFin").flatpickr({
                dateFormat: 'd/m/Y',
                locale: spanishLocale,
                minDate: "today"
            });
        }

        $(document).ready(function () {
            initializeSummernote();
            initializeDatePickers();
        });
        </script>
  }

