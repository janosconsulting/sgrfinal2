
@model Mantenimiento.Negocio.Poco.GestionarTareaPoco
@using Newtonsoft.Json
@{
    Layout = "~/Views/Shared/_Layout2.cshtml";
}

<style>
    .Ndocument-error {
        border: 1px solid red;
    }

        .Ndocument-error:focus {
            border: 1px solid red;
        }
</style>
<!--begin::Content wrapper-->
<div class="d-flex flex-column flex-column-fluid">
    <!--begin::Toolbar-->
    <div id="kt_app_toolbar" class="app-toolbar pt-7 pt-lg-10">
        <!--begin::Toolbar container-->
        <div id="kt_app_toolbar_container" class="app-container container-fluid d-flex align-items-stretch">
            <!--begin::Toolbar wrapper-->
            <div class="app-toolbar-wrapper d-flex flex-stack flex-wrap gap-4 w-100">
                <!--begin::Page title-->
                <div class="page-title d-flex flex-column justify-content-center gap-1 me-3">
                    <!--begin::Title-->
                    <h1 class="page-heading d-flex flex-column justify-content-center text-dark fw-bold fs-3 m-0">
                        NUEVA
                        TAREA
                    </h1>
                    <!--end::Title-->
                    <!--begin::Breadcrumb-->
                    <ul class="breadcrumb breadcrumb-separatorless fw-semibold fs-7 my-0">
                        <!--begin::Item-->
                        <li class="breadcrumb-item text-muted">
                            <a href="@Url.Action("Index","Tareas")" class="text-muted text-hover-primary">Home</a>
                        </li>
                        <!--end::Item-->
                        <!--begin::Item-->
                        <li class="breadcrumb-item">
                            <span class="bullet bg-gray-400 w-5px h-2px"></span>
                        </li>
                        <!--end::Item-->
                        <!--begin::Item-->
                        <li class="breadcrumb-item text-muted">Modúlos</li>
                        <!--end::Item-->
                    </ul>
                    <!--end::Breadcrumb-->
                </div>
                <!--end::Page title-->
            </div>
            <!--end::Toolbar wrapper-->
        </div>
        <!--end::Toolbar container-->
    </div>
    <!--end::Toolbar-->
    <!--begin::Content-->
    <div id="kt_app_content" class="app-content flex-column-fluid">
        <!--begin::Content container-->
        <div id="kt_app_content_container" class="app-container container-fluid">
            <!--begin::Form-->
            <form id="kt_add_cliente_form" class="form d-flex flex-column flex-lg-row">
                <!--begin::Main column-->
                <div class="d-flex flex-column flex-row-fluid gap-7 gap-lg-10">
                    <div class="d-flex flex-column gap-7 gap-lg-10">
                        <!--begin::General options-->
                        <div class="card card-flush py-4">
                            <!--begin::Card body-->
                            <div class="card-body pt-0">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="row mb-5 gx-1">
                                            <!--begin::Label-->
                                            <label class="required fs-5 fw-semibold mb-2" for="kt_cliente_select">CLIENTE:</label>
                                            <!--end::Label-->
                                            <!--begin::Select-->
                                            <select id="kt_cliente_select" name="tarea.idCliente" class="form-select w-100" data-control="select2">
                                                <option value="">Seleccione cliente</option>
                                                @if (Model.ListarClientes.Any())
                                                {
                                                    foreach (var item in Model.ListarClientes)
                                                    {
                                                        <option value="@item.idPersona" @(Model.tarea.idCliente == item.idPersona ? "selected" : "")>
                                                            @item.nombreCli
                                                        </option>
                                                    }
                                                }
                                                else
                                                {
                                                    <option value="">No existen clientes</option>
                                                }
                                            </select>
                                            <!--end::Select-->
                                        </div>
                                        <div class="row mb-5 gx-1">
                                            <label class="required fs-5 fw-semibold mb-2" for="kt_proyecto_select">PROYECTO:</label>
                                            <select id="kt_proyecto_select" name="tarea.idProyecto" class="form-select w-100" data-control="select2">
                                                <option value="">Seleccione proyecto</option>
                                                @foreach (var item in Model.ListarProyectos)
                                                {
                                                    <option value="@item.idProyecto" @(Model.tarea.idProyecto == item.idProyecto ? "selected" : "")>
                                                        @item.nombre
                                                    </option>
                                                }
                                            </select>
                                        </div>
                                        <div class="row mb-5 gx-1">
                                            <!--begin::Input group-->
                                            <!--begin::Label-->
                                            <label class="fs-5 fw-semibold mb-2"
                                                   for="kt_datepicker_fecha_ini">FECHA INICIO:</label>
                                            <!--end::Label-->
                                            <!--begin::Input-->
                                            <input type="text"
                                                   id="kt_datepicker_fecha_ini"
                                                   class="form-control"
                                                   placeholder="Fecha" />
                                            <!--end::Input-->
                                        </div>
                                        <div class="row mb-5 gx-1">
                                            <!--begin::Input group-->
                                            <!--begin::Label-->
                                            <label class="fs-5 fw-semibold mb-2"
                                                   for="kt_datepicker_fecha_fin">FECHA FIN:</label>
                                            <!--end::Label-->
                                            <!--begin::Input-->
                                            <input type="text"
                                                   id="kt_datepicker_fecha_fin"
                                                   class="form-control"
                                                   placeholder="Fecha" />
                                            <!--end::Input
            <!--end::Input group-->
                                        </div>
                                        <div class="row mb-5 gx-1">
                                            <!--begin::Label-->
                                            <label class="required fs-5 fw-semibold mb-2" for="kt_tiporequerimiento_select">Tipo Implementación:</label>
                                            <!--end::Label-->
                                            <!--begin::Select-->
                                            <select id="kt_tiporequerimiento_select" name="tarea.idTipoRequerimiento" class="form-select w-100" data-control="select2">
                                                <option value="">Seleccione implementación</option>
                                                @if (Model.ListarTipoRequerimientos.Any())
                                                {
                                                    foreach (var item in Model.ListarTipoRequerimientos)
                                                    {
                                                        <option value="@item.idTipoRequerimiento" @(Model.tarea.idTipoRequerimiento == item.idTipoRequerimiento ? "selected" : "")>
                                                            @item.nombre
                                                        </option>
                                                    }
                                                }
                                                else
                                                {
                                                    <option value="">No existen implementaciones</option>
                                                }
                                            </select>
                                            <!--end::Select-->
                                        </div>
                                        <div class="row mb-5 gx-1">
                                            <!--begin::Label-->
                                            <label class="fs-5 fw-semibold mb-2" for="txtDescripcion">Tarea:</label>
                                            <!--end::Label-->
                                            <!--begin::Textarea-->
                                            <textarea id="txtDescripcion"
                                                      class="form-control"
                                                      placeholder="Ingrese Tarea"
                                                      style="height: 70px;"
                                                      maxlength="300"
                                                      oninput="filtrarYCapitalizar(this)">@Model.tarea.descripcion</textarea>
                                            <!--end::Textarea-->
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="row mb-5 gx-1">
                                            <!--begin::Label-->
                                            <label class="required fs-5 fw-semibold mb-2"
                                                   for="kt_trabajador_select">RESPONSABLE:</label>
                                            <!--end::Label-->
                                            <!--begin::Select-->
                                            <select id="kt_trabajador_select" name="tarea.idResponsable" class="form-select w-100" data-control="select2">
                                                <option value="">Seleccione trabajador</option>
                                                @if (Model.ListarTrabajadores.Any())
                                                {
                                                    foreach (var item in Model.ListarTrabajadores)
                                                    {
                                                        <option value="@item.idPersona" @(Model.tarea.idResponsable == item.idPersona ? "selected" : "")>
                                                            @item.nombreCli
                                                        </option>
                                                    }
                                                }
                                                else
                                                {
                                                    <option value="">No existen trabajadores</option>
                                                }
                                            </select>
                                            <!--end::Select-->
                                        </div>
                                        <div class="row mb-5 gx-1">
                                            <!--begin::Input group-->
                                            <label class="required fs-6 fw-semibold mb-2" for="txtAvance">Avance:</label>
                                            <!--begin::Input-->
                                            <div class="position-relative d-flex align-items-center">
                                                <!--begin::Input-->
                                                <input type="text" id="txtAvance"
                                                       class="form-control mb-3 mb-lg-0"
                                                       placeholder="Ingrese número de avance"
                                                       maxlength="9"
                                                       value="@Model.tarea.porAvance"
                                                       oninput="filtrarNumerosYPuntuacion(this)" />
                                                <!--end::Input-->
                                            </div>
                                            <!--end::Input group-->
                                        </div>
                                        <div class="row mb-5 gx-1">
                                            <!--begin::Input group-->
                                            <label class="required fs-6 fw-semibold mb-2" for="txtTiempo">Tiempo:</label>
                                            <!--begin::Input-->
                                            <div class="position-relative d-flex align-items-center">
                                                <!--begin::Input-->
                                                <input type="text" id="txtTiempo"
                                                       class="form-control mb-3 mb-lg-0"
                                                       placeholder="Ingrese tiempo"
                                                       maxlength="9"
                                                       value="@Model.tarea.tiempo"
                                                       oninput="filtrarNumerosYPuntuacion(this)" />
                                                <!--end::Input-->
                                            </div>
                                            <!--end::Input group-->
                                        </div>
                                        <div class="row mb-5 gx-1">
                                            <!--begin::Label-->
                                            <label class="required fs-5 fw-semibold mb-2"
                                                   for="kt_prioridad_select">PRIORIDAD:</label>
                                            <!--end::Label-->
                                            <!--begin::Select-->
                                            <select id="kt_prioridad_select" class="form-select" data-control="select2">
                                                <option value="">Seleccione prioridad</option>
                                                <option value="1">BAJA</option>
                                                <option value="2" selected>MEDIA</option> <!-- ← Seleccionada por defecto -->
                                                <option value="3">ALTA</option>
                                            </select>
                                            <!--end::Select-->
                                        </div>
                                        <div class="row mb-5 gx-1">
                                            <!-- Etiqueta -->
                                            <label class="required fs-5 fw-semibold mb-2" for="kt_estado_select">ESTADO:</label>

                                            <!-- Select -->
                                            <select id="kt_estado_select" name="tarea.idEstado" class="form-select w-100">
                                                <option value="">Seleccione estado</option>
                                                <option value="1" @(Model.tarea.idEstado == 1 || Model.tarea.idEstado == null ? "selected" : "")>REGISTRADO</option>
                                                <option value="4" @(Model.tarea.idEstado == 4 ? "selected" : "")>EN PROCESO</option>
                                                <option value="3" @(Model.tarea.idEstado == 3 ? "selected" : "")>FINALIZADO</option>
                                            </select>
                                        </div>
                                        <div class="form-group">
                                            <label for="codigoRequerimiento">Código de Requerimiento</label>
                                            <input type="text" class="form-control" id="codigoRequerimiento" name="codigoRequerimiento"
                                                   value="@Model.tarea.codigoRequerimiento" readonly />
                                        </div>
                                    </div>
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.tarea.comentario)
                                            @Html.TextAreaFor(model => model.tarea.comentario, new { @class = "summernote form-control", rows = 10 })
                                            @Html.ValidationMessageFor(model => model.tarea.comentario)
                                        </div>
                                    </div>
                                    @Html.HiddenFor(model => model.tarea.idRequerimiento)
                                    <!--end::Card header-->
                                </div>
                                @Html.HiddenFor(model => model.tarea.idRequerimiento)
                                <!--end::General options-->
                            </div>
                            <!--end::Tab content-->
                            <div class="d-flex justify-content-end">
                                <!--begin::Button-->
                                <a href="@Url.Action("Index","Tareas")" id="kt_ecommerce_add_product_cancel"
                                   class="btn btn-light me-5">Cancelar</a>
                                <!--end::Button-->
                                <!--begin::Button-->
                                <button type="button" id="btnGuardar" onclick="Guardar();" class="btn btn-primary">
                                    <span class="indicator-label">Guardar</span>
                                    <span class="indicator-progress">
                                        Espere un momento...
                                        <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                                    </span>
                                </button>
                                <!--end::Button-->
                            </div>
                        </div>
                    <!--end::Main column-->
                </div>
            </form>
            <!--end::Form-->
        </div>
        <!--end::Content container-->
    </div>
    <!--end::Content-->
</div>
<!--end::Content wrapper-->

@section Scripts {
    <script src="@Url.Content("~/Scripts/library.js?v=5.0")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/metronic/plugins/custom/formrepeater/formrepeater.bundle.js")"></script>
   
    <script>

        $(document).ready(function () {

            $("#kt_datepicker_fecha").flatpickr({
                dateFormat: 'd/m/Y',
                locale: spanishLocale,
                defaultDate: new Date(),
            });

            $("#kt_datepicker_fecha_ini").flatpickr({
                dateFormat: 'd/m/Y',
                locale: spanishLocale,
                defaultDate: new Date(),
            });

            $("#kt_datepicker_fecha_fin").flatpickr({
                dateFormat: 'd/m/Y',
                locale: spanishLocale,
                minDate: "today", // Bloquear fechas anteriores a hoy
                defaultDate: new Date(),
            });
            //para el tamaño de la vista de proyecto
            $('#kt_proyecto_select').select2({
            placeholder: 'Seleccione proyecto',
            width: '100%'
            });
            //para los iconos de comentario
            $('.summernote').summernote({
                height: 300,
                toolbar: [
                    ['style', ['bold', 'italic', 'underline', 'clear']],
                    ['font', ['strikethrough', 'superscript']],
                    ['fontsize', ['fontsize']],
                    ['color', ['color']],
                    ['para', ['ul', 'ol', 'paragraph']],
                    ['height', ['height']],
                    ['insert', ['picture', 'link', 'video']],
                    ['view', ['fullscreen', 'codeview']]
                ]
            });

            // Cambiar fondo de la toolbar a gris claro
            $('.note-toolbar').css({
                'background-color': '#d3d3d3',  // gris claro
                'color': '#000'                 // texto e iconos negros
            });

            // Forzar color negro a íconos y textos dentro de la toolbar
            $('.note-toolbar button, .note-toolbar .note-icon').css('color', '#000');

            // Fondo blanco para el área editable y texto negro
            $('.note-editable').css({
                'background-color': '#fff',
                'color': '#000'
            });

            // Asegúrate de que el contenido se sincronice antes de enviar
            var form = myTextArea.closest('form');
            if (form) {
                form.addEventListener('submit', function () {
                    myTextArea.value = myCodeMirror.getValue();
                });
            }


            // Opcional: Preselección al editar
            var idProyecto = '@(Model.tarea.idProyecto)';
            if (idProyecto) {
            $('#kt_proyecto_select').val(idProyecto).trigger('change');
            }
            $('#kt_trabajador_select').select2({
            placeholder: 'Seleccione trabajador',
            width: '100%'
            });

            // Seleccionar automáticamente si estás en modo edición
            var idResponsable = '@(Model.tarea.idResponsable)';
            if (idResponsable) {
            $('#kt_trabajador_select').val(idResponsable).trigger('change');
            }
            //para poder editar implementacion
            $('#kt_tiporequerimiento_select').select2({
            placeholder: 'Seleccione implementación',
            width: '100%'
            });

            var idTipoReq = '@(Model.tarea.idTipoRequerimiento)';
            if (idTipoReq) {
            $('#kt_tiporequerimiento_select').val(idTipoReq).trigger('change');
            }
            //para poder editar cliente
            $('#kt_cliente_select').select2({
            placeholder: 'Seleccione cliente',
            width: '100%'
            });

           var idCliente = '@(Model.tarea.idCliente)';
           if (idCliente) {
           $('#kt_cliente_select').val(idCliente).trigger('change');
           }

            //para idEstado
              let estado = @Model.tarea.idEstado;
             setTimeout(function () {
             $('#kt_estado_select').val(estado.toString()).trigger('change');
             }, 100);



            $('#kt_docs_repeater_basic').repeater({

                initEmpty: false,

                show: function () {

                    var $newItem = $(this).slideDown();
                    counter++;

                    // Reemplaza el placeholder {{counter}} con el valor actual del contador
                    $newItem.html($newItem.html().replace(/{{counter}}/g, counter));

                    // Inicializa select2 y flatpickr en los nuevos elementos
                    $newItem.find('[data-kt-repeater="select2"]').select2();
                    $newItem.find('[data-kt-repeater="datepicker"]').flatpickr({
                        dateFormat: 'd/m/Y',
                        locale: spanishLocale
                    });

                    // Inicializa Dropzone
                    initializeDropzone(counter);
                },

                hide: function (deleteElement) {
                    $(this).slideUp(deleteElement);
                },

                ready: function (setIndexes) {
                    // Recorre todos los items iniciales y reemplaza el placeholder {{counter}}
                    $('[data-repeater-item]').each(function () {
                        counter++;
                        var $item = $(this);
                        $item.html($item.html().replace(/{{counter}}/g, counter));
                    });

                    // Inicializa select2 y flatpickr para los elementos existentes
                    $('[data-kt-repeater="select2"]').select2();
                    $('[data-kt-repeater="datepicker"]').flatpickr({
                        dateFormat: 'd/m/Y',
                        locale: spanishLocale
                    });

                    // Inicializa Dropzone para los elementos existentes
                    $('[data-repeater-item]').each(function () {
                        initializeDropzone(counter);
                    });
                }
            });

            // Inicializar Dropzone para la fila existente al cargar la página
            initializeDropzone(counter);
        });

        let botonDesactivado = false;

        function Validar() {
            if ($("#txtDescripcion").val() == "") {
                ShowMessage(0, "ingrese tarea");
                return false;
            }
            if ($("#kt_cliente_select").val() == "") {
                ShowMessage(0, "Debe ingresar cliente");
                return false;
            }
            // Verificar si se ha seleccionado un tipo de requerimiento
            if ($("#kt_prioridad_select").val() == "") {
                ShowMessage(0, "Debe seleccionar una prioridad");
                return false;
            }
            if ($("#kt_trabajador_select").val() == "") {
                ShowMessage(0, "Debe ingresar trabajador");
                return false;
            }
            if ($("#kt_proyecto_select").val() == "") {
                ShowMessage(0, "Debe ingresar proyecto");
                return false;
            }
            if ($("#kt_tiporequerimiento_select").val() == "") {
                ShowMessage(0, "Debe ingresar implementacion");
                return false;
            }

            if (botonDesactivado) {
                // El botón está desactivado, mostrar mensaje de advertencia
                Swal.fire({
                    icon: 'warning',
                    title: 'Advertencia',
                    text: 'No se pueden guardar los datos ya que previamente el botón estaba desactivado',
                    confirmButtonText: 'OK'
                });
                return false;
            }

            return true;
        }

        function Guardar() {
            if (!Validar()) {
                return false;
            }

            var formData = new FormData();

            formData.append('tarea.idTarea', @Model.tarea.idTarea);
            formData.append('tarea.fechaRegistro', $("#kt_datepicker_fecha").val());
            formData.append('tarea.prioridad', $("#kt_prioridad_select").val());
            formData.append('tarea.fechaInicio', $("#kt_datepicker_fecha_ini").val());
            formData.append('tarea.fechaFin', $("#kt_datepicker_fecha_fin").val());
            formData.append('tarea.descripcion', $("#txtDescripcion").val());
            formData.append('tarea.idCliente', $("#kt_cliente_select").val());
            formData.append('tarea.idResponsable', $("#kt_trabajador_select").val());
            formData.append('tarea.porAvance', $("#txtAvance").val());
            formData.append('tarea.tiempo', $("#txtTiempo").val());
            formData.append('tarea.idProyecto', $("#kt_proyecto_select").val());
            formData.append('tarea.idTipoRequerimiento', $("#kt_tiporequerimiento_select").val());
            formData.append('tarea.idEstado', parseInt($('#kt_estado_select').val()));
            formData.append('tarea.comentario', $('.summernote').summernote('code'));
            formData.append('tarea.idRequerimiento', $('#tarea_idRequerimiento').val());




           /* console.log(selectedIndex);
            console.log("dato del select:");
            console.log("Contenido de formData:");

            for (let pair of formData.entries()) {
                console.log(pair[0] + ": " + pair[1]);
            }*/
           let trEditing = @Html.Raw(JsonConvert.SerializeObject(Model.TrEditing));// Obtener el valor de IsEditing desde el modelo

            $.ajax({
                url: "@Url.Action("Guardar", "Tareas")",
                type: "POST",
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    let message = trEditing ? "¡La Tarea se ha actualizado correctamente!" : "¡La tarea se ha registrado correctamente!";
                    Swal.fire({
                        text: message,
                        icon: "success",
                        buttonsStyling: false,
                        confirmButtonText: "Listo",
                        customClass: { confirmButton: "btn btn-primary" },
                    }).then(function () {
                        window.location.href = '@Url.Action("Index", "Tareas")';
                    });
                },
                error: function (error) {
                    //console.error("Error al enviar el formulario");
                    // Mostrar mensaje de error
                    Swal.fire({
                        text: "Se produjo un error al enviar el formulario. Por favor, inténtalo de nuevo.",
                        icon: "error",
                        buttonsStyling: false,
                        confirmButtonText: "Ok",
                        customClass: { confirmButton: "btn btn-primary" },
                    });
                },
            });
        }
        // Función para permitir solo números y los caracteres . ; :
        function filtrarNumerosYPuntuacion(input) {
            let valor = input.value;
            // Permitir solo dígitos, punto, punto y coma, y dos puntos
            valor = valor.replace(/[^0-9.;:]/g, '');
            input.value = valor;
        }



        // Función para capitalizar la Primera palabra
        function filtrarYCapitalizar(input) {
            // Obtener el valor actual del input
            let valor = input.value;
            // Convertir todo el texto a minúsculas
            valor = valor.toLowerCase();
            // Aplicar la expresión regular para permitir solo letras y espacios
            valor = valor.replace(/[^a-zA-Z\s]/g, '');
            // Capitalizar la primera letra de cada palabra
            valor = valor.replace(/\b\w/g, function (char) {
                return char.toUpperCase();
            });
            // Actualizar el valor del input con solo las palabras capitalizadas
            input.value = valor;
        }

        // Función para capitalizar la Primera palabra en dirección y contacto
        function filtrarYCapitalizarDirYcontac(input) {
            // Obtener el valor actual del input
            let valor = input.value;
            // Convertir todo el texto a minúsculas
            valor = valor.toLowerCase();
            // Aplicar la expresión regular para permitir letras, números y algunos caracteres especiales
            valor = valor.replace(/[^a-zA-Z0-9\s°.,()-]/g, '');
            // Capitalizar la primera letra de cada palabra
            valor = valor.replace(/\b\w/g, function (char) {
                return char.toUpperCase();
            });
            // Actualizar el valor del input con solo las palabras capitalizadas
            input.value = valor;
        }
    </script>
}
