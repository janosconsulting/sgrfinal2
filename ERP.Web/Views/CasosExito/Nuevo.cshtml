@model Mantenimiento.Negocio.Poco.GestionarCasosExitoPoco
@using Newtonsoft.Json


@{
    Layout = "~/Views/Shared/_Layout2.cshtml";
}

<style>
    .Ndocument-error {
        border: 1px solid red;
    }

        .Ndocument-error:focus {
            border: 1px solid red;
        }
</style>
<!--begin::Content wrapper-->
<div class="d-flex flex-column flex-column-fluid">
    <!--begin::Toolbar-->
    <div id="kt_app_toolbar" class="app-toolbar pt-7 pt-lg-10">
        <!--begin::Toolbar container-->
        <div id="kt_app_toolbar_container" class="app-container container-fluid d-flex align-items-stretch">
            <!--begin::Toolbar wrapper-->
            <div class="app-toolbar-wrapper d-flex flex-stack flex-wrap gap-4 w-100">
                <!--begin::Page title-->
                <div class="page-title d-flex flex-column justify-content-center gap-1 me-3">
                    <!--begin::Title-->
                    <h1 class="page-heading d-flex flex-column justify-content-center text-dark fw-bold fs-3 m-0">
                        NUEVO
                        CASO DE ÉXITO

                    </h1>
                    <!--end::Title-->
                    <!--begin::Breadcrumb-->
                    <ul class="breadcrumb breadcrumb-separatorless fw-semibold fs-7 my-0">
                        <!--begin::Item-->
                        <li class="breadcrumb-item text-muted">
                            <a href="@Url.Action("Index","CasosExito")" class="text-muted text-hover-primary">Home</a>
                        </li>
                        <!--end::Item-->
                        <!--begin::Item-->
                        <li class="breadcrumb-item">
                            <span class="bullet bg-gray-400 w-5px h-2px"></span>
                        </li>
                        <!--end::Item-->
                        <!--begin::Item-->
                        <li class="breadcrumb-item text-muted">Modúlos</li>
                        <!--end::Item-->
                    </ul>
                    <!--end::Breadcrumb-->
                </div>
                <!--end::Page title-->
            </div>
            <!--end::Toolbar wrapper-->
        </div>
        <!--end::Toolbar container-->
    </div>
    <!--end::Toolbar-->
    <!--begin::Content-->
    <div id="kt_app_content" class="app-content flex-column-fluid">
        <!--begin::Content container-->
        <div id="kt_app_content_container" class="app-container container-fluid">
            <!--begin::Form-->
            <form id="kt_add_cliente_form" class="form d-flex flex-column flex-lg-row">
                <!--begin::Main column-->
                <div class="d-flex flex-column flex-row-fluid gap-7 gap-lg-10">
                    <div class="d-flex flex-column gap-7 gap-lg-10">
                        <!--begin::General options-->
                        <div class="card card-flush py-4">
                            <!--begin::Card body-->
                            <div class="card-body pt-0">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="row mb-5 gx-1">
                                            <!--begin::Label-->
                                            <label class="required fs-5 fw-semibold mb-2" for="kt_clienteC_select">CLIENTE:</label>
                                            <!--end::Label-->
                                            <!--begin::Select-->
                                            <select id="kt_clienteC_select" name="idCliente" class="form-select" data-control="select2">
                                                <option value="">Seleccione cliente</option>
                                                @if (Model.listarClientes != null && Model.listarClientes.Any())
                                                {
                                                    foreach (var item in Model.listarClientes)
                                                    {
                                                        <option value="@item.idPersona" @(Model.CasosExito != null && item.idPersona == Model.CasosExito.idCliente ? "selected" : "")>

                                                            @item.nombreCli
                                                        </option>
                                                    }
                                                }
                                                else
                                                {
                                                    <option value="">No existen clientes</option>
                                                }
                                            </select>
                                            <!--end::Select-->
                                        </div>
                                        <div class="row mb-5 gx-1">
                                            <!--begin::Input group-->
                                            <!--begin::Label-->
                                            <label class="required fs-5 fw-semibold mb-2"
                                                   for="txtNombres">Titulo Caso de Éxito:</label>
                                            <!--end::Label-->
                                            <!--begin::Input-->
                                            <input type="text" id="txtNombres" class="form-control"
                                                   placeholder="Ingrese Titulo"
                                                   value="@Model.CasosExito.Titulo"
                                                   />
                                            <!--end::Input group-->
                                        </div>
                                        <div class="row mb-5 gx-1">
                                            <!--begin::Input group-->
                                            <!--begin::Label-->
                                            <label class="required fs-5 fw-semibold mb-2" for="txtDescripcion">
                                                DESCRIPCIÓN:
                                            </label>
                                            <!--end::Label-->
                                            <!--begin::Input-->
                                            <textarea id="txtDescripcion"
                                                      name="Descripcion"
                                                      class="form-control"
                                                      placeholder="Ingrese Descripción"
                                                      style="height: 130px;"
                                                      maxlength="600">@((Model.CasosExito != null) ? Model.CasosExito.Descripcion : "")</textarea>
                                            <!--end::Input group-->
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="row mb-5 gx-1">
                                            <!--begin::Label-->
                                            <label class="required fs-5 fw-semibold mb-2" for="kt_pais_select">PAIS:</label>
                                            <!--end::Label-->
                                            <!--begin::Select-->
                                            <select id="kt_pais_select" name="idPais" class="form-select" data-control="select2">
                                                <!-- Opción por defecto -->
                                                <option value="">Seleccione país</option>

                                                @if (Model.listarPaises != null && Model.listarPaises.Any())
                                                {
                                                    foreach (var item in Model.listarPaises)
                                                    {
                                                        var selected = (Model.CasosExito != null && item.idPais == Model.CasosExito.idPais) ? "selected" : "";
                                                        <option value="@item.idPais" @selected>@item.nombre</option>
                                                    }
                                                }
                                                else
                                                {
                                                    <!-- Si no hay países disponibles -->
                                                    <option value="">No existen países</option>
                                                }
                                            </select>
                                            <!--end::Select-->
                                        </div>
                                        <div class="row mb-5 gx-1">
                                            <!--begin::Label-->
                                            <label class="required fs-5 fw-semibold mb-2" for="kt_estado_select">ESTADO:</label>
                                            <!--end::Label-->
                                            <!--begin::Select-->
                                            <select id="kt_estado_select" name="estado" class="form-select" data-control="select2">
                                                <option value="">Seleccione estado</option>
                                                <option value="1" @(Model.CasosExito != null && Model.CasosExito.estado == 1 ? "selected" : "")>REGISTRADO</option>
                                                <option value="4" @(Model.CasosExito != null && Model.CasosExito.estado == 4 ? "selected" : "")>ACTUALIZADO</option>
                                            </select>
                                            <!--end::Select-->
                                        </div>

                                        <div class="row mb-5 gx-1">
                                            <!--begin::Input group-->
                                            <!--begin::Label-->
                                            <label class="fs-5 fw-semibold mb-2"
                                                   for="kt_datepicker_fecha">FECHA:</label>
                                            <!--end::Label-->
                                            <!--begin::Input-->
                                            <input type="text"
                                                   id="kt_datepicker_fecha"
                                                   class="form-control"
                                                   placeholder="Fecha"
                                                   disabled />
                                            <!--end::Input-->
                                        </div>
                                        <div class="form-group form-check mb-5">
                                            @Html.HiddenFor(model => model.CasosExito.mostrarEnWeb, new { value = "false" })

                                            @Html.CheckBoxFor(model => model.CasosExito.mostrarEnWeb, new { @class = "form-check-input", id = "mostrarEnWeb" })

                                            <label class="form-check-label" for="mostrarEnWeb" style="font-size: 1.1rem;">
                                                ¿Mostrar en la página web?
                                            </label>
                                        </div>
                                    </div>                                   
                                       <div class="row mb-5 gx-1">
                                            <!-- CAMBIO -->
                                            <label class="required fs-5 fw-semibold mb-2" for="txtCambio">CAMBIO:</label>
                                            <textarea id="txtCambio" name="cambio" class="form-control summernote" placeholder="Ingrese cambio">@Model.CasosExito.cambio</textarea>
                                        </div>
                                        <div class="row mb-5 gx-1">
                                            <!-- RESULTADOS -->
                                            <label class="required fs-5 fw-semibold mb-2" for="txtResultados">RESULTADOS:</label>
                                            <textarea id="txtResultados" name="resultados" class="form-control summernote" placeholder="Ingrese resultados">@Model.CasosExito.resultados</textarea>
                                        </div>
                                        <div class="row mb-5 gx-1">
                                            <!--begin::Input group-->
                                            <div class="mb-10 fv-row">
                                                <!--begin::Dropzone-->
                                                <div class="dropzone" id="kt_dropzonejs_banner">
                                                    <!--begin::Message-->
                                                    <div class="dz-message needsclick">
                                                        <i class="ki-duotone ki-file-up fs-3x text-primary">
                                                            <span class="path1"></span><span class="path2"></span>
                                                        </i>
                                                        <!--begin::Info-->
                                                        <div class="ms-4">
                                                            <h3 class="fs-5 fw-bold text-gray-900 mb-1">
                                                                Suelte la imagen aquí o haga clic para subirla.
                                                            </h3>
                                                        </div>
                                                        <!--end::Info-->
                                                    </div>
                                                </div>
                                                <!--end::Dropzone-->
                                            </div>
                                            <!--end::Input group-->
                                        </div>

                                    </div>
                                <!--end::Card header-->
                            </div>
                            <!--end::General options-->
                        </div>
                        <!--end::Tab content-->
                        <div class="d-flex justify-content-end">
                            <!--begin::Button-->
                            <a href="@Url.Action("Index","CasosExito")" id="kt_ecommerce_add_product_cancel"
                               class="btn btn-light me-5">Cancelar</a>
                            <!--end::Button-->
                            <!--begin::Button-->
                            <button type="button" id="btnGuardar" onclick="Guardar();" class="btn btn-primary">
                                <span class="indicator-label">Guardar</span>
                                <span class="indicator-progress">
                                    Espere un momento...
                                    <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                                </span>
                            </button>
                            <!--end::Button-->
                        </div>
                    </div>
                    <!--end::Main column-->
                </div>
            </form>
            <!--end::Form-->
        </div>
        <!--end::Content container-->
    </div>
    <!--end::Content-->
</div>
<!--end::Content wrapper-->

@section Scripts {
    <script src="@Url.Content("~/Scripts/library.js?v=5.0")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/metronic/plugins/custom/formrepeater/formrepeater.bundle.js")"></script>
    <link href="https://cdn.jsdelivr.net/npm/summernote@0.8.20/dist/summernote-lite.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/summernote@0.8.20/dist/summernote-lite.min.js"></script>
    <style>
        /* Asegura que la imagen dentro de Dropzone tenga un tamaño máximo */
        #kt_dropzonejs_banner .dz-image img {
            max-width: 130px !important;
            max-height: 130px !important;
            object-fit: contain; /* Mantiene proporción */
        }
    </style>

    <script>
  var imagenDropzone;

  Dropzone.autoDiscover = false;

  $(document).ready(function () {
      imagenDropzone = new Dropzone("#kt_dropzonejs_banner", {
          url: "#", // No se envía automáticamente
          autoProcessQueue: false,
          maxFiles: 1,
          acceptedFiles: ".jpg,.jpeg,.png",
          addRemoveLinks: true,
          dictDefaultMessage: "Suelta la imagen aquí o haz clic.",
          thumbnailWidth: 150,
          thumbnailHeight: 150
      });

      // Ruta de la imagen guardada (desde Razor)
      var rutaImagen = '@Url.Content("~/Uploads/Files/CasosExito/" + Model.CasosExito.nombreArchivo)';
      var nombreArchivo = '@Model.CasosExito.nombreArchivo';

      if (nombreArchivo && nombreArchivo !== "") {
          // Crear un archivo falso para Dropzone
          var mockFile = { name: nombreArchivo, size: 12345 };

          // Añadir el archivo falso a Dropzone
          imagenDropzone.emit("addedfile", mockFile);
          imagenDropzone.emit("thumbnail", mockFile, rutaImagen);
          imagenDropzone.emit("complete", mockFile);
          imagenDropzone.files.push(mockFile);

          // Limitar a 1 archivo para evitar más cargas
          imagenDropzone.options.maxFiles = 1;
      }
  });
    </script>



    <script>

        $(document).ready(function () {
            $('.summernote').summernote({
                placeholder: 'Escribe aquí...',
                tabsize: 2,
                height: 130,
                toolbar: [
                    ['style', ['style']],
                    ['font', ['bold', 'italic', 'underline', 'clear']],
                    ['fontname', ['fontname']],
                    ['fontsize', ['fontsize']],
                    ['color', ['color']],
                    ['para', ['ul', 'ol', 'paragraph']],
                    ['table', ['table']],
                    ['insert', ['link', 'picture', 'video']],
                    ['view', ['fullscreen', 'codeview', 'help']]
                ]
            });
            $("#kt_datepicker_fecha").flatpickr({
                dateFormat: 'd/m/Y',
                locale: spanishLocale,
                defaultDate: new Date(),
            });

            // Agrega el evento input al campo txtNroIdentidad
        });

        let botonDesactivado = false;

        function Validar() {

            if ($("#txtNombres").val() == "") {
                ShowMessage(0, "Debe ingresar sus nombres");
                return false;
            }
            if (botonDesactivado) {
                // El botón está desactivado, mostrar mensaje de advertencia
                Swal.fire({
                    icon: 'warning',
                    title: 'Advertencia',
                    text: 'No se pueden guardar los datos ya que previamente el botón estaba desactivado',
                    confirmButtonText: 'OK'
                });
                return false;
            }

            return true;
        }
         let isEditing = @Html.Raw(JsonConvert.SerializeObject(Model.IsEditing));
        function Guardar() {
            if (!Validar()) {
                return false;
            }

            var estadoSeleccionado = $("#kt_estado_select").val();


            var formData = new FormData();
            // Adjuntar imagen solo si fue cargada y es un archivo real
            if (imagenDropzone.files.length > 0) {
                let archivo = imagenDropzone.files[0];

                // Validar que sea un archivo real (no un mock)
                if (archivo instanceof File) {
                    let extension = archivo.name.split('.').pop();
                    let nuevoNombre = archivo.name; // Usa el nombre original o genera uno nuevo si deseas

                    formData.append("archivoImagen", archivo, nuevoNombre); // ✅ Solo si es File real
                }
            }

            formData.append('CasosExito.idCaso', @Model.CasosExito.idCaso); // si es nuevo, será 0
            formData.append('CasosExito.idCliente', $("#kt_clienteC_select").val());
            formData.append('CasosExito.Titulo', $("#txtNombres").val());
            formData.append('CasosExito.Descripcion', $("#txtDescripcion").val());
            formData.append('CasosExito.idPais', $("#kt_pais_select").val());
            formData.append('CasosExito.Cambio', $("#txtCambio").summernote('code'));
            formData.append('CasosExito.Resultados', $("#txtResultados").summernote('code'));
            formData.append('CasosExito.fechaRegistro', $("#kt_datepicker_fecha").val());
            formData.append('CasosExito.mostrarEnWeb', $('#mostrarEnWeb').is(':checked'));
            formData.append('CasosExito.estado', estadoSeleccionado);



           /* console.log(selectedIndex);
            console.log("dato del select:");
            console.log("Contenido de formData:");

            for (let pair of formData.entries()) {
                console.log(pair[0] + ": " + pair[1]);
            }*/
            
            $.ajax({
                url: "@Url.Action("Guardar", "CasosExito")",
                type: "POST",
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    let message = isEditing ? "¡El caso se ha actualizado correctamente!" : "¡El caso se ha registrado correctamente!";
                    Swal.fire({
                        text: message,
                        icon: "success",
                        buttonsStyling: false,
                        confirmButtonText: "Listo",
                        customClass: { confirmButton: "btn btn-primary" },
                    }).then(function () {
                        window.location.href = '@Url.Action("Index", "CasosExito")';
                    });
                },
                error: function (error) {
                    //console.error("Error al enviar el formulario");
                    // Mostrar mensaje de error
                    Swal.fire({
                        text: "Se produjo un error al enviar el formulario. Por favor, inténtalo de nuevo.",
                        icon: "error",
                        buttonsStyling: false,
                        confirmButtonText: "Ok",
                        customClass: { confirmButton: "btn btn-primary" },
                    });
                },
            });
        }



        // Función para capitalizar la Primera palabra
        function filtrarYCapitalizar(input) {
            // Obtener el valor actual del input
            let valor = input.value;
            // Convertir todo el texto a minúsculas
            valor = valor.toLowerCase();
            // Aplicar la expresión regular para permitir solo letras y espacios
            valor = valor.replace(/[^a-zA-Z\s]/g, '');
            // Capitalizar la primera letra de cada palabra
            valor = valor.replace(/\b\w/g, function (char) {
                return char.toUpperCase();
            });
            // Actualizar el valor del input con solo las palabras capitalizadas
            input.value = valor;
        }

        // Función para capitalizar la Primera palabra en dirección y contacto
        function filtrarYCapitalizarDirYcontac(input) {
            // Obtener el valor actual del input
            let valor = input.value;
            // Convertir todo el texto a minúsculas
            valor = valor.toLowerCase();
            // Aplicar la expresión regular para permitir letras, números y algunos caracteres especiales
            valor = valor.replace(/[^a-zA-Z0-9\s°.,()-]/g, '');
            // Capitalizar la primera letra de cada palabra
            valor = valor.replace(/\b\w/g, function (char) {
                return char.toUpperCase();
            });
            // Actualizar el valor del input con solo las palabras capitalizadas
            input.value = valor;
        }

    </script>
    <style>
        .note-editor .note-toolbar {
            background-color: #f1f1f1; /* Fondo gris */
            border-radius: 5px;
            padding: 10px;
        }
    </style>
}

