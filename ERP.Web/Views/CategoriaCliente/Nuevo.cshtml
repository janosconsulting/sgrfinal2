@model Mantenimiento.Negocio.Poco.GestionarCategoriaClientePoco
@using Newtonsoft.Json


@{
    Layout = "~/Views/Shared/_Layout2.cshtml";
}

<style>
    .Ndocument-error {
        border: 1px solid red;
    }

        .Ndocument-error:focus {
            border: 1px solid red;
        }
</style>
<!--begin::Content wrapper-->
<div class="d-flex flex-column flex-column-fluid">
    <!--begin::Toolbar-->
    <div id="kt_app_toolbar" class="app-toolbar pt-7 pt-lg-10">
        <!--begin::Toolbar container-->
        <div id="kt_app_toolbar_container" class="app-container container-fluid d-flex align-items-stretch">
            <!--begin::Toolbar wrapper-->
            <div class="app-toolbar-wrapper d-flex flex-stack flex-wrap gap-4 w-100">
                <!--begin::Page title-->
                <div class="page-title d-flex flex-column justify-content-center gap-1 me-3">
                    <!--begin::Title-->
                    <h1 class="page-heading d-flex flex-column justify-content-center text-dark fw-bold fs-3 m-0">
                        NUEVA
                       CATEGORIA CLIENTE
                    </h1>
                    <!--end::Title-->
                    <!--begin::Breadcrumb-->
                    <ul class="breadcrumb breadcrumb-separatorless fw-semibold fs-7 my-0">
                        <!--begin::Item-->
                        <li class="breadcrumb-item text-muted">
                            <a href="@Url.Action("Index","CategoriaCliente")" class="text-muted text-hover-primary">Home</a>
                        </li>
                        <!--end::Item-->
                        <!--begin::Item-->
                        <li class="breadcrumb-item">
                            <span class="bullet bg-gray-400 w-5px h-2px"></span>
                        </li>
                        <!--end::Item-->
                        <!--begin::Item-->
                        <li class="breadcrumb-item text-muted">Modúlos</li>
                        <!--end::Item-->
                    </ul>
                    <!--end::Breadcrumb-->
                </div>
                <!--end::Page title-->
            </div>
            <!--end::Toolbar wrapper-->
        </div>
        <!--end::Toolbar container-->
    </div>
    <!--end::Toolbar-->
    <!--begin::Content-->
    <div id="kt_app_content" class="app-content flex-column-fluid">
        <!--begin::Content container-->
        <div id="kt_app_content_container" class="app-container container-fluid">
            <!--begin::Form-->
            <form id="kt_add_cliente_form" class="form d-flex flex-column flex-lg-row">
                <!--begin::Main column-->
                <div class="d-flex flex-column flex-row-fluid gap-7 gap-lg-10">
                    <div class="d-flex flex-column gap-7 gap-lg-10">
                        <!--begin::General options-->
                        <div class="card card-flush py-4">
                            <!--begin::Card body-->
                            <div class="card-body pt-0">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="row mb-5 gx-1">
                                            <!--begin::Input group-->
                                            <!--begin::Label-->
                                            <label class="required fs-5 fw-semibold mb-2"
                                                   for="txtNombres">Nombre de Categoría:</label>
                                            <!--end::Label-->
                                            <!--begin::Input-->
                                            <input type="text" id="txtNombres" class="form-control"
                                                   placeholder="Ingrese nombres de categoría"
                                                   value="@Model.CategoriaCliente.nombre"
                                                   oninput="filtrarYCapitalizar(this)" />
                                            <!--end::Input group-->
                                        </div>
                                        <div class="row mb-5 gx-1">
                                            <!--begin::Label-->
                                            <label class="required fs-5 fw-semibold mb-2"
                                                   for="kt_estado_select">ESTADO:</label>
                                            <!--end::Label-->
                                            <!--begin::Select-->
                                            <select id="kt_estado_select" class="form-select" data-control="select2">
                                                <option value="">Seleccione estado</option>
                                                <option value="1">REGISTRADO</option>
                                                <option value="4">EN PROCESO</option>
                                            </select>
                                            <!--end::Select-->
                                        </div>
                                    </div>                                   
                                </div>
                                <!--end::Card header-->
                            </div>
                            <!--end::General options-->
                        </div>
                        <!--end::Tab content-->
                        <div class="d-flex justify-content-end">
                            <!--begin::Button-->
                            <a href="@Url.Action("Index","CategoriaCliente")" id="kt_ecommerce_add_product_cancel"
                               class="btn btn-light me-5">Cancelar</a>
                            <!--end::Button-->
                            <!--begin::Button-->
                            <button type="button" id="btnGuardar" onclick="Guardar();" class="btn btn-primary">
                                <span class="indicator-label">Guardar</span>
                                <span class="indicator-progress">
                                    Espere un momento...
                                    <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                                </span>
                            </button>
                            <!--end::Button-->
                        </div>
                    </div>
                    <!--end::Main column-->
                </div>
            </form>
            <!--end::Form-->
        </div>
        <!--end::Content container-->
    </div>
    <!--end::Content-->
</div>
<!--end::Content wrapper-->

@section Scripts {
    <script src="@Url.Content("~/Scripts/library.js?v=5.0")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/metronic/plugins/custom/formrepeater/formrepeater.bundle.js")"></script>

    <script>

        $(document).ready(function () {
            // Agrega el evento input al campo txtNroIdentidad           
        });

        let botonDesactivado = false;      

        function Validar() {
                  
            if ($("#txtNombres").val() == "") {
                ShowMessage(0, "Debe ingresar sus nombres");
                return false;
            }           
            if (botonDesactivado) {
                // El botón está desactivado, mostrar mensaje de advertencia
                Swal.fire({
                    icon: 'warning',
                    title: 'Advertencia',
                    text: 'No se pueden guardar los datos ya que previamente el botón estaba desactivado',
                    confirmButtonText: 'OK'
                });
                return false;
            }

            return true;
        }

        function Guardar() {
            if (!Validar()) {
                return false;
            }
           
            var estadoSeleccionado = $("#kt_estado_select").val();


            var formData = new FormData();

            formData.append('CategoriaCliente.idCategoria', @Model.CategoriaCliente.idCategoria);           
            formData.append('CategoriaCliente.nombre', $("#txtNombres").val())           
            formData.append('CategoriaCliente.estado', estadoSeleccionado);

           /* console.log(selectedIndex);
            console.log("dato del select:");
            console.log("Contenido de formData:");

            for (let pair of formData.entries()) {
                console.log(pair[0] + ": " + pair[1]);
            }*/
            let isEditing = @Html.Raw(JsonConvert.SerializeObject(Model.IsEditing));


            $.ajax({
                url: "@Url.Action("Guardar", "CategoriaCliente")",
                type: "POST",
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    let message = isEditing ? "¡La Categoría Cliente se ha actualizado correctamente!" : "¡La Categoria Cliente se ha registrado correctamente!";
                    Swal.fire({
                        text: message,
                        icon: "success",
                        buttonsStyling: false,
                        confirmButtonText: "Listo",
                        customClass: { confirmButton: "btn btn-primary" },
                    }).then(function () {
                        window.location.href = '@Url.Action("Index", "CategoriaCliente")';
                    });
                },
                error: function (error) {
                    //console.error("Error al enviar el formulario");
                    // Mostrar mensaje de error
                    Swal.fire({
                        text: "Se produjo un error al enviar el formulario. Por favor, inténtalo de nuevo.",
                        icon: "error",
                        buttonsStyling: false,
                        confirmButtonText: "Ok",
                        customClass: { confirmButton: "btn btn-primary" },
                    });
                },
            });
        }

       

        // Función para capitalizar la Primera palabra
        function filtrarYCapitalizar(input) {
            // Obtener el valor actual del input
            let valor = input.value;
            // Convertir todo el texto a minúsculas
            valor = valor.toLowerCase();
            // Aplicar la expresión regular para permitir solo letras y espacios
            valor = valor.replace(/[^a-zA-Z\s]/g, '');
            // Capitalizar la primera letra de cada palabra
            valor = valor.replace(/\b\w/g, function (char) {
                return char.toUpperCase();
            });
            // Actualizar el valor del input con solo las palabras capitalizadas
            input.value = valor;
        }

        // Función para capitalizar la Primera palabra en dirección y contacto
        function filtrarYCapitalizarDirYcontac(input) {
            // Obtener el valor actual del input
            let valor = input.value;
            // Convertir todo el texto a minúsculas
            valor = valor.toLowerCase();
            // Aplicar la expresión regular para permitir letras, números y algunos caracteres especiales
            valor = valor.replace(/[^a-zA-Z0-9\s°.,()-]/g, '');
            // Capitalizar la primera letra de cada palabra
            valor = valor.replace(/\b\w/g, function (char) {
                return char.toUpperCase();
            });
            // Actualizar el valor del input con solo las palabras capitalizadas
            input.value = valor;
        }

    </script>
}

