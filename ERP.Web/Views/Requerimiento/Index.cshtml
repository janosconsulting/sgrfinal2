@model Mantenimiento.Negocio.Poco.GestionarRequerimientoPoco

@{
    Layout = "~/Views/Shared/_Layout2.cshtml";
}
<style>
    .badge-custom-blue {
        background-color: #007bff; /* Elige el tono de azul que prefieras */
        color: white; /* Asegura que el texto sea legible */
        padding: 0.25em 0.5em; /* Ajusta el padding si es necesario */
        border-radius: 0.25rem; /* Mantén el mismo estilo de badge */
    }
</style>
<!--begin::Content wrapper-->
<div class="d-flex flex-column flex-column-fluid">
    <!--begin::Toolbar-->
    <div id="kt_app_toolbar" class="app-toolbar pt-7 pt-lg-10">
        <!--begin::Toolbar container-->
        <div id="kt_app_toolbar_container" class="app-container container-fluid d-flex align-items-stretch">
            <!--begin::Toolbar wrapper-->
            <div class="app-toolbar-wrapper d-flex flex-stack flex-wrap gap-4 w-100">
                <!--begin::Page title-->
                <div class="page-title d-flex flex-column justify-content-center gap-1 me-3">
                    <!--begin::Title-->
                    <h1 class="page-heading d-flex flex-column justify-content-center text-dark fw-bold fs-3 m-0">
                        Requerimiento</h1>
                    <!--end::Title-->
                    <!--begin::Breadcrumb-->
                    <ul class="breadcrumb breadcrumb-separatorless fw-semibold fs-7 my-0">
                        <!--begin::Item-->
                        <li class="breadcrumb-item text-muted">
                            <a href="@Url.Action("Index","Dashboard")" class="text-muted text-hover-primary">Home</a>
                        </li>
                        <!--end::Item-->
                        <!--begin::Item-->
                        <li class="breadcrumb-item">
                            <span class="bullet bg-gray-400 w-5px h-2px"></span>
                        </li>
                        <!--end::Item-->
                        <!--begin::Item-->
                        <li class="breadcrumb-item text-muted">Procesos</li>
                        <!--end::Item-->
                        <!--begin::Item-->
                        <li class="breadcrumb-item">
                            <span class="bullet bg-gray-400 w-5px h-2px"></span>
                        </li>
                        <!--end::Item-->
                        <!--begin::Item-->
                        <li class="breadcrumb-item text-muted">Gestión de Requerimiento</li>
                        <!--end::Item-->
                        <!--begin::Item-->
                        <li class="breadcrumb-item">
                            <span class="bullet bg-gray-400 w-5px h-2px"></span>
                        </li>
                    </ul>
                    <!--end::Breadcrumb-->
                </div>
                <!--end::Page title-->

            </div>
            <!--end::Toolbar wrapper-->
        </div>
        <!--end::Toolbar container-->
    </div>
    <!--end::Toolbar-->
    <!--begin::Content-->
    <div id="kt_app_content" class="app-content flex-column-fluid">
        <!--begin::Content container-->
        <div id="kt_app_content_container" class="app-container container-fluid">
            <!--begin::Products-->
            <div class="card card-flush">
                <!--begin::Card header-->
                <div class="card-header align-items-center py-5 gap-2 gap-md-5">
                    <!--begin::Card title-->
                    <div class="card-title">
                        <!--begin::Search-->
                        <div class="d-flex align-items-center position-relative my-1">
                            <!--begin::Svg Icon | path: icons/duotune/general/gen021.svg-->
                            <span class="svg-icon svg-icon-1 position-absolute ms-4">
                                <svg width="24" height="24" viewBox="0 0 24 24" fill="none"
                                     xmlns="http://www.w3.org/2000/svg">
                                    <rect opacity="0.5" x="17.0365" y="15.1223" width="8.15546" height="2" rx="1"
                                          transform="rotate(45 17.0365 15.1223)" fill="currentColor" />
                                    <path d="M11 19C6.55556 19 3 15.4444 3 11C3 6.55556 6.55556 3 11 3C15.4444 3 19 6.55556 19 11C19 15.4444 15.4444 19 11 19ZM11 5C7.53333 5 5 7.53333 5 11C5 14.4667 7.53333 17 11 17C14.4667 17 17 14.4667 17 11C17 7.53333 14.4667 5 11 5Z"
                                          fill="currentColor" />
                                </svg>
                            </span>
                            <!--end::Svg Icon-->
                            <input type="text" data-kt-datatable-requeriment-filter="search"
                                   class="form-control form-control-solid w-250px ps-14" placeholder="Buscar requerimiento" />
                        </div>
                        <!--end::Search-->
                    </div>
                    <!--end::Card title-->
                    <!--begin::Card toolbar-->
                    <div class="card-toolbar flex-row-fluid justify-content-end gap-5">
                        <!--begin::Filter-->
                        <button type="button" class="btn btn-light-success me-3" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end">
                            <i class="las la-filter fs-2"></i>Filtrar
                        </button>
                        <!--begin::Menu 1-->
                        <div class="menu menu-sub menu-sub-dropdown w-360px w-md-400px" data-kt-menu="true">
                            <!--begin::Header-->
                            <div class="px-7 py-5">
                                <div class="fs-5 text-gray-900 fw-bold">Opciones de filtrado</div>
                            </div>
                            <!--end::Header-->
                            <!--begin::Separator-->
                            <div class="separator border-gray-200"></div>
                            <!--end::Separator-->
                            <!--begin::Content-->
                            <div class="px-7 py-5" data-kt-subscription-table-filter="form">
                                <!--begin::Input group-->
                                <div class="mb-10">
                                    <label class="form-label fs-6 fw-semibold" for="kt_cliente_filtro_select">Cliente:</label>
                                    <select id="kt_cliente_filtro_select" class="form-select" data-control="select2">
                                        <option value="">Seleccione cliente</option>
                                        @if (Model.ListarClientes.Any())
                                        {
                                            foreach (var item in Model.ListarClientes)
                                            {
                                                <option value="@item.idPersona">@item.nombreCli</option>
                                            }
                                        }
                                        else
                                        {
                                            // Si no hay trabajadores disponibles, mostrar una opción por defecto
                                            <option value="">No existen clientes</option>
                                        }
                                    </select>
                                </div>
                                <!--end::Input group-->
                                <!--begin::Input group-->
                                <div class="mb-10">
                                    <label class="form-label fs-6 fw-semibold" for="kt_proyecto_filtro_select">Proyecto:</label>
                                    <select id="kt_proyecto_filtro_select" class="form-select" data-control="select2">
                                        <option value="">Seleccione proyecto</option>
                                        @if (Model.ListarProyectos.Any())
                                        {
                                            foreach (var item in Model.ListarProyectos)
                                            {
                                                <option value="@item.idProyecto">@item.nombre</option>
                                            }
                                        }
                                        else
                                        {
                                            // Si no hay proyectos disponibles, mostrar una opción por defecto
                                            <option value="">No existen proyectos</option>
                                        }
                                    </select>
                                </div>
                                <!--end::Input group-->
                                <!--begin::Input group-->
                                <div class="mb-10">
                                    <label class="form-label fs-6 fw-semibold" for="kt_estado_filtro_select">Estado:</label>
                                    <select id="kt_estado_filtro_select" class="form-select" data-control="select2">
                                        <option value="">Seleccione estado</option>
                                        <option value="1">REGISTRADO</option>
                                        <option value="2">EN PROCESO</option>
                                        <option value="3">FINALIZADO</option>
                                    </select>
                                </div>
                                <!--end::Input group-->
                                <!--begin::Actions-->
                                <div class="d-flex justify-content-end">
                                    <button type="reset" class="btn btn-light btn-active-light-primary fw-semibold me-2 px-6" data-kt-menu-dismiss="true" data-kt-subscription-table-filter="reset" onclick="Reset();">Cancelar</button>
                                    <button type="button" class="btn btn-success fw-semibold px-6" data-kt-menu-dismiss="true" onclick="Filtrar();">Aplicar</button>
                                </div>
                                <!--end::Actions-->
                            </div>
                            <!--end::Content-->
                        </div>
                        <!--end::Menu 1-->
                        <!--end::Filter-->
                        <!--begin::Add product-->
                        <a href="@Url.Action("Nuevo","Requerimiento")" class="btn btn-primary">Nuevo</a>
                        <!--end::Add product-->
                    </div>
                    <!--end::Card toolbar-->
                </div>
                <!--end::Card header-->
                <!--begin::Card body-->
                <div class="card-body pt-0">
                    <!--begin::Datatable-->
                    <table id="kt_datatable_requeriment" class="table align-middle table-row-dashed fs-6 gy-5">
                        <thead>
                            <tr class="text-center text-gray-400 fw-bold fs-7 text-uppercase gs-0">
                                <th>Id</th>
                                <th>Codigo</th>
                                <th>Cliente</th>
                                <th>Proyecto</th>
                                <th>Fec. Ini.</th>
                                <th>Fec. Fin.</th>
                                <th>Solicitante</th>
                                <th>Tipo Req.</th>
                                <th>Resumen</th>
                                <th>Prioridad</th>
                                <th>Estado Req</th>
                                <th>Total Items</th>
                                <th>Aprobados</th>
                                <th class="text-end min-w-90px">Acciones</th>
                            </tr>
                        </thead>
                        <tbody class="text-gray-600 fw-semibold">
                        </tbody>
                    </table>
                    <!--end::Datatable-->
                </div>
                <!--end::Card body-->
            </div>
            <!--end::Products-->
        </div>
        <!--end::Content container-->
    </div>
    <!--end::Content-->
</div>
<!--end::Content wrapper-->

@section Scripts {
    <script src="@Url.Content("~/Scripts/library.js?v=5.0")" type="text/javascript"></script>
    <script>

        var dt;
        var table;
        var cliente = "";
        var proyecto = "";
        var estado = "";

        function Filtrar() {

            cliente = $('#kt_cliente_filtro_select').val();
            proyecto = $('#kt_proyecto_filtro_select').val();
            estado = $('#kt_estado_filtro_select').val();

            // Llamar al método del servidor para obtener los datos filtrados
            $.ajax({
                url: '@Url.Action("Listar", "Requerimiento")',
                type: 'GET',
                dataType: 'json',
                data: {
                    cliente: cliente,
                    proyecto: proyecto,
                    estado: estado
                },
                success: function (data) {
                    // Limpiar y recargar la tabla con los nuevos datos
                    dt.clear().rows.add(data).draw();
                },
                error: function (xhr, status, error) {
                    console.error(xhr.responseText);
                }
            });
        }

        function Reset() {

            cliente = $('#kt_cliente_filtro_select').val('').trigger('change');
            proyecto = $('#kt_proyecto_filtro_select').val('').trigger('change');
            estado = $('#kt_estado_filtro_select').val('').trigger('change');

            Filtrar();
        }

        var KTDatatablesServerSide = function () {

            var initDatatable = function () {
                dt = $('#kt_datatable_requeriment').DataTable({
                    processing: true,

                    "oLanguage": {
                        "sInfo": "Mostrando _START_ a _END_ de _TOTAL_ registros",// text you want show for info section
                    },
                    "language": {
                        "emptyTable": "Sin datos",
                        "infoEmpty": "Sin registros"
                    },

                    ajax: {
                        url: '@Url.Action("Listar", "Requerimiento")', // Ruta del método de acción que obtiene los datos
                        type: 'GET',
                        dataType: 'json',
                        dataSrc: function (response) {
                            // Manipula los datos si es necesario antes de mostrarlos en el DataTable
                            return response;
                        }
                    },
                    columns: [
                        { data: 'idRequerimiento' },
                        { data: 'codigo', title: "Código", searchable: true},
                        { data: 'nombreCli', title: "Cliente", searchable: true },
                        { data: 'nombreProyec', title: "Proyecto", searchable: true },
                        {
                            data: 'fechaInicio',
                            title: "Fec. Ini.",
                            searchable: true,
                            render: function (data, type, row) {
                                // Si el tipo de renderizado no es 'display', devuelve los datos sin procesar
                                if (type !== 'display') {
                                    return data;
                                }
                                // Convierte los ticks de fecha a una fecha JavaScript
                                var fecha = new Date(parseInt(data.substr(6)));
                                // Formatea la fecha al formato deseado (dd-mm-yyyy)
                                var dia = fecha.getDate().toString().padStart(2, '0');
                                var mes = (fecha.getMonth() + 1).toString().padStart(2, '0'); // Los meses son indexados desde 0
                                var anio = fecha.getFullYear();
                                // Concatena los componentes de la fecha en el formato deseado
                                var fechaFormateada = dia + '/' + mes + '/' + anio;
                                return fechaFormateada;
                            }
                        },
                        {
                            data: 'fechaFin',
                            title: "Fec. Fin.",
                            searchable: true,
                            render: function (data, type, row) {
                                // Si el tipo de renderizado no es 'display', devuelve los datos sin procesar
                                if (type !== 'display') {
                                    return data;
                                }
                                // Convierte los ticks de fecha a una fecha JavaScript
                                var fecha = new Date(parseInt(data.substr(6)));
                                // Formatea la fecha al formato deseado (dd-mm-yyyy)
                                var dia = fecha.getDate().toString().padStart(2, '0');
                                var mes = (fecha.getMonth() + 1).toString().padStart(2, '0'); // Los meses son indexados desde 0
                                var anio = fecha.getFullYear();
                                // Concatena los componentes de la fecha en el formato deseado
                                var fechaFormateada = dia + '/' + mes + '/' + anio;
                                return fechaFormateada;
                            }
                        },
                        { data: 'solicitante', title: "Solicitante", searchable: true },
                        { data: 'nombreReq', title: "Tipo Req.", searchable: true },
                        { data: 'resumen', title: "Resumen", searchable: true },
                        {
                            data: 'prioridad',
                            title: "Prioridad",
                            searchable: true,
                            render: function (data, type, row) {
                                let displayText = '';
                                let badgeClass = '';

                                if (data === 1) {
                                    displayText = 'BAJA';
                                    badgeClass = 'badge badge-secondary p-2';
                                } else if (data === 2) {
                                    displayText = 'MEDIA';
                                    badgeClass = 'badge badge-warning p-2';
                                } else if (data === 3) {
                                    displayText = 'ALTA';
                                    badgeClass = 'badge badge-danger p-2';
                                }

                                return '<span class="' + badgeClass + '">' + displayText + '</span>';
                            }
                        },
                        {
                            data: 'estadoReq',
                            title: "Estado Req.",
                            searchable: true,
                            render: function (data, type, row) {
                                let displayText = '';
                                let badgeClass = '';

                                if (data === 1) {
                                    displayText = 'REGISTRADO';
                                    badgeClass = 'badge badge-primary p-2';
                                } else if (data === 2) {
                                    displayText = 'EN PROCESO';
                                    badgeClass = 'badge badge-custom-blue p-2';
                                } else if (data === 3) {
                                    displayText = 'FINALIZADO';
                                    badgeClass = 'badge badge-dark p-2';
                                }

                                return '<span class="' + badgeClass + '">' + displayText + '</span>';
                            }
                        },
                        {
                            data: 'totalItems',
                            title: "Total Items",
                            searchable: true,
                            render: function (data, type, row) {
                                if (type !== 'display') {
                                    return data;
                                }
                                return '<span class="badge badge-circle badge-secondary">' + data + '</span>';
                            }
                        },
                        {
                            data: 'aprobados',
                            title: "Aprobados",
                            searchable: true,
                            render: function (data, type, row) {
                                if (type !== 'display') {
                                    return data;
                                }
                                return '<span class="badge badge-circle badge-secondary">' + data + '</span>';
                            }
                        },
                        { data: null },
                    ],
                    // Ordenar la tabla por el ID en orden descendente
                    order: [[0, 'desc']],
                    columnDefs: [{
                        targets: -1,
                        data: null,
                        orderable: false,
                        className: 'text-end',
                        render: function (data, type, row) {

                            return `
                                    <a href="#" class="btn btn-light btn-active-light-primary btn-sm" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end">
                            Acciones
                            <span class="svg-icon fs-5 m-0">
                            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                            <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                            <polygon points="0 0 24 0 24 24 0 24"></polygon>
                            <path d="M6.70710678,15.7071068 C6.31658249,16.0976311 5.68341751,16.0976311 5.29289322,15.7071068 C4.90236893,15.3165825 4.90236893,14.6834175 5.29289322,14.2928932 L11.2928932,8.29289322 C11.6714722,7.91431428 12.2810586,7.90106866 12.6757246,8.26284586 L18.6757246,13.7628459 C19.0828436,14.1360383 19.1103465,14.7686056 18.7371541,15.1757246 C18.3639617,15.5828436 17.7313944,15.6103465 17.3242754,15.2371541 L12.0300757,10.3841378 L6.70710678,15.7071068 Z" fill="currentColor" fill-rule="nonzero" transform="translate(12.000003, 11.999999) rotate(-180.000000) translate(-12.000003, -11.999999)"></path>
                            </g>
                            </svg>
                            </span>
                            </a>
                            <!--begin::Menu-->
                            <div class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-bold fs-7 w-125px py-4" data-kt-menu="true">
                            <!--begin::Menu item-->
                            <div class="menu-item px-3">
                            <a href="@Url.Action("Editar", "Requerimiento")?id=${row.idRequerimiento}" class="menu-link px-3" data-kt-docs-table-filter="edit_row">
                            Editar
                            </a>
                            </div>
                            <!--end::Menu item-->
                            <!--begin::Menu item-->
                            <div class="menu-item px-3">
                            <a href="#" class="menu-link px-3" data-kt-docs-table-filter="delete_row">
                            Eliminar
                            </a>
                            </div>
                            </div>
                            <!--end::Menu-->
                                `;
                        },
                    },
                    ]
                });

                table = dt.$;

                // Re-init functions on every table re-draw -- more info: https://datatables.net/reference/event/draw
                dt.on('draw', function () {
                    handleDeleteRows();
                    KTMenu.createInstances();
                });
            }

            var handleSearchDatatable = function () {
                const filterSearch = document.querySelector('[data-kt-datatable-requeriment-filter="search"]');
                filterSearch.addEventListener('keyup', function (e) {
                    dt.search(e.target.value).draw();
                });
            }

            // Delete customer
            var handleDeleteRows = () => {
                // Select all delete buttons
                const deleteButtons = document.querySelectorAll('[data-kt-docs-table-filter="delete_row"]');

                deleteButtons.forEach(d => {
                    // Delete button on click
                    d.addEventListener('click', function (e) {
                        e.preventDefault();

                        // Select parent row
                        const parent = e.target.closest('tr');

                        // Get customer name
                        const customerName = parent.querySelectorAll('td')[2].innerText;
                        const id = parent.querySelectorAll('td')[0].innerText;
                        //console.log(id);
                        // SweetAlert2 pop up --- official docs reference: https://sweetalert2.github.io/
                        Swal.fire({
                            text: "¿Esta seguro que desea eliminar requerimiento del cliente: " + customerName + "?",
                            icon: "warning",
                            showCancelButton: true,
                            buttonsStyling: false,
                            confirmButtonText: "Si, eliminar!",
                            cancelButtonText: "No, cancelar",
                            customClass: {
                                confirmButton: "btn fw-bold btn-danger",
                                cancelButton: "btn fw-bold btn-active-light-primary"
                            }
                        }).then(function (result) {
                            if (result.value) {

                                $.ajax
                                    ({
                                        type: "POST",
                                        url: "@Url.Action("Eliminar", "Requerimiento")",
                                        data: {
                                            id: id
                                        },
                                        success: function (res) {
                                            Swal.fire({
                                                text: "Has eliminado " + customerName + "!.",
                                                icon: "success",
                                                buttonsStyling: false,
                                                confirmButtonText: "Ok, entiendo!",
                                                customClass: {
                                                    confirmButton: "btn fw-bold btn-primary",
                                                }
                                            }).then(function () {
                                                // delete row data from server and re-draw datatable
                                                dt.ajax.reload();
                                            });
                                        }
                                    });

                            } else if (result.dismiss === 'cancel') {
                                Swal.fire({
                                    text: customerName + " no fue eliminado.",
                                    icon: "error",
                                    buttonsStyling: false,
                                    confirmButtonText: "Ok, entiendo!",
                                    customClass: {
                                        confirmButton: "btn fw-bold btn-primary",
                                    }
                                });
                            }
                        });
                    })
                });
            }

            // Public methods
            return {
                init: function () {
                    initDatatable();
                    handleSearchDatatable();
                    handleDeleteRows();
                }
            }
        }();

        $(document).ready(function () {
            KTUtil.onDOMContentLoaded(function () {
            KTDatatablesServerSide.init();
            });
        });

    </script>

}