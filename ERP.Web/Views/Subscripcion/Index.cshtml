@model Mantenimiento.Negocio.Poco.GestionarClientePoco

@{
    Layout = "~/Views/Shared/_Layout2.cshtml";
}
<style>
    .kpi {
        border: 1px solid var(--border);
        border-radius: 14px;
        padding: 14px;
        background: #fff;
        transition: transform 0.2s, box-shadow 0.2s;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

        .kpi:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.15);
        }

        .kpi .label {
            color: var(--muted);
            font-size: .85rem;
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .kpi .value {
            font-size: 1.4rem;
            font-weight: 800;
            margin: 5px 0;
        }

        .kpi .delta {
            font-size: .85rem;
        }

    .kpi-success {
        border-left: 4px solid #28a745;
        background: linear-gradient(135deg, #f8fff9 0%, #fff 100%);
    }

    .kpi-info {
        border-left: 4px solid #17a2b8;
        background: linear-gradient(135deg, #f0f8ff 0%, #fff 100%);
    }

    .kpi-danger {
        border-left: 4px solid #dc3545;
        background: linear-gradient(135deg, #fff5f5 0%, #fff 100%);
    }

    .kpi-warning {
        border-left: 4px solid #ffc107;
        background: linear-gradient(135deg, #fffef0 0%, #fff 100%);
    }

    .disabled {
        pointer-events: none;
        opacity: 0.5;
        cursor: not-allowed;
    }
</style>
<!--begin::Content wrapper-->
<div class="d-flex flex-column flex-column-fluid">
    <!--begin::Toolbar-->
    <div id="kt_app_toolbar" class="app-toolbar pt-7 pt-lg-10">
        <!--begin::Toolbar container-->
        <div id="kt_app_toolbar_container" class="app-container container-fluid d-flex align-items-stretch">
            <!--begin::Toolbar wrapper-->
            <div class="app-toolbar-wrapper d-flex flex-stack flex-wrap gap-4 w-100">
                <!--begin::Page title-->
                <div class="page-title d-flex flex-column justify-content-center gap-1 me-3">
                    <!--begin::Title-->
                    <div class="d-flex align-items-center gap-3">
                        <h1 class="page-heading text-dark fw-bold fs-3 m-0">
                            Subscripcion
                        </h1>
                        <button type="button" class="btn btn-outline-primary btn-sm" onclick="abrirModalGraficos()">
                            <i class="bi bi-bar-chart"></i> Ver Gráficos
                        </button>
                    </div>
                    <!--end::Title-->
                    <!--begin::Breadcrumb-->
                    <ul class="breadcrumb breadcrumb-separatorless fw-semibold fs-7 my-0">
                        <!--begin::Item-->
                        <li class="breadcrumb-item text-muted">
                            <a href="@Url.Action("Index","Dashboard")" class="text-muted text-hover-primary">Home</a>
                        </li>
                        <!--end::Item-->
                        <!--begin::Item-->
                        <li class="breadcrumb-item">
                            <span class="bullet bg-gray-400 w-5px h-2px"></span>
                        </li>
                        <!--end::Item-->
                        <!--begin::Item-->
                        <li class="breadcrumb-item text-muted">Procesos</li>
                        <!--end::Item-->
                        <!--begin::Item-->
                        <li class="breadcrumb-item">
                            <span class="bullet bg-gray-400 w-5px h-2px"></span>
                        </li>
                        <!--end::Item-->
                        <!--begin::Item-->
                        <li class="breadcrumb-item text-muted">Gestión de Subscripcion</li>
                        <!--end::Item-->
                        <!--begin::Item-->
                        <li class="breadcrumb-item">
                            <span class="bullet bg-gray-400 w-5px h-2px"></span>
                        </li>
                    </ul>
                    <!--end::Breadcrumb-->
                </div>
                <!--end::Page title-->
            </div>
            <!--end::Toolbar wrapper-->
        </div>
        <!--end::Toolbar container-->
    </div>
    <!--end::Toolbar-->
    <!--begin::Content-->
    <div id="kt_app_content" class="app-content flex-column-fluid">
        <!--begin::Content container-->
        <div id="kt_app_content_container" class="app-container container-fluid">
            <!--begin::Products-->
            <!-- KPIs -->
            <div class="row g-3 mb-3">
                <div class="col-6 col-md-3">
                    <div class="kpi kpi-success">
                        <div class="label"><i class="bi bi-check-circle-fill"></i> Ingresos cobrados (mes)</div>
                        <div class="value" id="kpiCobrados">S/ <span id="txCobrado"></span></div>
                        <div class="delta text-success" id="kpiCobradosDelta"><i class="bi bi-arrow-up"></i> vs. mes previo</div>
                    </div>
                </div>
                <div class="col-6 col-md-3">
                    <div class="kpi kpi-info">
                        <div class="label"><i class="bi bi-calendar-check"></i> Ingresos planificados (mes)</div>
                        <div class="value" id="kpiPlan">S/ <span id="txActivo"></span></div>
                        <div class="delta text-muted">Incluye vencidos por cobrar</div>
                    </div>
                </div>
                <div class="col-6 col-md-3">
                    <div class="kpi kpi-danger">
                        <div class="label"><i class="bi bi-exclamation-triangle-fill"></i> Vencidos</div>
                        <div class="value" id="kpiVencidos">0</div>
                        <div class="delta text-danger">por cobrar</div>
                    </div>
                </div>
                <div class="col-6 col-md-3">
                    <div class="kpi kpi-warning">
                        <div class="label"><i class="bi bi-clock"></i> Por vencer (≤7 días)</div>
                        <div class="value" id="kpiPorVencer">0</div>
                        <div class="delta text-warning">alertas</div>
                    </div>
                </div>
            </div>
            <div class="card mb-3 shadow-sm">
                <div class="card-header bg-light">
                    <h5 class="card-title mb-0"><i class="bi bi-filter-circle"></i> Filtros de Búsqueda</h5>
                </div>
                <div class="card-body">
                    <div class="row g-3 toolbar align-items-end">
                        <div class="col-sm-6 col-lg-2">
                            <div class="form-group">
                                <label class="required fs-6 fw-semibold mb-2">
                                    <i class="bi bi-gear"></i> Servicio:
                                </label>
                                <select class="form-select" id="cboServicios">
                                    <option value="0">Todos</option>
                                    @foreach (var I in Model.ListarServicio)
                                    {
                                        <option value="@I.idServicio">@I.nombre</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-6 col-lg-2">
                            <div class="form-group">
                                <label class="required fs-6 fw-semibold mb-2">
                                    <i class="bi bi-calendar-event"></i> Frecuencia:
                                </label>
                                <select class="form-select" id="cboFrecuencia">
                                    <option value="0">Todos</option>
                                    @foreach (var I in Model.ListarFrecuencia)
                                    {
                                        <option value="@I.idFrecuencia" data-numdias="@I.numDias" data-aviso1="@I.aviso1" data-aviso2="@I.aviso2">
                                            @I.nombre
                                        </option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-6 col-lg-2">
                            <div class="form-group">
                                <label class="fs-6 fw-semibold mb-2" for="cboEstados">
                                    <i class="bi bi-toggle-on"></i> Estado Suscripción:
                                </label>
                                <select class="form-select" id="cboEstados">
                                    <option value="0">Todos</option>
                                    <option value="1">Activo</option>
                                    <option value="2">Suspendido</option>
                                    <option value="3">Pagado</option>
                                </select>
                            </div>
                        </div>

                        <div class="col-sm-6 col-lg-2">
                            <div class="form-group">
                                <label class="form-label">
                                    <i class="bi bi-calendar-month"></i> Mes:
                                </label>
                                <input type="month" id="fMes" class="form-control" />
                            </div>
                        </div>
                        <div class="col-sm-6 col-lg-2 d-grid">
                            <button id="btnFiltrar" class="btn btn-success">
                                <i class="bi bi-funnel"></i> Filtrar
                            </button>
                        </div>
                        <div class="col-sm-6 col-lg-2 d-grid">
                            <button id="btnLimpiar" class="btn btn-secondary">
                                <i class="bi bi-x-circle"></i> Limpiar
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card card-flush">
                <!--begin::Card header-->
                <div class="card-header align-items-center py-5 gap-2 gap-md-5">
                    <!--begin::Card title-->
                    <div class="card-title">
                        <!--begin::Search-->
                        <div class="d-flex align-items-center position-relative my-1">
                            <!--begin::Svg Icon | path: icons/duotune/general/gen021.svg-->
                            <span class="svg-icon svg-icon-1 position-absolute ms-4">
                                <svg width="24" height="24" viewBox="0 0 24 24" fill="none"
                                     xmlns="http://www.w3.org/2000/svg">
                                    <rect opacity="0.5" x="17.0365" y="15.1223" width="8.15546" height="2" rx="1"
                                          transform="rotate(45 17.0365 15.1223)" fill="currentColor" />
                                    <path d="M11 19C6.55556 19 3 15.4444 3 11C3 6.55556 6.55556 3 11 3C15.4444 3 19 6.55556 19 11C19 15.4444 15.4444 19 11 19ZM11 5C7.53333 5 5 7.53333 5 11C5 14.4667 7.53333 17 11 17C14.4667 17 17 14.4667 17 11C17 7.53333 14.4667 5 11 5Z"
                                          fill="currentColor" />
                                </svg>
                            </span>
                            <!--end::Svg Icon-->
                            <input type="text" data-kt-filter="search"
                                   class="form-control form-control-solid w-250px ps-14" placeholder="Buscar Subscripcion" />
                        </div>
                        <!--end::Search-->
                    </div>
                    <!--end::Card title-->
                    <!--begin::Card toolbar-->
                    <div class="card-toolbar flex-row-fluid justify-content-end gap-5">
                        <!--begin::Add product-->
                        <a href="@Url.Action("Nuevo","Subscripcion")" class="btn btn-primary">Nuevo</a>
                        <button type="button" class="btn btn-success d-flex align-items-center" id="btnActualizar">
                            <i class="ki-duotone ki-arrows-circle fs-2 me-1">
                                <span class="path1"></span>
                                <span class="path2"></span>
                            </i> Actualizar
                        </button>
                        <!--end::Add product-->
                    </div>
                    <!--end::Card toolbar-->
                </div>
                <!--end::Card header-->
                <!--begin::Card body-->
                <div class="card-body pt-0">
                    <!--begin::Datatable-->
                    <table id="kt_datatable_video" class="table align-middle table-row-dashed fs-6 gy-5">
                        <thead>
                            <tr class="text-start text-gray-400 fw-bold fs-7 text-uppercase gs-0">
                                <th>Id</th>
                                <th>Cliente</th>
                                <th>Servicio</th>
                                <th>Frecuencia</th>
                                <th>Fecha Inicio</th>
                                <th>Fecha Vencimiento</th>
                                <th>Moneda</th>
                                <th>Importe</th>
                                <th>Observación</th>
                                <th>Estado</th>
                                <th class="text-end min-w-100px">Acciones</th>
                            </tr>
                        </thead>
                        <tbody class="text-gray-600 fw-semibold">
                        </tbody>
                    </table>
                    <!--end::Datatable-->
                </div>
                <!--end::Card body-->
            </div>
            <!--end::Products-->
        </div>
        <!--end::Content container-->
    </div>
    <!--end::Content-->
</div>
<!--end::Content wrapper-->
<!-- Modal -->
<div class="modal fade" id="modalCobrbar" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Cobrar</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input id="txtIdSubscripcion" type="hidden" value="0" />
                <div class="row">
                    <div class="col-md-4">
                        <div class="row mb-5 gx-1">
                            <label class="fs-5 fw-semibold mb-2"
                                   for="fechaCobro">Fecha de Cobro:</label>
                            <input type="text"
                                   id="fechaCobro" class="form-control" />
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="row mb-5 gx-1">
                            <label class="fs-5 fw-semibold mb-2" for="cboCondicionPago">Condicion de Pago:</label>
                            <select class="form-select" id="cboCondicionPago">
                                <option value="1">Efectivo</option>
                                <option value="2">YAPE</option>
                                <option value="3">Plin</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="row mb-5 gx-1">
                            <label class="fs-5 fw-semibold mb-2"
                                   for="txtObservacion">Observacion:</label>
                            <input type="text" id="txtObservacion" class="form-control" placeholder="Observacion" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="bi bi-x-circle me-1"></i>Cerrar
                </button>
                <button type="button" class="btn btn-success" onclick="CobrarYRenoar()">
                    <i class="bi bi-arrow-repeat me-1"></i>Cobrar y Renovar
                </button>
                <button type="button" class="btn btn-primary" onclick="Cobrar()">
                    <i class="bi bi-cash me-1"></i>Cobrar
                </button>
            </div>
        </div>
    </div>
</div>
<!-- Modal para Gráficos -->
<div class="modal fade" id="modalGraficos" tabindex="-1" aria-labelledby="modalGraficosLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="modalGraficosLabel">Reportes Anual</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row mb-3">
                    <div class="col-md-4">
                        <label for="cboAnioReporte" class="form-label">Seleccionar Año</label>
                        <select class="form-select" id="cboAnioReporte" onchange="cargarGrafico()">
                            <option value="">Seleccionar año...</option>
                        </select>
                    </div>
                    <div class="col-md-8">
                        <div id="totalAnio" class="alert alert-info d-none">
                            <h4 class="alert-heading">Total de Ingresos en <span id="anioSeleccionado"></span></h4>
                            <p class="mb-0">S/ <span id="totalImporte">0.00</span></p>
                        </div>
                    </div>
                </div>
                <canvas id="graficoSuscripciones" width="400" height="200"></canvas>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script src="@Url.Content("~/Scripts/library.js?v=5.0")" type="text/javascript"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        var table;
        var dt;
        const now = new Date();
        $('#fMes').val(`${now.getFullYear()}-${String(now.getMonth() + 1).padStart(2, '0')}`);
         function Cobrar() {
              var formData = new FormData();

             formData.append('idSubscripcion', $("#txtIdSubscripcion").val());
             formData.append('estadoFormulario', 3);
             formData.append('idCondicionPago', $("#cboCondicionPago").val());
             formData.append('observacion', $("#txtObservacion").val());
             formData.append('fechaCobro', $("#fechaCobro").val());

                 $.ajax({
                     url: "@Url.Action("Guardar", "Subscripcion")",
                     type: "POST",
                     data: formData,
                     processData: false,
                     contentType: false,
                     success: function (response) {
                         let message = "¡Se realizo el Cobro de la Subscripcion!"
                         Swal.fire({
                             text: message,
                             icon: "success",
                             buttonsStyling: false,
                             confirmButtonText: "Listo",
                             customClass: { confirmButton: "btn btn-primary" },
                         }).then(function () {
                             dt.ajax.reload();
                             $("#modalCobrbar").modal("hide")
                         });
                     },
                     error: function (error) {
                         //console.error("Error al enviar el formulario");
                         // Mostrar mensaje de error
                         Swal.fire({
                             text: "Se produjo un error al enviar el formulario. Por favor, inténtalo de nuevo.",
                             icon: "error",
                             buttonsStyling: false,
                             confirmButtonText: "Ok",
                             customClass: { confirmButton: "btn btn-primary" },
                         });
                     },
                 });
        }
        function AbrirModalCobrar(id) {
            $("#modalCobrbar").modal("show")
            $("#txtIdSubscripcion").val(id)
        }
        function CobrarYRenoar() {
            var formData = new FormData();

            formData.append('idSubscripcion', $("#txtIdSubscripcion").val());
            formData.append('estadoFormulario', 3);
            formData.append('idCondicionPago', $("#cboCondicionPago").val());
            formData.append('observacion', $("#txtObservacion").val());
            formData.append('fechaCobro', $("#fechaCobro").val());

            $.ajax({
                url: "@Url.Action("Guardar", "Subscripcion")",
                type: "POST",
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    let message = "¡Se realizó el Cobro de la Subscripcion!"
                    Swal.fire({
                        text: message,
                        icon: "success",
                        buttonsStyling: false,
                        confirmButtonText: "Continuar",
                        customClass: { confirmButton: "btn btn-primary" },
                    }).then(function () {
                        // Redirigir a renovación
                        const id = $("#txtIdSubscripcion").val();
                        window.location.href = '@Url.Action("Renovacion", "Subscripcion")?id=' + id;
                    });
                },
                error: function (error) {
                    Swal.fire({
                        text: "Se produjo un error al enviar el formulario. Por favor, inténtalo de nuevo.",
                        icon: "error",
                        buttonsStyling: false,
                        confirmButtonText: "Ok",
                        customClass: { confirmButton: "btn btn-primary" },
                    });
                },
            });
        }
        // Public methods

        var KTDatatablesServerSide = function () {


            var initDatatable = function () {
                dt = $('#kt_datatable_video').DataTable({
                    processing: true,
                    paging: true,
                    pageLength: 25,
                    lengthMenu: [10, 25, 50, 100],
                    responsive: true,
                    scrollY: '60vh',
                    scrollCollapse: true,
                    drawCallback: function() {
                        var api = this.api();
                        if (api.rows().count() === 0) {
                            $('#kt_datatable_video tbody').html('<tr><td colspan="11" class="text-center py-5"><div class="d-flex flex-column align-items-center"><i class="bi bi-search fs-1 text-muted mb-3"></i><h5 class="text-muted">No se encontraron resultados</h5><p class="text-muted">Intenta ajustar los filtros para ver más datos.</p></div></td></tr>');
                        }
                    },

                    "oLanguage": {
                        "sInfo": "Mostrando _START_ a _END_ de _TOTAL_ registros",// text you want show for info section
                    },
                    "language": {
                        "emptyTable": "",
                        "infoEmpty": "Sin registros"
                    },

                    ajax: {
                        url: '@Url.Action("Listar", "Subscripcion")', // Ruta del método de acción que obtiene los datos
                        type: 'GET',
                        dataType: 'json',
                        data: function (d) {
                            var fecha = $("#fMes").val();
                            var partes = fecha.split('-'); // ['2025', '08']

                            var anio = parseInt(partes[0], 10);  // 2025 (number)
                            var mes = parseInt(partes[1], 10);

                            d.idServicio = $("#cboServicios").val();
                            d.idFrecuencia = $("#cboFrecuencia").val();
                            d.idEstado = $("#cboEstados").val();
                            d.anio = anio;
                            d.mes = mes;
                        },
                        dataSrc: function (response) {
                            if (response.infoExtra) {
                                $('#txCobrado').text(response.infoExtra.totalImportePagado);
                                $('#txActivo').text(response.infoExtra.totalImportePagado);
                            }
                            // Manipula los datos si es necesario antes de mostrarlos en el DataTable
                            return response.data;
                        }
                    },
                    columns: [
                        { data: 'idSubscripcion' },
                        { data: 'cliente', title: "Cliente" },
                        { data: 'servicio', title: "Servicio" },
                        { data: 'frecuencia', title: "Frecuencia" },
                        { data: 'fechaInicio', title: "Fecha Inicio" },
                        { data: 'fechaVcto', title: "Fecha Vencimiento" },
                        { data: 'moneda', title: "Moneda" },
                        { data: 'importe', title: "Importe" },
                        { data: 'observacion', title: "Observacion" },
                        {
                            data: 'idEstado', title: "Estado", render: function (data, type, row) {
                                var badge = '';
                                switch (data) {
                                    case 1:
                                        badge = '<span class="badge badge-light-primary">Activo</span>';
                                        break;
                                    case 2:
                                        badge = '<span class="badge badge-light-danger">Suspendido</span>';
                                        break;
                                    case 3:
                                        badge = '<span class="badge badge-light-success">Pagado</span>';
                                        break;
                                }
                                return badge;
                            } },
                        { data: null },
                    ],
                    // Ordenar la tabla por el ID en orden descendente
                    order: [[0, 'desc']],
                    columnDefs: [{
                        targets: -1,
                        data: null,
                        orderable: false,
                        className: 'text-end',
                        render: function (data, type, row) {

                            let isPagado = row.idEstado == 3;
                            let disabledClass = isPagado ? 'disabled' : '';
                            let disabledAttr = isPagado ? 'disabled' : '';
                            let tooltipTitle = isPagado ? 'No disponible para suscripciones pagadas' : '';

                            return `
                                    <a href="#" class="btn btn-light btn-active-light-primary btn-sm" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end">
                            Acciones
                            <span class="svg-icon fs-5 m-0">
                            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                            <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                            <polygon points="0 0 24 0 24 24 0 24"></polygon>
                            <path d="M6.70710678,15.7071068 C6.31658249,16.0976311 5.68341751,16.0976311 5.29289322,15.7071068 C4.90236893,15.3165825 4.90236893,14.6834175 5.29289322,14.2928932 L11.2928932,8.29289322 C11.6714722,7.91431428 12.2810586,7.90106866 12.6757246,8.26284586 L18.6757246,13.7628459 C19.0828436,14.1360383 19.1103465,14.7686056 18.7371541,15.1757246 C18.3639617,15.5828436 17.7313944,15.6103465 17.3242754,15.2371541 L12.0300757,10.3841378 L6.70710678,15.7071068 Z" fill="currentColor" fill-rule="nonzero" transform="translate(12.000003, 11.999999) rotate(-180.000000) translate(-12.000003, -11.999999)"></path>
                            </g>
                            </svg>
                            </span>
                            </a>
                            <!--begin::Menu-->
                            <div class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-bold fs-7 w-125px py-4" data-kt-menu="true">
                            <!--begin::Menu item-->
                            <div class="menu-item px-3">
                                <a href="@Url.Action("Editar", "Subscripcion")?id=${row.idSubscripcion}" class="menu-link px-3" data-kt-docs-table-filter="edit_row" data-bs-toggle="tooltip" title="Editar suscripción">
                                Editar
                                </a>
                            </div>
                            <!--end::Menu item-->
                            <div class="menu-item px-3">
                                <a href="#" onclick="${isPagado ? '' : 'AbrirModalCobrar(' + row.idSubscripcion + ')'}" class="menu-link px-3 ${disabledClass}" data-kt-docs-table-filter="edit_cobrar" data-bs-toggle="tooltip" title="${isPagado ? 'No disponible para suscripciones pagadas' : 'Cobrar suscripción'}" ${disabledAttr}>
                                 Cobrar
                                </a>
                             </div>
                             <!--begin::Menu item-->
                             <div class="menu-item px-3">
                                 <a href="${isPagado ? '#' : '@Url.Action("Renovacion", "Subscripcion")?id=' + row.idSubscripcion}" class="menu-link px-3 ${disabledClass}" data-kt-docs-table-filter="edit_row" data-bs-toggle="tooltip" title="${isPagado ? 'No disponible para suscripciones pagadas' : 'Renovar suscripción'}" ${disabledAttr}>
                                 Renovar
                                 </a>
                             </div>
                             <!--end::Menu item-->

                            <!--begin::Menu item-->
                            <div class="menu-item px-3">
                                <a href="#" class="menu-link px-3 ${disabledClass}" data-kt-docs-table-filter="delete_row" data-bs-toggle="tooltip" title="${isPagado ? 'No disponible para suscripciones pagadas' : 'Eliminar suscripción'}" ${disabledAttr}>
                                Eliminar
                                </a>
                            </div>
                            <!--end::Menu item-->
                            </div>
                            <!--end::Menu-->
                                `;
                        },
                    },
                    ]
                });

                table = dt.$;

                // Re-init functions on every table re-draw -- more info: https://datatables.net/reference/event/draw
                dt.on('draw', function () {
                    handleDeleteRows();
                    KTMenu.createInstances();
                    // Animación de filas
                    $('.table tbody tr').hide().fadeIn(500);
                    // Inicializar tooltips
                    $('[data-bs-toggle="tooltip"]').tooltip();
                });
                $('#btnActualizar').on('click', function () {
                    dt.ajax.reload();
                });
                $("#btnFiltrar").on('click', function () {
                    dt.ajax.reload();
                });
                $("#btnLimpiar").on('click', function () {
                    $("#cboServicios").val(0).trigger('change');
                    $("#cboFrecuencia").val(0).trigger('change');
                    $("#cboEstados").val(0).trigger('change');
                    $('#fMes').val(`${now.getFullYear()}-${String(now.getMonth() + 1).padStart(2, '0')}`);
                    dt.ajax.reload();
                });
            }

            var handleSearchDatatable = function () {
                const filterSearch = document.querySelector('[data-kt-filter="search"]');
                filterSearch.addEventListener('keyup', function (e) {
                    dt.search(e.target.value).draw();
                });
            }

            // Delete customer
            var handleDeleteRows = () => {
                // Select all delete buttons
                const deleteButtons = document.querySelectorAll('[data-kt-docs-table-filter="delete_row"]');

                deleteButtons.forEach(d => {
                    // Delete button on click
                    d.addEventListener('click', function (e) {
                        e.preventDefault();

                        // Select parent row
                        const parent = e.target.closest('tr');

                        // Check if status is Pagado
                        const estado = parent.querySelectorAll('td')[9].innerText;
                        if (estado.includes('Pagado')) {
                            Swal.fire({
                                text: "No se puede eliminar una suscripción pagada.",
                                icon: "warning",
                                buttonsStyling: false,
                                confirmButtonText: "Ok",
                                customClass: { confirmButton: "btn btn-primary" },
                            });
                            return;
                        }

                        // Get customer name
                        const customerName = parent.querySelectorAll('td')[1].innerText;
                        const id = parent.querySelectorAll('td')[0].innerText;
                        //console.log(id);
                        // SweetAlert2 pop up --- official docs reference: https://sweetalert2.github.io/
                        Swal.fire({
                            text: "Esta seguro que desea eliminar la Subscripcion del cliente : " + customerName + "?",
                            icon: "warning",
                            showCancelButton: true,
                            buttonsStyling: false,
                            confirmButtonText: "Si, eliminar!",
                            cancelButtonText: "No, cancelar",
                            customClass: {
                                confirmButton: "btn fw-bold btn-danger",
                                cancelButton: "btn fw-bold btn-active-light-primary"
                            }
                        }).then(function (result) {
                            if (result.value) {

                                $.ajax
                                    ({
                                        type: "POST",
                                        url: "@Url.Action("Eliminar", "Subscripcion")",
                                        data: {
                                            id: id
                                        },
                                        success: function (res) {
                                            Swal.fire({
                                                text: "Has eliminado " + customerName + "!.",
                                                icon: "success",
                                                buttonsStyling: false,
                                                confirmButtonText: "Ok, entiendo!",
                                                customClass: {
                                                    confirmButton: "btn fw-bold btn-primary",
                                                }
                                            }).then(function () {
                                                // delete row data from server and re-draw datatable
                                                dt.ajax.reload();
                                            });
                                        }
                                    });

                            } else if (result.dismiss === 'cancel') {
                                Swal.fire({
                                    text: customerName + " no fue eliminado.",
                                    icon: "error",
                                    buttonsStyling: false,
                                    confirmButtonText: "Ok, entiendo!",
                                    customClass: {
                                        confirmButton: "btn fw-bold btn-primary",
                                    }
                                });
                            }
                        });
                    })
                });
            }



            return {
                init: function () {
                    initDatatable();
                    handleSearchDatatable();
                    handleDeleteRows();
                }
            }
        }();

        $(document).ready(function () {
            var hoy = new Date();
            KTUtil.onDOMContentLoaded(function () {
            KTDatatablesServerSide.init();
            });
            $("#cboCondicionPago").select2({
                width: '100%'
            });

            $('#cboServicios').select2({
                width: '100%'
            });
            $('#cboFrecuencia').select2({
                width: '100%'
            });
            $('#cboEstados').select2({
                width: '100%'
            });
            $('#cboAnioReporte').select2({
                width: '100%'
            });

            // Poblar años desde 1975 hasta 100 años después del actual
            const currentYear = new Date().getFullYear();
            const startYear = 1975;
            const endYear = currentYear + 100;
            const $select = $('#cboAnioReporte');

            for (let year = startYear; year <= endYear; year++) {
                $select.append(`<option value="${year}">${year}</option>`);
            }

            // Seleccionar el año actual por defecto
            $select.val(currentYear).trigger('change');

            // Inicializar tooltips
            $('[data-bs-toggle="tooltip"]').tooltip();

            initializeFlatpickr("#fechaCobro", hoy)
        });

        function abrirModalGraficos() {
            $("#modalGraficos").modal("show");
            if (window.chartInstance) {
                window.chartInstance.destroy();
            }
            inicializarGraficoVacio();
            // Si hay un año seleccionado, cargar el gráfico
            const anioSeleccionado = $("#cboAnioReporte").val();
            if (anioSeleccionado) {
                cargarGrafico();
            }
        }

        function inicializarGraficoVacio() {
            const ctx = document.getElementById('graficoSuscripciones').getContext('2d');
            window.chartInstance = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: [],
                    datasets: [{
                        label: 'Total Ingresos',
                        data: [],
                        backgroundColor: 'rgba(54, 162, 235, 0.2)',
                        borderColor: 'rgba(54, 162, 235, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
            // Ocultar total
            $("#totalAnio").addClass("d-none");
        }

        function cargarGrafico() {
            const anio = $("#cboAnioReporte").val();
            if (!anio) return;

            $.ajax({
                url: '@Url.Action("ListarReporte", "Subscripcion")',
                type: 'GET',
                data: { anio: anio },
                success: function(response) {
                    actualizarGrafico(response.data);
                },
                error: function() {
                    Swal.fire({
                        text: "Error al cargar los datos del reporte.",
                        icon: "error",
                        buttonsStyling: false,
                        confirmButtonText: "Ok",
                        customClass: { confirmButton: "btn btn-primary" },
                    });
                }
            });
        }

        function actualizarGrafico(data) {
            const labels = data.map(item => item.nombreMes);
            const values = data.map(item => item.totalImportePagado);
            const total = values.reduce((sum, val) => sum + val, 0);
            const anio = $("#cboAnioReporte").val();

            // Mostrar total
            $("#anioSeleccionado").text(anio);
            $("#totalImporte").text(total.toFixed(2));
            $("#totalAnio").removeClass("d-none");

            window.chartInstance.data.labels = labels;
            window.chartInstance.data.datasets[0].data = values;
            window.chartInstance.update();
        }
    </script>

}
