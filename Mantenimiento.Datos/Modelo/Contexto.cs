//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591 // this is for supress no xml comments in public members warnings 

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data.Common;
using System.Data.EntityClient;
using System.Data.Metadata.Edm;
using System.Data.Objects.DataClasses;
using System.Data.Objects;
using System.Data;
using System.Diagnostics;
using System.Globalization;
using System.Linq;



using System.Reflection;

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591 // this is for supress no xml comments in public members warnings 


using Mantenimiento.Datos.Entidades;

namespace Mantenimiento.Datos.Modelo
{
    [System.Diagnostics.DebuggerNonUserCode()]
    public partial class EDBCORAHEntities : ObjectContext, IContexto
    {
        public const string CadenaConeccion = "name=EDBCORAHEntities";
        public const string NombreContenedor = "EDBCORAHEntities";
    
        #region Constructores
    	
        public EDBCORAHEntities()
            : base(CadenaConeccion, NombreContenedor)
        {
            Inicializar();
        }
    
        public EDBCORAHEntities(string connectionString)
            : base(connectionString, NombreContenedor)
        {
            Inicializar();
        }
    
        public EDBCORAHEntities(EntityConnection connection)
            : base(connection, NombreContenedor)
        {
            Inicializar();
        }
    
        private void Inicializar()
        {
            // Creating proxies requires the use of the ProxyDataContractResolver and
            // may allow lazy loading which can expand the loaded graph during serialization.
            ContextOptions.ProxyCreationEnabled = false;
    		ContextOptions.LazyLoadingEnabled = false;
            ObjectMaterialized += new ObjectMaterializedEventHandler(HandleObjectMaterialized);
        }
    
        private void HandleObjectMaterialized(object sender, ObjectMaterializedEventArgs e)
        {
            var entity = e.Entity as IObjectWithChangeTracker;
            if (entity != null)
            {
                bool changeTrackingEnabled = entity.ChangeTracker.ChangeTrackingEnabled;
                try
                {
                    entity.MarkAsUnchanged();
                }
                finally
                {
                    entity.ChangeTracker.ChangeTrackingEnabled = changeTrackingEnabled;
                }
                this.StoreReferenceKeyValues(entity);
            }
        }
    
        #endregion
        #region IContexto
    	
    	public IObjectSet<TEntidad> CrearConjunto<TEntidad>() where TEntidad : class, IObjectWithChangeTracker
    	{
    		return base.CreateObjectSet<TEntidad>() as IObjectSet<TEntidad>;
    	}
    	public void RegistrarCambios<TEntidad>(TEntidad item) where TEntidad : class, IObjectWithChangeTracker
    	{
    		this.CreateObjectSet<TEntidad>().ApplyChanges(item);
    	}
    	public void Commit_RefrecarCambios()
    	{
    		try
    		{
    			//Default option is DetectChangesBeforeSave
    			base.SaveChanges();
    			
    			//accept all changes in STE entities attached in context
                IEnumerable<IObjectWithChangeTracker> steEntities = (from entry in 
    																	this.ObjectStateManager.GetObjectStateEntries(~EntityState.Detached)
                                                                     where 
    																 	entry.Entity != null 
    																 && 
    																 	(entry.Entity as IObjectWithChangeTracker != null)
                                                                     select
    																 	entry.Entity as IObjectWithChangeTracker);
    
                steEntities.ToList().ForEach(ste => ste.MarkAsUnchanged());
    		}
    		catch (OptimisticConcurrencyException ex)
    		{
    			
    			//if client wins refresh data ( queries database and adapt original values
    			//and re-save changes in client
    			base.Refresh(RefreshMode.ClientWins, ex.StateEntries.Select(se => se.Entity));
    			
    			base.SaveChanges(); 
    			
    			//accept all changes in STE entities attached in context
                IEnumerable<IObjectWithChangeTracker> steEntities = (from entry in 
    																	this.ObjectStateManager.GetObjectStateEntries(~EntityState.Detached)
                                                                     where 
    																 	entry.Entity != null 
    																 && 
    																 	(entry.Entity as IObjectWithChangeTracker != null)
                                                                     select
    																 	entry.Entity as IObjectWithChangeTracker);
    
                steEntities.ToList().ForEach(ste => ste.MarkAsUnchanged());
    		}
    	}
    	public  void Commit()
    	{
    		//Default option is DetectChangesBeforeSave
    		base.SaveChanges();
    		
    		//accept all changes in STE entities attached in context
    		IEnumerable<IObjectWithChangeTracker> steEntities = (from entry in 
    																	this.ObjectStateManager.GetObjectStateEntries(~EntityState.Detached)
                                                                     where 
    																 	entry.Entity != null 
    																 && 
    																 	(entry.Entity as IObjectWithChangeTracker != null)
                                                                     select
    																 	entry.Entity as IObjectWithChangeTracker);
    
    		steEntities.ToList().ForEach(ste => ste.MarkAsUnchanged());
    	}
    	public void Rollback_Cambios()
    	{
    		//Refresh context and override changes
                
    		IEnumerable<object> itemsToRefresh = base.ObjectStateManager.GetObjectStateEntries(EntityState.Modified)
                                                                        .Where(ose=>!ose.IsRelationship && ose.Entity != null)
                                                                        .Select(ose=>ose.Entity);
            base.Refresh(RefreshMode.StoreWins, itemsToRefresh);
    	}
    	public IEnumerable<TEntidad> EjecutarConsulta<TEntidad>(string sqlConsulta, params object[] parametros)
        {
    		return base.ExecuteStoreQuery<TEntidad>(sqlConsulta, parametros);
       	}
    
    	public int EjecutarComando(string sqlComando, params object[] parametros)
    	{
    		return base.ExecuteStoreCommand(sqlComando, parametros);
    	}
    	

        #endregion

        #region ObjectSet Properties
    
        public IObjectSet<Articulo> Articulo
        {
            get { return _articulo  ?? (_articulo = CreateObjectSet<Articulo>("Articulo")); }
        }
        private ObjectSet<Articulo> _articulo;
    
        public IObjectSet<ArticuloAutor> ArticuloAutor
        {
            get { return _articuloAutor  ?? (_articuloAutor = CreateObjectSet<ArticuloAutor>("ArticuloAutor")); }
        }
        private ObjectSet<ArticuloAutor> _articuloAutor;
    
        public IObjectSet<ArticuloConclusion> ArticuloConclusion
        {
            get { return _articuloConclusion  ?? (_articuloConclusion = CreateObjectSet<ArticuloConclusion>("ArticuloConclusion")); }
        }
        private ObjectSet<ArticuloConclusion> _articuloConclusion;
    
        public IObjectSet<ArticuloReferencia> ArticuloReferencia
        {
            get { return _articuloReferencia  ?? (_articuloReferencia = CreateObjectSet<ArticuloReferencia>("ArticuloReferencia")); }
        }
        private ObjectSet<ArticuloReferencia> _articuloReferencia;
    
        public IObjectSet<Autor> Autor
        {
            get { return _autor  ?? (_autor = CreateObjectSet<Autor>("Autor")); }
        }
        private ObjectSet<Autor> _autor;
    
        public IObjectSet<DocumentoIdentidad> DocumentoIdentidad
        {
            get { return _documentoIdentidad  ?? (_documentoIdentidad = CreateObjectSet<DocumentoIdentidad>("DocumentoIdentidad")); }
        }
        private ObjectSet<DocumentoIdentidad> _documentoIdentidad;
    
        public IObjectSet<Usuario> Usuario
        {
            get { return _usuario  ?? (_usuario = CreateObjectSet<Usuario>("Usuario")); }
        }
        private ObjectSet<Usuario> _usuario;
    
        public IObjectSet<ArticuloAdjunto> ArticuloAdjunto
        {
            get { return _articuloAdjunto  ?? (_articuloAdjunto = CreateObjectSet<ArticuloAdjunto>("ArticuloAdjunto")); }
        }
        private ObjectSet<ArticuloAdjunto> _articuloAdjunto;
    
        public IObjectSet<Slider> Slider
        {
            get { return _slider  ?? (_slider = CreateObjectSet<Slider>("Slider")); }
        }
        private ObjectSet<Slider> _slider;
    
        public IObjectSet<Video> Video
        {
            get { return _video  ?? (_video = CreateObjectSet<Video>("Video")); }
        }
        private ObjectSet<Video> _video;

        #endregion

        #region Function Imports
        public virtual int  ListarSolicitudServicio(Nullable<int> anio, Nullable<int> mes)
        {
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
    
            ObjectParameter mesParameter;
    
            if (mes.HasValue)
            {
                mesParameter = new ObjectParameter("mes", mes);
            }
            else
            {
                mesParameter = new ObjectParameter("mes", typeof(int));
            }
            return base.ExecuteFunction("ListarSolicitudServicio", anioParameter, mesParameter);
        }
        public virtual int  ListaDiagnosticoNoRutinario(Nullable<int> dcid)
        {
    
            ObjectParameter dcidParameter;
    
            if (dcid.HasValue)
            {
                dcidParameter = new ObjectParameter("dcid", dcid);
            }
            else
            {
                dcidParameter = new ObjectParameter("dcid", typeof(int));
            }
            return base.ExecuteFunction("ListaDiagnosticoNoRutinario", dcidParameter);
        }
        public virtual int  ListaMaterialNoRutinario(Nullable<int> dcid)
        {
    
            ObjectParameter dcidParameter;
    
            if (dcid.HasValue)
            {
                dcidParameter = new ObjectParameter("dcid", dcid);
            }
            else
            {
                dcidParameter = new ObjectParameter("dcid", typeof(int));
            }
            return base.ExecuteFunction("ListaMaterialNoRutinario", dcidParameter);
        }
        public virtual int  ListaServicioNoRutinario(Nullable<int> dcid)
        {
    
            ObjectParameter dcidParameter;
    
            if (dcid.HasValue)
            {
                dcidParameter = new ObjectParameter("dcid", dcid);
            }
            else
            {
                dcidParameter = new ObjectParameter("dcid", typeof(int));
            }
            return base.ExecuteFunction("ListaServicioNoRutinario", dcidParameter);
        }
        public virtual int  ListarHojaServicio(Nullable<int> pAnio, Nullable<int> pMes, Nullable<int> pEstado)
        {
    
            ObjectParameter pAnioParameter;
    
            if (pAnio.HasValue)
            {
                pAnioParameter = new ObjectParameter("pAnio", pAnio);
            }
            else
            {
                pAnioParameter = new ObjectParameter("pAnio", typeof(int));
            }
    
            ObjectParameter pMesParameter;
    
            if (pMes.HasValue)
            {
                pMesParameter = new ObjectParameter("pMes", pMes);
            }
            else
            {
                pMesParameter = new ObjectParameter("pMes", typeof(int));
            }
    
            ObjectParameter pEstadoParameter;
    
            if (pEstado.HasValue)
            {
                pEstadoParameter = new ObjectParameter("pEstado", pEstado);
            }
            else
            {
                pEstadoParameter = new ObjectParameter("pEstado", typeof(int));
            }
            return base.ExecuteFunction("ListarHojaServicio", pAnioParameter, pMesParameter, pEstadoParameter);
        }
        public virtual int  ListaOcurrenciaNoRutinario(Nullable<int> dcid)
        {
    
            ObjectParameter dcidParameter;
    
            if (dcid.HasValue)
            {
                dcidParameter = new ObjectParameter("dcid", dcid);
            }
            else
            {
                dcidParameter = new ObjectParameter("dcid", typeof(int));
            }
            return base.ExecuteFunction("ListaOcurrenciaNoRutinario", dcidParameter);
        }
        public virtual int  ListaReparacionNoRutinario(Nullable<int> dcid)
        {
    
            ObjectParameter dcidParameter;
    
            if (dcid.HasValue)
            {
                dcidParameter = new ObjectParameter("dcid", dcid);
            }
            else
            {
                dcidParameter = new ObjectParameter("dcid", typeof(int));
            }
            return base.ExecuteFunction("ListaReparacionNoRutinario", dcidParameter);
        }
        public virtual int  ObtenerSolicitudServicio(Nullable<int> idSolicitud)
        {
    
            ObjectParameter idSolicitudParameter;
    
            if (idSolicitud.HasValue)
            {
                idSolicitudParameter = new ObjectParameter("idSolicitud", idSolicitud);
            }
            else
            {
                idSolicitudParameter = new ObjectParameter("idSolicitud", typeof(int));
            }
            return base.ExecuteFunction("ObtenerSolicitudServicio", idSolicitudParameter);
        }
        public virtual int  ListaCajaEjecucion(string recidenti, string redsecuen, string forma)
        {
    
            ObjectParameter recidentiParameter;
    
            if (recidenti != null)
            {
                recidentiParameter = new ObjectParameter("recidenti", recidenti);
            }
            else
            {
                recidentiParameter = new ObjectParameter("recidenti", typeof(string));
            }
    
            ObjectParameter redsecuenParameter;
    
            if (redsecuen != null)
            {
                redsecuenParameter = new ObjectParameter("redsecuen", redsecuen);
            }
            else
            {
                redsecuenParameter = new ObjectParameter("redsecuen", typeof(string));
            }
    
            ObjectParameter formaParameter;
    
            if (forma != null)
            {
                formaParameter = new ObjectParameter("forma", forma);
            }
            else
            {
                formaParameter = new ObjectParameter("forma", typeof(string));
            }
            return base.ExecuteFunction("ListaCajaEjecucion", recidentiParameter, redsecuenParameter, formaParameter);
        }
        public virtual int  ListaCajaEjecucion_Busqueda(string codpatrimonial, string tipo)
        {
    
            ObjectParameter codpatrimonialParameter;
    
            if (codpatrimonial != null)
            {
                codpatrimonialParameter = new ObjectParameter("codpatrimonial", codpatrimonial);
            }
            else
            {
                codpatrimonialParameter = new ObjectParameter("codpatrimonial", typeof(string));
            }
    
            ObjectParameter tipoParameter;
    
            if (tipo != null)
            {
                tipoParameter = new ObjectParameter("tipo", tipo);
            }
            else
            {
                tipoParameter = new ObjectParameter("tipo", typeof(string));
            }
            return base.ExecuteFunction("ListaCajaEjecucion_Busqueda", codpatrimonialParameter, tipoParameter);
        }
        public virtual int  ListaCajaEjecucion_Material(string recidenti, string forma)
        {
    
            ObjectParameter recidentiParameter;
    
            if (recidenti != null)
            {
                recidentiParameter = new ObjectParameter("recidenti", recidenti);
            }
            else
            {
                recidentiParameter = new ObjectParameter("recidenti", typeof(string));
            }
    
            ObjectParameter formaParameter;
    
            if (forma != null)
            {
                formaParameter = new ObjectParameter("forma", forma);
            }
            else
            {
                formaParameter = new ObjectParameter("forma", typeof(string));
            }
            return base.ExecuteFunction("ListaCajaEjecucion_Material", recidentiParameter, formaParameter);
        }
        public virtual int  ListaCajaEjecucion_Servicio(string recidenti, string forma)
        {
    
            ObjectParameter recidentiParameter;
    
            if (recidenti != null)
            {
                recidentiParameter = new ObjectParameter("recidenti", recidenti);
            }
            else
            {
                recidentiParameter = new ObjectParameter("recidenti", typeof(string));
            }
    
            ObjectParameter formaParameter;
    
            if (forma != null)
            {
                formaParameter = new ObjectParameter("forma", forma);
            }
            else
            {
                formaParameter = new ObjectParameter("forma", typeof(string));
            }
            return base.ExecuteFunction("ListaCajaEjecucion_Servicio", recidentiParameter, formaParameter);
        }
        public virtual int  ListaForebisEjecucion(string forebis)
        {
    
            ObjectParameter forebisParameter;
    
            if (forebis != null)
            {
                forebisParameter = new ObjectParameter("forebis", forebis);
            }
            else
            {
                forebisParameter = new ObjectParameter("forebis", typeof(string));
            }
            return base.ExecuteFunction("ListaForebisEjecucion", forebisParameter);
        }
        public virtual int  ListaForebisEjecucion_Busqueda(string codpatrimonial)
        {
    
            ObjectParameter codpatrimonialParameter;
    
            if (codpatrimonial != null)
            {
                codpatrimonialParameter = new ObjectParameter("codpatrimonial", codpatrimonial);
            }
            else
            {
                codpatrimonialParameter = new ObjectParameter("codpatrimonial", typeof(string));
            }
            return base.ExecuteFunction("ListaForebisEjecucion_Busqueda", codpatrimonialParameter);
        }
        public virtual int  ListaForesesEjecucion(string foreses)
        {
    
            ObjectParameter foresesParameter;
    
            if (foreses != null)
            {
                foresesParameter = new ObjectParameter("foreses", foreses);
            }
            else
            {
                foresesParameter = new ObjectParameter("foreses", typeof(string));
            }
            return base.ExecuteFunction("ListaForesesEjecucion", foresesParameter);
        }
        public virtual int  ListaForesesEjecucion_Busqueda(string codpatrimonial)
        {
    
            ObjectParameter codpatrimonialParameter;
    
            if (codpatrimonial != null)
            {
                codpatrimonialParameter = new ObjectParameter("codpatrimonial", codpatrimonial);
            }
            else
            {
                codpatrimonialParameter = new ObjectParameter("codpatrimonial", typeof(string));
            }
            return base.ExecuteFunction("ListaForesesEjecucion_Busqueda", codpatrimonialParameter);
        }
        public virtual int  ListaSituacion()
        {
            return base.ExecuteFunction("ListaSituacion");
        }
        public virtual int  ActualizarFecha(Nullable<int> idPlanMant, Nullable<int> idFechaSemana, Nullable<System.DateTime> fechaIni, Nullable<System.DateTime> fechaFin)
        {
    
            ObjectParameter idPlanMantParameter;
    
            if (idPlanMant.HasValue)
            {
                idPlanMantParameter = new ObjectParameter("idPlanMant", idPlanMant);
            }
            else
            {
                idPlanMantParameter = new ObjectParameter("idPlanMant", typeof(int));
            }
    
            ObjectParameter idFechaSemanaParameter;
    
            if (idFechaSemana.HasValue)
            {
                idFechaSemanaParameter = new ObjectParameter("idFechaSemana", idFechaSemana);
            }
            else
            {
                idFechaSemanaParameter = new ObjectParameter("idFechaSemana", typeof(int));
            }
    
            ObjectParameter fechaIniParameter;
    
            if (fechaIni.HasValue)
            {
                fechaIniParameter = new ObjectParameter("fechaIni", fechaIni);
            }
            else
            {
                fechaIniParameter = new ObjectParameter("fechaIni", typeof(System.DateTime));
            }
    
            ObjectParameter fechaFinParameter;
    
            if (fechaFin.HasValue)
            {
                fechaFinParameter = new ObjectParameter("fechaFin", fechaFin);
            }
            else
            {
                fechaFinParameter = new ObjectParameter("fechaFin", typeof(System.DateTime));
            }
            return base.ExecuteFunction("ActualizarFecha", idPlanMantParameter, idFechaSemanaParameter, fechaIniParameter, fechaFinParameter);
        }
        public virtual int  ListaFechasSemanas(Nullable<int> idEjecucion)
        {
    
            ObjectParameter idEjecucionParameter;
    
            if (idEjecucion.HasValue)
            {
                idEjecucionParameter = new ObjectParameter("idEjecucion", idEjecucion);
            }
            else
            {
                idEjecucionParameter = new ObjectParameter("idEjecucion", typeof(int));
            }
            return base.ExecuteFunction("ListaFechasSemanas", idEjecucionParameter);
        }
        public virtual int  traeTipBienGrpxPlanxTip(Nullable<int> idTipoBienMant, Nullable<int> idPlanMant)
        {
    
            ObjectParameter idTipoBienMantParameter;
    
            if (idTipoBienMant.HasValue)
            {
                idTipoBienMantParameter = new ObjectParameter("idTipoBienMant", idTipoBienMant);
            }
            else
            {
                idTipoBienMantParameter = new ObjectParameter("idTipoBienMant", typeof(int));
            }
    
            ObjectParameter idPlanMantParameter;
    
            if (idPlanMant.HasValue)
            {
                idPlanMantParameter = new ObjectParameter("idPlanMant", idPlanMant);
            }
            else
            {
                idPlanMantParameter = new ObjectParameter("idPlanMant", typeof(int));
            }
            return base.ExecuteFunction("traeTipBienGrpxPlanxTip", idTipoBienMantParameter, idPlanMantParameter);
        }
        public virtual int  ReporteOperatividad()
        {
            return base.ExecuteFunction("ReporteOperatividad");
        }
        public virtual int  ListaOcurrencias(Nullable<int> anio, Nullable<int> mes)
        {
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
    
            ObjectParameter mesParameter;
    
            if (mes.HasValue)
            {
                mesParameter = new ObjectParameter("mes", mes);
            }
            else
            {
                mesParameter = new ObjectParameter("mes", typeof(int));
            }
            return base.ExecuteFunction("ListaOcurrencias", anioParameter, mesParameter);
        }
        public virtual int  HojaServicioTecnico_General_Correctivo(Nullable<int> dCID)
        {
    
            ObjectParameter dCIDParameter;
    
            if (dCID.HasValue)
            {
                dCIDParameter = new ObjectParameter("DCID", dCID);
            }
            else
            {
                dCIDParameter = new ObjectParameter("DCID", typeof(int));
            }
            return base.ExecuteFunction("HojaServicioTecnico_General_Correctivo", dCIDParameter);
        }
        public virtual int  ListaRepuestosIncidencias(Nullable<int> tipo, string p_Placa)
        {
    
            ObjectParameter tipoParameter;
    
            if (tipo.HasValue)
            {
                tipoParameter = new ObjectParameter("tipo", tipo);
            }
            else
            {
                tipoParameter = new ObjectParameter("tipo", typeof(int));
            }
    
            ObjectParameter p_PlacaParameter;
    
            if (p_Placa != null)
            {
                p_PlacaParameter = new ObjectParameter("p_Placa", p_Placa);
            }
            else
            {
                p_PlacaParameter = new ObjectParameter("p_Placa", typeof(string));
            }
            return base.ExecuteFunction("ListaRepuestosIncidencias", tipoParameter, p_PlacaParameter);
        }
        public virtual int  ListaOtrosxos(Nullable<int> tipo, Nullable<int> idSolicitud)
        {
    
            ObjectParameter tipoParameter;
    
            if (tipo.HasValue)
            {
                tipoParameter = new ObjectParameter("tipo", tipo);
            }
            else
            {
                tipoParameter = new ObjectParameter("tipo", typeof(int));
            }
    
            ObjectParameter idSolicitudParameter;
    
            if (idSolicitud.HasValue)
            {
                idSolicitudParameter = new ObjectParameter("idSolicitud", idSolicitud);
            }
            else
            {
                idSolicitudParameter = new ObjectParameter("idSolicitud", typeof(int));
            }
            return base.ExecuteFunction("ListaOtrosxos", tipoParameter, idSolicitudParameter);
        }
        public virtual int  ListaPartesVehicularesxos(Nullable<int> tipo, Nullable<int> idSolicitud)
        {
    
            ObjectParameter tipoParameter;
    
            if (tipo.HasValue)
            {
                tipoParameter = new ObjectParameter("tipo", tipo);
            }
            else
            {
                tipoParameter = new ObjectParameter("tipo", typeof(int));
            }
    
            ObjectParameter idSolicitudParameter;
    
            if (idSolicitud.HasValue)
            {
                idSolicitudParameter = new ObjectParameter("idSolicitud", idSolicitud);
            }
            else
            {
                idSolicitudParameter = new ObjectParameter("idSolicitud", typeof(int));
            }
            return base.ExecuteFunction("ListaPartesVehicularesxos", tipoParameter, idSolicitudParameter);
        }
        public virtual int  ListaProgramadosxBien(Nullable<int> idBien, Nullable<int> idPlanMant)
        {
    
            ObjectParameter idBienParameter;
    
            if (idBien.HasValue)
            {
                idBienParameter = new ObjectParameter("idBien", idBien);
            }
            else
            {
                idBienParameter = new ObjectParameter("idBien", typeof(int));
            }
    
            ObjectParameter idPlanMantParameter;
    
            if (idPlanMant.HasValue)
            {
                idPlanMantParameter = new ObjectParameter("idPlanMant", idPlanMant);
            }
            else
            {
                idPlanMantParameter = new ObjectParameter("idPlanMant", typeof(int));
            }
            return base.ExecuteFunction("ListaProgramadosxBien", idBienParameter, idPlanMantParameter);
        }
        public virtual int  ListaProgramacionBienesxPlan(Nullable<int> idPlan)
        {
    
            ObjectParameter idPlanParameter;
    
            if (idPlan.HasValue)
            {
                idPlanParameter = new ObjectParameter("idPlan", idPlan);
            }
            else
            {
                idPlanParameter = new ObjectParameter("idPlan", typeof(int));
            }
            return base.ExecuteFunction("ListaProgramacionBienesxPlan", idPlanParameter);
        }
        public virtual int  ListaMntosPendientexBien(Nullable<int> idBien)
        {
    
            ObjectParameter idBienParameter;
    
            if (idBien.HasValue)
            {
                idBienParameter = new ObjectParameter("idBien", idBien);
            }
            else
            {
                idBienParameter = new ObjectParameter("idBien", typeof(int));
            }
            return base.ExecuteFunction("ListaMntosPendientexBien", idBienParameter);
        }
        public virtual int  ListaActivDireccionMensual(Nullable<int> anio, Nullable<int> mes)
        {
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
    
            ObjectParameter mesParameter;
    
            if (mes.HasValue)
            {
                mesParameter = new ObjectParameter("mes", mes);
            }
            else
            {
                mesParameter = new ObjectParameter("mes", typeof(int));
            }
            return base.ExecuteFunction("ListaActivDireccionMensual", anioParameter, mesParameter);
        }
        public virtual int  ListaActivTipoMensual(Nullable<int> anio, Nullable<int> mes)
        {
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
    
            ObjectParameter mesParameter;
    
            if (mes.HasValue)
            {
                mesParameter = new ObjectParameter("mes", mes);
            }
            else
            {
                mesParameter = new ObjectParameter("mes", typeof(int));
            }
            return base.ExecuteFunction("ListaActivTipoMensual", anioParameter, mesParameter);
        }
        public virtual int  ListaResumenMensual(Nullable<int> idPlanMnto)
        {
    
            ObjectParameter idPlanMntoParameter;
    
            if (idPlanMnto.HasValue)
            {
                idPlanMntoParameter = new ObjectParameter("idPlanMnto", idPlanMnto);
            }
            else
            {
                idPlanMntoParameter = new ObjectParameter("idPlanMnto", typeof(int));
            }
            return base.ExecuteFunction("ListaResumenMensual", idPlanMntoParameter);
        }
        public virtual int  ReporteProgramadovsRealizadoMensual(Nullable<int> idPlanMnto, Nullable<int> mes)
        {
    
            ObjectParameter idPlanMntoParameter;
    
            if (idPlanMnto.HasValue)
            {
                idPlanMntoParameter = new ObjectParameter("idPlanMnto", idPlanMnto);
            }
            else
            {
                idPlanMntoParameter = new ObjectParameter("idPlanMnto", typeof(int));
            }
    
            ObjectParameter mesParameter;
    
            if (mes.HasValue)
            {
                mesParameter = new ObjectParameter("mes", mes);
            }
            else
            {
                mesParameter = new ObjectParameter("mes", typeof(int));
            }
            return base.ExecuteFunction("ReporteProgramadovsRealizadoMensual", idPlanMntoParameter, mesParameter);
        }
        public virtual int  ListarFallasComparativoAnual(Nullable<int> anio)
        {
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
            return base.ExecuteFunction("ListarFallasComparativoAnual", anioParameter);
        }
        public virtual int  ListarFallasMensual(Nullable<int> anio, Nullable<int> mes)
        {
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
    
            ObjectParameter mesParameter;
    
            if (mes.HasValue)
            {
                mesParameter = new ObjectParameter("mes", mes);
            }
            else
            {
                mesParameter = new ObjectParameter("mes", typeof(int));
            }
            return base.ExecuteFunction("ListarFallasMensual", anioParameter, mesParameter);
        }
        public virtual int  traeGrpxPlanxTipNoAgreg(Nullable<int> idTipoBienMant, Nullable<int> idPlanMant)
        {
    
            ObjectParameter idTipoBienMantParameter;
    
            if (idTipoBienMant.HasValue)
            {
                idTipoBienMantParameter = new ObjectParameter("idTipoBienMant", idTipoBienMant);
            }
            else
            {
                idTipoBienMantParameter = new ObjectParameter("idTipoBienMant", typeof(int));
            }
    
            ObjectParameter idPlanMantParameter;
    
            if (idPlanMant.HasValue)
            {
                idPlanMantParameter = new ObjectParameter("idPlanMant", idPlanMant);
            }
            else
            {
                idPlanMantParameter = new ObjectParameter("idPlanMant", typeof(int));
            }
            return base.ExecuteFunction("traeGrpxPlanxTipNoAgreg", idTipoBienMantParameter, idPlanMantParameter);
        }
        public virtual int  ListaTiposBienes()
        {
            return base.ExecuteFunction("ListaTiposBienes");
        }
        public virtual int  GenerarFechasPlanMnto(Nullable<int> idPlan, Nullable<int> anio)
        {
    
            ObjectParameter idPlanParameter;
    
            if (idPlan.HasValue)
            {
                idPlanParameter = new ObjectParameter("idPlan", idPlan);
            }
            else
            {
                idPlanParameter = new ObjectParameter("idPlan", typeof(int));
            }
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
            return base.ExecuteFunction("GenerarFechasPlanMnto", idPlanParameter, anioParameter);
        }
        public virtual int  ListaSolicitudesxEstado(Nullable<int> anio, Nullable<int> mes)
        {
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
    
            ObjectParameter mesParameter;
    
            if (mes.HasValue)
            {
                mesParameter = new ObjectParameter("mes", mes);
            }
            else
            {
                mesParameter = new ObjectParameter("mes", typeof(int));
            }
            return base.ExecuteFunction("ListaSolicitudesxEstado", anioParameter, mesParameter);
        }
        public virtual int  ReporteAlertaVerificacion()
        {
            return base.ExecuteFunction("ReporteAlertaVerificacion");
        }
        public virtual int  ListarReporteDiario(Nullable<System.DateTime> fecha)
        {
    
            ObjectParameter fechaParameter;
    
            if (fecha.HasValue)
            {
                fechaParameter = new ObjectParameter("fecha", fecha);
            }
            else
            {
                fechaParameter = new ObjectParameter("fecha", typeof(System.DateTime));
            }
            return base.ExecuteFunction("ListarReporteDiario", fechaParameter);
        }
        public virtual int  ListaMantenimientoMensual(Nullable<int> anio, Nullable<int> mes)
        {
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
    
            ObjectParameter mesParameter;
    
            if (mes.HasValue)
            {
                mesParameter = new ObjectParameter("mes", mes);
            }
            else
            {
                mesParameter = new ObjectParameter("mes", typeof(int));
            }
            return base.ExecuteFunction("ListaMantenimientoMensual", anioParameter, mesParameter);
        }
        public virtual int  ListarMantenimientos(Nullable<int> pTipo, Nullable<int> pAnio, Nullable<int> pMes)
        {
    
            ObjectParameter pTipoParameter;
    
            if (pTipo.HasValue)
            {
                pTipoParameter = new ObjectParameter("pTipo", pTipo);
            }
            else
            {
                pTipoParameter = new ObjectParameter("pTipo", typeof(int));
            }
    
            ObjectParameter pAnioParameter;
    
            if (pAnio.HasValue)
            {
                pAnioParameter = new ObjectParameter("pAnio", pAnio);
            }
            else
            {
                pAnioParameter = new ObjectParameter("pAnio", typeof(int));
            }
    
            ObjectParameter pMesParameter;
    
            if (pMes.HasValue)
            {
                pMesParameter = new ObjectParameter("pMes", pMes);
            }
            else
            {
                pMesParameter = new ObjectParameter("pMes", typeof(int));
            }
            return base.ExecuteFunction("ListarMantenimientos", pTipoParameter, pAnioParameter, pMesParameter);
        }
        public virtual int  ListarSaldosProductosxAlmacen(Nullable<int> pIdAlmacen)
        {
    
            ObjectParameter pIdAlmacenParameter;
    
            if (pIdAlmacen.HasValue)
            {
                pIdAlmacenParameter = new ObjectParameter("pIdAlmacen", pIdAlmacen);
            }
            else
            {
                pIdAlmacenParameter = new ObjectParameter("pIdAlmacen", typeof(int));
            }
            return base.ExecuteFunction("ListarSaldosProductosxAlmacen", pIdAlmacenParameter);
        }
        public virtual int  ListarDocumentosxTipo(Nullable<int> pTipoDocumento, Nullable<int> pIdPersona, Nullable<int> idEmpresa)
        {
    
            ObjectParameter pTipoDocumentoParameter;
    
            if (pTipoDocumento.HasValue)
            {
                pTipoDocumentoParameter = new ObjectParameter("pTipoDocumento", pTipoDocumento);
            }
            else
            {
                pTipoDocumentoParameter = new ObjectParameter("pTipoDocumento", typeof(int));
            }
    
            ObjectParameter pIdPersonaParameter;
    
            if (pIdPersona.HasValue)
            {
                pIdPersonaParameter = new ObjectParameter("pIdPersona", pIdPersona);
            }
            else
            {
                pIdPersonaParameter = new ObjectParameter("pIdPersona", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("ListarDocumentosxTipo", pTipoDocumentoParameter, pIdPersonaParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListaDocumentoReferenciado(Nullable<int> idDocumentoComercial)
        {
    
            ObjectParameter idDocumentoComercialParameter;
    
            if (idDocumentoComercial.HasValue)
            {
                idDocumentoComercialParameter = new ObjectParameter("idDocumentoComercial", idDocumentoComercial);
            }
            else
            {
                idDocumentoComercialParameter = new ObjectParameter("idDocumentoComercial", typeof(int));
            }
            return base.ExecuteFunction("sp_ListaDocumentoReferenciado", idDocumentoComercialParameter);
        }
        public virtual int  sp_ListarDetalleDocumento(Nullable<int> idDocumentoComercial)
        {
    
            ObjectParameter idDocumentoComercialParameter;
    
            if (idDocumentoComercial.HasValue)
            {
                idDocumentoComercialParameter = new ObjectParameter("idDocumentoComercial", idDocumentoComercial);
            }
            else
            {
                idDocumentoComercialParameter = new ObjectParameter("idDocumentoComercial", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarDetalleDocumento", idDocumentoComercialParameter);
        }
        public virtual int  sp_ObtenerDocumento(Nullable<int> idDocumentoComercial)
        {
    
            ObjectParameter idDocumentoComercialParameter;
    
            if (idDocumentoComercial.HasValue)
            {
                idDocumentoComercialParameter = new ObjectParameter("idDocumentoComercial", idDocumentoComercial);
            }
            else
            {
                idDocumentoComercialParameter = new ObjectParameter("idDocumentoComercial", typeof(int));
            }
            return base.ExecuteFunction("sp_ObtenerDocumento", idDocumentoComercialParameter);
        }
        public virtual int  sp_ListarComprobantesxProducto(Nullable<int> idProducto, Nullable<int> idTipoDocumento, Nullable<int> idEmpresa)
        {
    
            ObjectParameter idProductoParameter;
    
            if (idProducto.HasValue)
            {
                idProductoParameter = new ObjectParameter("idProducto", idProducto);
            }
            else
            {
                idProductoParameter = new ObjectParameter("idProducto", typeof(int));
            }
    
            ObjectParameter idTipoDocumentoParameter;
    
            if (idTipoDocumento.HasValue)
            {
                idTipoDocumentoParameter = new ObjectParameter("idTipoDocumento", idTipoDocumento);
            }
            else
            {
                idTipoDocumentoParameter = new ObjectParameter("idTipoDocumento", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarComprobantesxProducto", idProductoParameter, idTipoDocumentoParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListarMovimientosProducto(Nullable<int> idProducto, Nullable<int> idAlmacen)
        {
    
            ObjectParameter idProductoParameter;
    
            if (idProducto.HasValue)
            {
                idProductoParameter = new ObjectParameter("idProducto", idProducto);
            }
            else
            {
                idProductoParameter = new ObjectParameter("idProducto", typeof(int));
            }
    
            ObjectParameter idAlmacenParameter;
    
            if (idAlmacen.HasValue)
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", idAlmacen);
            }
            else
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarMovimientosProducto", idProductoParameter, idAlmacenParameter);
        }
        public virtual int  sp_ListarTipoMovimientoCajaxTipo(Nullable<int> idTipoCaja, Nullable<int> idEmpresa)
        {
    
            ObjectParameter idTipoCajaParameter;
    
            if (idTipoCaja.HasValue)
            {
                idTipoCajaParameter = new ObjectParameter("idTipoCaja", idTipoCaja);
            }
            else
            {
                idTipoCajaParameter = new ObjectParameter("idTipoCaja", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarTipoMovimientoCajaxTipo", idTipoCajaParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListarDocPendientesxPersona(Nullable<int> idPersona)
        {
    
            ObjectParameter idPersonaParameter;
    
            if (idPersona.HasValue)
            {
                idPersonaParameter = new ObjectParameter("idPersona", idPersona);
            }
            else
            {
                idPersonaParameter = new ObjectParameter("idPersona", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarDocPendientesxPersona", idPersonaParameter);
        }
        public virtual int  sp_ListaVentasDetalladaCondicionPago(Nullable<int> idTipoDoc, Nullable<int> anio, Nullable<int> idEmpresa)
        {
    
            ObjectParameter idTipoDocParameter;
    
            if (idTipoDoc.HasValue)
            {
                idTipoDocParameter = new ObjectParameter("idTipoDoc", idTipoDoc);
            }
            else
            {
                idTipoDocParameter = new ObjectParameter("idTipoDoc", typeof(int));
            }
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListaVentasDetalladaCondicionPago", idTipoDocParameter, anioParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListarComprobantexCobrar(Nullable<int> idTipoDoc, Nullable<int> esResumido, Nullable<int> idPersona, Nullable<int> idEmpresa)
        {
    
            ObjectParameter idTipoDocParameter;
    
            if (idTipoDoc.HasValue)
            {
                idTipoDocParameter = new ObjectParameter("idTipoDoc", idTipoDoc);
            }
            else
            {
                idTipoDocParameter = new ObjectParameter("idTipoDoc", typeof(int));
            }
    
            ObjectParameter esResumidoParameter;
    
            if (esResumido.HasValue)
            {
                esResumidoParameter = new ObjectParameter("esResumido", esResumido);
            }
            else
            {
                esResumidoParameter = new ObjectParameter("esResumido", typeof(int));
            }
    
            ObjectParameter idPersonaParameter;
    
            if (idPersona.HasValue)
            {
                idPersonaParameter = new ObjectParameter("idPersona", idPersona);
            }
            else
            {
                idPersonaParameter = new ObjectParameter("idPersona", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarComprobantexCobrar", idTipoDocParameter, esResumidoParameter, idPersonaParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListarComprobantesPendientesPago(Nullable<int> idTipoDocumento, Nullable<int> idEmpresa)
        {
    
            ObjectParameter idTipoDocumentoParameter;
    
            if (idTipoDocumento.HasValue)
            {
                idTipoDocumentoParameter = new ObjectParameter("idTipoDocumento", idTipoDocumento);
            }
            else
            {
                idTipoDocumentoParameter = new ObjectParameter("idTipoDocumento", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarComprobantesPendientesPago", idTipoDocumentoParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListaPersonaDeudaPendiente(Nullable<int> idTipoPersona)
        {
    
            ObjectParameter idTipoPersonaParameter;
    
            if (idTipoPersona.HasValue)
            {
                idTipoPersonaParameter = new ObjectParameter("idTipoPersona", idTipoPersona);
            }
            else
            {
                idTipoPersonaParameter = new ObjectParameter("idTipoPersona", typeof(int));
            }
            return base.ExecuteFunction("sp_ListaPersonaDeudaPendiente", idTipoPersonaParameter);
        }
        public virtual int  sp_ListarVentasAnual(Nullable<int> anio, Nullable<int> tipo, Nullable<int> idEmpresa)
        {
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
    
            ObjectParameter tipoParameter;
    
            if (tipo.HasValue)
            {
                tipoParameter = new ObjectParameter("tipo", tipo);
            }
            else
            {
                tipoParameter = new ObjectParameter("tipo", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarVentasAnual", anioParameter, tipoParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListarModulosxRol(Nullable<int> idRol)
        {
    
            ObjectParameter idRolParameter;
    
            if (idRol.HasValue)
            {
                idRolParameter = new ObjectParameter("idRol", idRol);
            }
            else
            {
                idRolParameter = new ObjectParameter("idRol", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarModulosxRol", idRolParameter);
        }
        public virtual int  sp_ListarTabsxOpcionMenu(Nullable<int> idRol, Nullable<int> idOpcionMenu)
        {
    
            ObjectParameter idRolParameter;
    
            if (idRol.HasValue)
            {
                idRolParameter = new ObjectParameter("idRol", idRol);
            }
            else
            {
                idRolParameter = new ObjectParameter("idRol", typeof(int));
            }
    
            ObjectParameter idOpcionMenuParameter;
    
            if (idOpcionMenu.HasValue)
            {
                idOpcionMenuParameter = new ObjectParameter("idOpcionMenu", idOpcionMenu);
            }
            else
            {
                idOpcionMenuParameter = new ObjectParameter("idOpcionMenu", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarTabsxOpcionMenu", idRolParameter, idOpcionMenuParameter);
        }
        public virtual int  sp_ListarOpcionesMenuxRol(Nullable<int> idRol)
        {
    
            ObjectParameter idRolParameter;
    
            if (idRol.HasValue)
            {
                idRolParameter = new ObjectParameter("idRol", idRol);
            }
            else
            {
                idRolParameter = new ObjectParameter("idRol", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarOpcionesMenuxRol", idRolParameter);
        }
        public virtual int  sp_ListarAccionesxRol(Nullable<int> idRol)
        {
    
            ObjectParameter idRolParameter;
    
            if (idRol.HasValue)
            {
                idRolParameter = new ObjectParameter("idRol", idRol);
            }
            else
            {
                idRolParameter = new ObjectParameter("idRol", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarAccionesxRol", idRolParameter);
        }
        public virtual int  sp_ListarSeccionesxOpcionMenu(Nullable<int> idRol, Nullable<int> idOpcionMenuTab, Nullable<int> idOpcionMenu)
        {
    
            ObjectParameter idRolParameter;
    
            if (idRol.HasValue)
            {
                idRolParameter = new ObjectParameter("idRol", idRol);
            }
            else
            {
                idRolParameter = new ObjectParameter("idRol", typeof(int));
            }
    
            ObjectParameter idOpcionMenuTabParameter;
    
            if (idOpcionMenuTab.HasValue)
            {
                idOpcionMenuTabParameter = new ObjectParameter("idOpcionMenuTab", idOpcionMenuTab);
            }
            else
            {
                idOpcionMenuTabParameter = new ObjectParameter("idOpcionMenuTab", typeof(int));
            }
    
            ObjectParameter idOpcionMenuParameter;
    
            if (idOpcionMenu.HasValue)
            {
                idOpcionMenuParameter = new ObjectParameter("idOpcionMenu", idOpcionMenu);
            }
            else
            {
                idOpcionMenuParameter = new ObjectParameter("idOpcionMenu", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarSeccionesxOpcionMenu", idRolParameter, idOpcionMenuTabParameter, idOpcionMenuParameter);
        }
        public virtual int  sp_ListarOpcionesMenu(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarOpcionesMenu", idEmpresaParameter);
        }
        public virtual int  sp_ListarModulosEmpresa(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarModulosEmpresa", idEmpresaParameter);
        }
        public virtual int  sp_ListarHabitaciones(Nullable<int> idEmpresa, string estado, Nullable<int> idReserva)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter estadoParameter;
    
            if (estado != null)
            {
                estadoParameter = new ObjectParameter("estado", estado);
            }
            else
            {
                estadoParameter = new ObjectParameter("estado", typeof(string));
            }
    
            ObjectParameter idReservaParameter;
    
            if (idReserva.HasValue)
            {
                idReservaParameter = new ObjectParameter("idReserva", idReserva);
            }
            else
            {
                idReservaParameter = new ObjectParameter("idReserva", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarHabitaciones", idEmpresaParameter, estadoParameter, idReservaParameter);
        }
        public virtual int  sp_ListaTipoTarifaxTipoHabitacion(Nullable<int> idTipoHabitacion)
        {
    
            ObjectParameter idTipoHabitacionParameter;
    
            if (idTipoHabitacion.HasValue)
            {
                idTipoHabitacionParameter = new ObjectParameter("idTipoHabitacion", idTipoHabitacion);
            }
            else
            {
                idTipoHabitacionParameter = new ObjectParameter("idTipoHabitacion", typeof(int));
            }
            return base.ExecuteFunction("sp_ListaTipoTarifaxTipoHabitacion", idTipoHabitacionParameter);
        }
        public virtual int  sp_ListarPersonasxTipo(Nullable<int> idTipo, Nullable<int> esCompra, Nullable<int> idEmpresa)
        {
    
            ObjectParameter idTipoParameter;
    
            if (idTipo.HasValue)
            {
                idTipoParameter = new ObjectParameter("idTipo", idTipo);
            }
            else
            {
                idTipoParameter = new ObjectParameter("idTipo", typeof(int));
            }
    
            ObjectParameter esCompraParameter;
    
            if (esCompra.HasValue)
            {
                esCompraParameter = new ObjectParameter("esCompra", esCompra);
            }
            else
            {
                esCompraParameter = new ObjectParameter("esCompra", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarPersonasxTipo", idTipoParameter, esCompraParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListarCargosxHabitacion(Nullable<int> idReservaDetalle, Nullable<int> esFacturado)
        {
    
            ObjectParameter idReservaDetalleParameter;
    
            if (idReservaDetalle.HasValue)
            {
                idReservaDetalleParameter = new ObjectParameter("idReservaDetalle", idReservaDetalle);
            }
            else
            {
                idReservaDetalleParameter = new ObjectParameter("idReservaDetalle", typeof(int));
            }
    
            ObjectParameter esFacturadoParameter;
    
            if (esFacturado.HasValue)
            {
                esFacturadoParameter = new ObjectParameter("esFacturado", esFacturado);
            }
            else
            {
                esFacturadoParameter = new ObjectParameter("esFacturado", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarCargosxHabitacion", idReservaDetalleParameter, esFacturadoParameter);
        }
        public virtual int  SP_ListarMesas()
        {
            return base.ExecuteFunction("SP_ListarMesas");
        }
        public virtual int  sp_ListarPedidosxMesa(Nullable<int> idMesa, Nullable<int> idPedido)
        {
    
            ObjectParameter idMesaParameter;
    
            if (idMesa.HasValue)
            {
                idMesaParameter = new ObjectParameter("idMesa", idMesa);
            }
            else
            {
                idMesaParameter = new ObjectParameter("idMesa", typeof(int));
            }
    
            ObjectParameter idPedidoParameter;
    
            if (idPedido.HasValue)
            {
                idPedidoParameter = new ObjectParameter("idPedido", idPedido);
            }
            else
            {
                idPedidoParameter = new ObjectParameter("idPedido", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarPedidosxMesa", idMesaParameter, idPedidoParameter);
        }
        public virtual int  sp_ListaIndicadoresxEmpresa(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListaIndicadoresxEmpresa", idEmpresaParameter);
        }
        public virtual int  sp_ListarVentasxServicio(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarVentasxServicio", idEmpresaParameter);
        }
        public virtual int  sp_ListarHabitacionesxEstado(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarHabitacionesxEstado", idEmpresaParameter);
        }
        public virtual int  sp_ObtenerReserva(Nullable<int> idReserva)
        {
    
            ObjectParameter idReservaParameter;
    
            if (idReserva.HasValue)
            {
                idReservaParameter = new ObjectParameter("idReserva", idReserva);
            }
            else
            {
                idReservaParameter = new ObjectParameter("idReserva", typeof(int));
            }
            return base.ExecuteFunction("sp_ObtenerReserva", idReservaParameter);
        }
        public virtual int  sp_ListarReservasComandas(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarReservasComandas", idEmpresaParameter);
        }
        public virtual int  sp_ListarTiposTarifasxHabitacion(Nullable<int> idTipoHabitacion, Nullable<int> idEmpresa)
        {
    
            ObjectParameter idTipoHabitacionParameter;
    
            if (idTipoHabitacion.HasValue)
            {
                idTipoHabitacionParameter = new ObjectParameter("idTipoHabitacion", idTipoHabitacion);
            }
            else
            {
                idTipoHabitacionParameter = new ObjectParameter("idTipoHabitacion", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarTiposTarifasxHabitacion", idTipoHabitacionParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListarServicios(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarServicios", idEmpresaParameter);
        }
        public virtual int  sp_ListaHistoricoHabitacion(Nullable<int> idHabitacion)
        {
    
            ObjectParameter idHabitacionParameter;
    
            if (idHabitacion.HasValue)
            {
                idHabitacionParameter = new ObjectParameter("idHabitacion", idHabitacion);
            }
            else
            {
                idHabitacionParameter = new ObjectParameter("idHabitacion", typeof(int));
            }
            return base.ExecuteFunction("sp_ListaHistoricoHabitacion", idHabitacionParameter);
        }
        public virtual int  sp_ListarTipoProductoxEmpresa(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarTipoProductoxEmpresa", idEmpresaParameter);
        }
        public virtual int  sp_ListarEquivalenciasUnidadMedida(Nullable<int> idUnidadMedida)
        {
    
            ObjectParameter idUnidadMedidaParameter;
    
            if (idUnidadMedida.HasValue)
            {
                idUnidadMedidaParameter = new ObjectParameter("idUnidadMedida", idUnidadMedida);
            }
            else
            {
                idUnidadMedidaParameter = new ObjectParameter("idUnidadMedida", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarEquivalenciasUnidadMedida", idUnidadMedidaParameter);
        }
        public virtual int  sp_ListarFormulasRecetasProducto(Nullable<int> idProducto)
        {
    
            ObjectParameter idProductoParameter;
    
            if (idProducto.HasValue)
            {
                idProductoParameter = new ObjectParameter("idProducto", idProducto);
            }
            else
            {
                idProductoParameter = new ObjectParameter("idProducto", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarFormulasRecetasProducto", idProductoParameter);
        }
        public virtual int  sp_ListarStockEquivalenteProductoAlmacen(Nullable<int> idProducto, Nullable<int> idAlmacen)
        {
    
            ObjectParameter idProductoParameter;
    
            if (idProducto.HasValue)
            {
                idProductoParameter = new ObjectParameter("idProducto", idProducto);
            }
            else
            {
                idProductoParameter = new ObjectParameter("idProducto", typeof(int));
            }
    
            ObjectParameter idAlmacenParameter;
    
            if (idAlmacen.HasValue)
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", idAlmacen);
            }
            else
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarStockEquivalenteProductoAlmacen", idProductoParameter, idAlmacenParameter);
        }
        public virtual int  sp_ListarStockMinimo(Nullable<int> idEmpresa, Nullable<int> idAlmacen)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter idAlmacenParameter;
    
            if (idAlmacen.HasValue)
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", idAlmacen);
            }
            else
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarStockMinimo", idEmpresaParameter, idAlmacenParameter);
        }
        public virtual int  sp_ListarTipoDocumentoEmpresa(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarTipoDocumentoEmpresa", idEmpresaParameter);
        }
        public virtual int  sp_ListarCajasMovimiento(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarCajasMovimiento", idEmpresaParameter);
        }
        public virtual int  sp_ListarReservasComandas_Editar(Nullable<int> idDocumento)
        {
    
            ObjectParameter idDocumentoParameter;
    
            if (idDocumento.HasValue)
            {
                idDocumentoParameter = new ObjectParameter("idDocumento", idDocumento);
            }
            else
            {
                idDocumentoParameter = new ObjectParameter("idDocumento", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarReservasComandas_Editar", idDocumentoParameter);
        }
        public virtual int  sp_ListaReservas(Nullable<int> idEmpresa, Nullable<int> anio, Nullable<int> mes)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
    
            ObjectParameter mesParameter;
    
            if (mes.HasValue)
            {
                mesParameter = new ObjectParameter("mes", mes);
            }
            else
            {
                mesParameter = new ObjectParameter("mes", typeof(int));
            }
            return base.ExecuteFunction("sp_ListaReservas", idEmpresaParameter, anioParameter, mesParameter);
        }
        public virtual int  sp_ListarUsuarios(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarUsuarios", idEmpresaParameter);
        }
        public virtual int  sp_ListarPagosxReserva(Nullable<int> idReserva)
        {
    
            ObjectParameter idReservaParameter;
    
            if (idReserva.HasValue)
            {
                idReservaParameter = new ObjectParameter("idReserva", idReserva);
            }
            else
            {
                idReservaParameter = new ObjectParameter("idReserva", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarPagosxReserva", idReservaParameter);
        }
        public virtual int  sp_ListaCajas(Nullable<int> idTipoCaja, Nullable<int> anio, Nullable<int> mes, Nullable<int> idEmpresa, Nullable<int> idEstado, Nullable<int> idUsuario, Nullable<int> idPersona)
        {
    
            ObjectParameter idTipoCajaParameter;
    
            if (idTipoCaja.HasValue)
            {
                idTipoCajaParameter = new ObjectParameter("idTipoCaja", idTipoCaja);
            }
            else
            {
                idTipoCajaParameter = new ObjectParameter("idTipoCaja", typeof(int));
            }
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
    
            ObjectParameter mesParameter;
    
            if (mes.HasValue)
            {
                mesParameter = new ObjectParameter("mes", mes);
            }
            else
            {
                mesParameter = new ObjectParameter("mes", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter idEstadoParameter;
    
            if (idEstado.HasValue)
            {
                idEstadoParameter = new ObjectParameter("idEstado", idEstado);
            }
            else
            {
                idEstadoParameter = new ObjectParameter("idEstado", typeof(int));
            }
    
            ObjectParameter idUsuarioParameter;
    
            if (idUsuario.HasValue)
            {
                idUsuarioParameter = new ObjectParameter("idUsuario", idUsuario);
            }
            else
            {
                idUsuarioParameter = new ObjectParameter("idUsuario", typeof(int));
            }
    
            ObjectParameter idPersonaParameter;
    
            if (idPersona.HasValue)
            {
                idPersonaParameter = new ObjectParameter("idPersona", idPersona);
            }
            else
            {
                idPersonaParameter = new ObjectParameter("idPersona", typeof(int));
            }
            return base.ExecuteFunction("sp_ListaCajas", idTipoCajaParameter, anioParameter, mesParameter, idEmpresaParameter, idEstadoParameter, idUsuarioParameter, idPersonaParameter);
        }
        public virtual int  sp_ListarHabitacionesxReserva(Nullable<int> idReserva)
        {
    
            ObjectParameter idReservaParameter;
    
            if (idReserva.HasValue)
            {
                idReservaParameter = new ObjectParameter("idReserva", idReserva);
            }
            else
            {
                idReservaParameter = new ObjectParameter("idReserva", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarHabitacionesxReserva", idReservaParameter);
        }
        public virtual int  sp_ListarEntradasxTipo(Nullable<int> idEmpresa, string tipo)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter tipoParameter;
    
            if (tipo != null)
            {
                tipoParameter = new ObjectParameter("tipo", tipo);
            }
            else
            {
                tipoParameter = new ObjectParameter("tipo", typeof(string));
            }
            return base.ExecuteFunction("sp_ListarEntradasxTipo", idEmpresaParameter, tipoParameter);
        }
        public virtual int  ListaDocumentos(Nullable<int> pTipoDocumento, Nullable<int> pAnio, Nullable<int> pMes, Nullable<int> idEmpresa)
        {
    
            ObjectParameter pTipoDocumentoParameter;
    
            if (pTipoDocumento.HasValue)
            {
                pTipoDocumentoParameter = new ObjectParameter("pTipoDocumento", pTipoDocumento);
            }
            else
            {
                pTipoDocumentoParameter = new ObjectParameter("pTipoDocumento", typeof(int));
            }
    
            ObjectParameter pAnioParameter;
    
            if (pAnio.HasValue)
            {
                pAnioParameter = new ObjectParameter("pAnio", pAnio);
            }
            else
            {
                pAnioParameter = new ObjectParameter("pAnio", typeof(int));
            }
    
            ObjectParameter pMesParameter;
    
            if (pMes.HasValue)
            {
                pMesParameter = new ObjectParameter("pMes", pMes);
            }
            else
            {
                pMesParameter = new ObjectParameter("pMes", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("ListaDocumentos", pTipoDocumentoParameter, pAnioParameter, pMesParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListarProductosPendientesxCompra(Nullable<int> idDocumentoComercial)
        {
    
            ObjectParameter idDocumentoComercialParameter;
    
            if (idDocumentoComercial.HasValue)
            {
                idDocumentoComercialParameter = new ObjectParameter("idDocumentoComercial", idDocumentoComercial);
            }
            else
            {
                idDocumentoComercialParameter = new ObjectParameter("idDocumentoComercial", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarProductosPendientesxCompra", idDocumentoComercialParameter);
        }
        public virtual int  sp_ListaPagosDeudaInicialPersona(Nullable<int> idPersona)
        {
    
            ObjectParameter idPersonaParameter;
    
            if (idPersona.HasValue)
            {
                idPersonaParameter = new ObjectParameter("idPersona", idPersona);
            }
            else
            {
                idPersonaParameter = new ObjectParameter("idPersona", typeof(int));
            }
            return base.ExecuteFunction("sp_ListaPagosDeudaInicialPersona", idPersonaParameter);
        }
        public virtual int  sp_ListarComparativoVCG(Nullable<int> anio, Nullable<int> idEmpresa)
        {
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarComparativoVCG", anioParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListarDocumentosFechaVcto(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarDocumentosFechaVcto", idEmpresaParameter);
        }
        public virtual int  sp_ActualizarTotalImporteReserva(Nullable<int> idReserva)
        {
    
            ObjectParameter idReservaParameter;
    
            if (idReserva.HasValue)
            {
                idReservaParameter = new ObjectParameter("idReserva", idReserva);
            }
            else
            {
                idReservaParameter = new ObjectParameter("idReserva", typeof(int));
            }
            return base.ExecuteFunction("sp_ActualizarTotalImporteReserva", idReservaParameter);
        }
        public virtual int  sp_ListarReservasPendientesPago(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarReservasPendientesPago", idEmpresaParameter);
        }
        public virtual int  sp_ListarMesasPendientesCobro()
        {
            return base.ExecuteFunction("sp_ListarMesasPendientesCobro");
        }
        public virtual int  sp_ListaIndicadoresFortalezaSol()
        {
            return base.ExecuteFunction("sp_ListaIndicadoresFortalezaSol");
        }
        public virtual int  sp_ListaIndicadoresMultiServiciosJen()
        {
            return base.ExecuteFunction("sp_ListaIndicadoresMultiServiciosJen");
        }
        public virtual int  sp_ListarTipoxEmpresa(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarTipoxEmpresa", idEmpresaParameter);
        }
        public virtual int  sp_ListarOpcionMenuWeb(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarOpcionMenuWeb", idEmpresaParameter);
        }
        public virtual int  sp_ListarIngresosxCategoria(Nullable<int> idEmpresa, Nullable<int> anio)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarIngresosxCategoria", idEmpresaParameter, anioParameter);
        }
        public virtual int  sp_ListarAnticipoReservaDetalle(Nullable<int> idReservaDetalle)
        {
    
            ObjectParameter idReservaDetalleParameter;
    
            if (idReservaDetalle.HasValue)
            {
                idReservaDetalleParameter = new ObjectParameter("idReservaDetalle", idReservaDetalle);
            }
            else
            {
                idReservaDetalleParameter = new ObjectParameter("idReservaDetalle", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarAnticipoReservaDetalle", idReservaDetalleParameter);
        }
        public virtual int  sp_ListarComandasxReserva(Nullable<int> idReserva)
        {
    
            ObjectParameter idReservaParameter;
    
            if (idReserva.HasValue)
            {
                idReservaParameter = new ObjectParameter("idReserva", idReserva);
            }
            else
            {
                idReservaParameter = new ObjectParameter("idReserva", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarComandasxReserva", idReservaParameter);
        }
        public virtual int  sp_ListarFacturacionesxReserva(Nullable<int> idReserva)
        {
    
            ObjectParameter idReservaParameter;
    
            if (idReserva.HasValue)
            {
                idReservaParameter = new ObjectParameter("idReserva", idReserva);
            }
            else
            {
                idReservaParameter = new ObjectParameter("idReserva", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarFacturacionesxReserva", idReservaParameter);
        }
        public virtual int  sp_ListarAdelantosxReserva(Nullable<int> idReserva)
        {
    
            ObjectParameter idReservaParameter;
    
            if (idReserva.HasValue)
            {
                idReservaParameter = new ObjectParameter("idReserva", idReserva);
            }
            else
            {
                idReservaParameter = new ObjectParameter("idReserva", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarAdelantosxReserva", idReservaParameter);
        }
        public virtual int  sp_ActualizarIngresoNIAlmacen(Nullable<int> idDocumentoComercial)
        {
    
            ObjectParameter idDocumentoComercialParameter;
    
            if (idDocumentoComercial.HasValue)
            {
                idDocumentoComercialParameter = new ObjectParameter("idDocumentoComercial", idDocumentoComercial);
            }
            else
            {
                idDocumentoComercialParameter = new ObjectParameter("idDocumentoComercial", typeof(int));
            }
            return base.ExecuteFunction("sp_ActualizarIngresoNIAlmacen", idDocumentoComercialParameter);
        }
        public virtual int  sp_AutenticarUsuario(string p_usuariologin, string p_password)
        {
    
            ObjectParameter p_usuariologinParameter;
    
            if (p_usuariologin != null)
            {
                p_usuariologinParameter = new ObjectParameter("p_usuariologin", p_usuariologin);
            }
            else
            {
                p_usuariologinParameter = new ObjectParameter("p_usuariologin", typeof(string));
            }
    
            ObjectParameter p_passwordParameter;
    
            if (p_password != null)
            {
                p_passwordParameter = new ObjectParameter("p_password", p_password);
            }
            else
            {
                p_passwordParameter = new ObjectParameter("p_password", typeof(string));
            }
            return base.ExecuteFunction("sp_AutenticarUsuario", p_usuariologinParameter, p_passwordParameter);
        }
        public virtual int  sp_ListarTicketAtencion(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarTicketAtencion", idEmpresaParameter);
        }
        public virtual int  sp_listarResumenEjecutivoMensual(Nullable<int> anio, Nullable<int> mes, Nullable<int> idEmpresa)
        {
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
    
            ObjectParameter mesParameter;
    
            if (mes.HasValue)
            {
                mesParameter = new ObjectParameter("mes", mes);
            }
            else
            {
                mesParameter = new ObjectParameter("mes", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_listarResumenEjecutivoMensual", anioParameter, mesParameter, idEmpresaParameter);
        }
        public virtual int  sp_ObtenerTicketAtencion(Nullable<int> idTicketAtencion)
        {
    
            ObjectParameter idTicketAtencionParameter;
    
            if (idTicketAtencion.HasValue)
            {
                idTicketAtencionParameter = new ObjectParameter("idTicketAtencion", idTicketAtencion);
            }
            else
            {
                idTicketAtencionParameter = new ObjectParameter("idTicketAtencion", typeof(int));
            }
            return base.ExecuteFunction("sp_ObtenerTicketAtencion", idTicketAtencionParameter);
        }
        public virtual int  sp_ListarComprobantesxPersona(Nullable<int> idPersona)
        {
    
            ObjectParameter idPersonaParameter;
    
            if (idPersona.HasValue)
            {
                idPersonaParameter = new ObjectParameter("idPersona", idPersona);
            }
            else
            {
                idPersonaParameter = new ObjectParameter("idPersona", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarComprobantesxPersona", idPersonaParameter);
        }
        public virtual int  sp_ListarPagosxPersona(Nullable<int> idPersona)
        {
    
            ObjectParameter idPersonaParameter;
    
            if (idPersona.HasValue)
            {
                idPersonaParameter = new ObjectParameter("idPersona", idPersona);
            }
            else
            {
                idPersonaParameter = new ObjectParameter("idPersona", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarPagosxPersona", idPersonaParameter);
        }
        public virtual int  sp_ListarDocumentosIncobrables(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarDocumentosIncobrables", idEmpresaParameter);
        }
        public virtual int  sp_ListarIncobrables(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarIncobrables", idEmpresaParameter);
        }
        public virtual int  sp_ListarNotificaciones(string usuario, Nullable<int> idEmpresa, Nullable<int> estado)
        {
    
            ObjectParameter usuarioParameter;
    
            if (usuario != null)
            {
                usuarioParameter = new ObjectParameter("usuario", usuario);
            }
            else
            {
                usuarioParameter = new ObjectParameter("usuario", typeof(string));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter estadoParameter;
    
            if (estado.HasValue)
            {
                estadoParameter = new ObjectParameter("estado", estado);
            }
            else
            {
                estadoParameter = new ObjectParameter("estado", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarNotificaciones", usuarioParameter, idEmpresaParameter, estadoParameter);
        }
        public virtual int  sp_ListarPrestamos(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarPrestamos", idEmpresaParameter);
        }
        public virtual int  sp_ListarComandasxHabitacion(Nullable<int> idReservaDetalle)
        {
    
            ObjectParameter idReservaDetalleParameter;
    
            if (idReservaDetalle.HasValue)
            {
                idReservaDetalleParameter = new ObjectParameter("idReservaDetalle", idReservaDetalle);
            }
            else
            {
                idReservaDetalleParameter = new ObjectParameter("idReservaDetalle", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarComandasxHabitacion", idReservaDetalleParameter);
        }
        public virtual int  sp_ListarReservasHabitaciones(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarReservasHabitaciones", idEmpresaParameter);
        }
        public virtual int  sp_listarWidgetxEntrada(Nullable<int> idEntrada)
        {
    
            ObjectParameter idEntradaParameter;
    
            if (idEntrada.HasValue)
            {
                idEntradaParameter = new ObjectParameter("idEntrada", idEntrada);
            }
            else
            {
                idEntradaParameter = new ObjectParameter("idEntrada", typeof(int));
            }
            return base.ExecuteFunction("sp_listarWidgetxEntrada", idEntradaParameter);
        }
        public virtual int  sp_listarSeccionxEntrada(Nullable<int> idEntrada)
        {
    
            ObjectParameter idEntradaParameter;
    
            if (idEntrada.HasValue)
            {
                idEntradaParameter = new ObjectParameter("idEntrada", idEntrada);
            }
            else
            {
                idEntradaParameter = new ObjectParameter("idEntrada", typeof(int));
            }
            return base.ExecuteFunction("sp_listarSeccionxEntrada", idEntradaParameter);
        }
        public virtual int  sp_ListarNormativas(Nullable<int> anio, Nullable<int> idTipoNormativa)
        {
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
    
            ObjectParameter idTipoNormativaParameter;
    
            if (idTipoNormativa.HasValue)
            {
                idTipoNormativaParameter = new ObjectParameter("idTipoNormativa", idTipoNormativa);
            }
            else
            {
                idTipoNormativaParameter = new ObjectParameter("idTipoNormativa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarNormativas", anioParameter, idTipoNormativaParameter);
        }
        public virtual int  sp_ListarTallas()
        {
            return base.ExecuteFunction("sp_ListarTallas");
        }
        public virtual int  sp_ListarPersonaDireccion(Nullable<int> idPersona)
        {
    
            ObjectParameter idPersonaParameter;
    
            if (idPersona.HasValue)
            {
                idPersonaParameter = new ObjectParameter("idPersona", idPersona);
            }
            else
            {
                idPersonaParameter = new ObjectParameter("idPersona", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarPersonaDireccion", idPersonaParameter);
        }
        public virtual int  sp_ListarCategoriasTiendaVirtual(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarCategoriasTiendaVirtual", idEmpresaParameter);
        }
        public virtual int  sp_ListarColorTiendaVirtual(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarColorTiendaVirtual", idEmpresaParameter);
        }
        public virtual int  sp_ListarStockDetallexEmpresa(Nullable<int> idProducto)
        {
    
            ObjectParameter idProductoParameter;
    
            if (idProducto.HasValue)
            {
                idProductoParameter = new ObjectParameter("idProducto", idProducto);
            }
            else
            {
                idProductoParameter = new ObjectParameter("idProducto", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarStockDetallexEmpresa", idProductoParameter);
        }
        public virtual int  sp_ObtenerProductoTiendaVirtual(Nullable<int> idProducto)
        {
    
            ObjectParameter idProductoParameter;
    
            if (idProducto.HasValue)
            {
                idProductoParameter = new ObjectParameter("idProducto", idProducto);
            }
            else
            {
                idProductoParameter = new ObjectParameter("idProducto", typeof(int));
            }
            return base.ExecuteFunction("sp_ObtenerProductoTiendaVirtual", idProductoParameter);
        }
        public virtual int  sp_ObtenerPreCargaOrdenProduccion(Nullable<int> idOrdenProduccion, Nullable<int> idProductoAlmacen)
        {
    
            ObjectParameter idOrdenProduccionParameter;
    
            if (idOrdenProduccion.HasValue)
            {
                idOrdenProduccionParameter = new ObjectParameter("idOrdenProduccion", idOrdenProduccion);
            }
            else
            {
                idOrdenProduccionParameter = new ObjectParameter("idOrdenProduccion", typeof(int));
            }
    
            ObjectParameter idProductoAlmacenParameter;
    
            if (idProductoAlmacen.HasValue)
            {
                idProductoAlmacenParameter = new ObjectParameter("idProductoAlmacen", idProductoAlmacen);
            }
            else
            {
                idProductoAlmacenParameter = new ObjectParameter("idProductoAlmacen", typeof(int));
            }
            return base.ExecuteFunction("sp_ObtenerPreCargaOrdenProduccion", idOrdenProduccionParameter, idProductoAlmacenParameter);
        }
        public virtual int  sp_ListarProductosPendientesDespacho(Nullable<int> idEmpresa, Nullable<int> idPedido)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter idPedidoParameter;
    
            if (idPedido.HasValue)
            {
                idPedidoParameter = new ObjectParameter("idPedido", idPedido);
            }
            else
            {
                idPedidoParameter = new ObjectParameter("idPedido", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarProductosPendientesDespacho", idEmpresaParameter, idPedidoParameter);
        }
        public virtual int  sp_ListarProductosMasVendidos(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarProductosMasVendidos", idEmpresaParameter);
        }
        public virtual int  sp_ListarProductosNovedades(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarProductosNovedades", idEmpresaParameter);
        }
        public virtual int  sp_ListarNotasIngresoPendienteVenta(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarNotasIngresoPendienteVenta", idEmpresaParameter);
        }
        public virtual int  sp_ListarValidacionDetallePedido(Nullable<int> idPedido)
        {
    
            ObjectParameter idPedidoParameter;
    
            if (idPedido.HasValue)
            {
                idPedidoParameter = new ObjectParameter("idPedido", idPedido);
            }
            else
            {
                idPedidoParameter = new ObjectParameter("idPedido", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarValidacionDetallePedido", idPedidoParameter);
        }
        public virtual int  sp_ListarProductosColoresTiendaVirtual(Nullable<int> idEmpresa, string nombre)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter nombreParameter;
    
            if (nombre != null)
            {
                nombreParameter = new ObjectParameter("nombre", nombre);
            }
            else
            {
                nombreParameter = new ObjectParameter("nombre", typeof(string));
            }
            return base.ExecuteFunction("sp_ListarProductosColoresTiendaVirtual", idEmpresaParameter, nombreParameter);
        }
        public virtual int  sp_ListarDetalleDocumentoTalla(Nullable<int> idDocumentoComercial)
        {
    
            ObjectParameter idDocumentoComercialParameter;
    
            if (idDocumentoComercial.HasValue)
            {
                idDocumentoComercialParameter = new ObjectParameter("idDocumentoComercial", idDocumentoComercial);
            }
            else
            {
                idDocumentoComercialParameter = new ObjectParameter("idDocumentoComercial", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarDetalleDocumentoTalla", idDocumentoComercialParameter);
        }
        public virtual int  sp_ObtenerProductoMasVendido(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ObtenerProductoMasVendido", idEmpresaParameter);
        }
        public virtual int  sp_ListarPromociones(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarPromociones", idEmpresaParameter);
        }
        public virtual int  sp_ListarPedidos(Nullable<int> pAnio, Nullable<int> pMes, Nullable<int> idEmpresa)
        {
    
            ObjectParameter pAnioParameter;
    
            if (pAnio.HasValue)
            {
                pAnioParameter = new ObjectParameter("pAnio", pAnio);
            }
            else
            {
                pAnioParameter = new ObjectParameter("pAnio", typeof(int));
            }
    
            ObjectParameter pMesParameter;
    
            if (pMes.HasValue)
            {
                pMesParameter = new ObjectParameter("pMes", pMes);
            }
            else
            {
                pMesParameter = new ObjectParameter("pMes", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarPedidos", pAnioParameter, pMesParameter, idEmpresaParameter);
        }
        public virtual int  sp_ObtenerNotaIngreso(Nullable<int> idNotaIngreso)
        {
    
            ObjectParameter idNotaIngresoParameter;
    
            if (idNotaIngreso.HasValue)
            {
                idNotaIngresoParameter = new ObjectParameter("idNotaIngreso", idNotaIngreso);
            }
            else
            {
                idNotaIngresoParameter = new ObjectParameter("idNotaIngreso", typeof(int));
            }
            return base.ExecuteFunction("sp_ObtenerNotaIngreso", idNotaIngresoParameter);
        }
        public virtual int  sp_ListarDetalleNotaIngreso(Nullable<int> idNotaIngreso)
        {
    
            ObjectParameter idNotaIngresoParameter;
    
            if (idNotaIngreso.HasValue)
            {
                idNotaIngresoParameter = new ObjectParameter("idNotaIngreso", idNotaIngreso);
            }
            else
            {
                idNotaIngresoParameter = new ObjectParameter("idNotaIngreso", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarDetalleNotaIngreso", idNotaIngresoParameter);
        }
        public virtual int  sp_ListarAvisoDisponibilidad(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarAvisoDisponibilidad", idEmpresaParameter);
        }
        public virtual int  sp_ListarProductosxPromocion(Nullable<int> idPromocion)
        {
    
            ObjectParameter idPromocionParameter;
    
            if (idPromocion.HasValue)
            {
                idPromocionParameter = new ObjectParameter("idPromocion", idPromocion);
            }
            else
            {
                idPromocionParameter = new ObjectParameter("idPromocion", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarProductosxPromocion", idPromocionParameter);
        }
        public virtual int  sp_ListaPreCargaOrdenProduccion(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListaPreCargaOrdenProduccion", idEmpresaParameter);
        }
        public virtual int  sp_ListarProductosTiendaVirtual(Nullable<int> idEmpresa, Nullable<int> idCategoria, Nullable<int> idColor, Nullable<int> idTalla, Nullable<int> idMaterial)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter idCategoriaParameter;
    
            if (idCategoria.HasValue)
            {
                idCategoriaParameter = new ObjectParameter("idCategoria", idCategoria);
            }
            else
            {
                idCategoriaParameter = new ObjectParameter("idCategoria", typeof(int));
            }
    
            ObjectParameter idColorParameter;
    
            if (idColor.HasValue)
            {
                idColorParameter = new ObjectParameter("idColor", idColor);
            }
            else
            {
                idColorParameter = new ObjectParameter("idColor", typeof(int));
            }
    
            ObjectParameter idTallaParameter;
    
            if (idTalla.HasValue)
            {
                idTallaParameter = new ObjectParameter("idTalla", idTalla);
            }
            else
            {
                idTallaParameter = new ObjectParameter("idTalla", typeof(int));
            }
    
            ObjectParameter idMaterialParameter;
    
            if (idMaterial.HasValue)
            {
                idMaterialParameter = new ObjectParameter("idMaterial", idMaterial);
            }
            else
            {
                idMaterialParameter = new ObjectParameter("idMaterial", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarProductosTiendaVirtual", idEmpresaParameter, idCategoriaParameter, idColorParameter, idTallaParameter, idMaterialParameter);
        }
        public virtual int  sp_ListarDetalleNotaSalida(Nullable<int> idNotaSalida)
        {
    
            ObjectParameter idNotaSalidaParameter;
    
            if (idNotaSalida.HasValue)
            {
                idNotaSalidaParameter = new ObjectParameter("idNotaSalida", idNotaSalida);
            }
            else
            {
                idNotaSalidaParameter = new ObjectParameter("idNotaSalida", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarDetalleNotaSalida", idNotaSalidaParameter);
        }
        public virtual int  sp_ObtenerNotaSalida(Nullable<int> idNotaSalida)
        {
    
            ObjectParameter idNotaSalidaParameter;
    
            if (idNotaSalida.HasValue)
            {
                idNotaSalidaParameter = new ObjectParameter("idNotaSalida", idNotaSalida);
            }
            else
            {
                idNotaSalidaParameter = new ObjectParameter("idNotaSalida", typeof(int));
            }
            return base.ExecuteFunction("sp_ObtenerNotaSalida", idNotaSalidaParameter);
        }
        public virtual int  sp_ListarProductosTop(Nullable<int> idEmpresa, Nullable<int> orden, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter ordenParameter;
    
            if (orden.HasValue)
            {
                ordenParameter = new ObjectParameter("orden", orden);
            }
            else
            {
                ordenParameter = new ObjectParameter("orden", typeof(int));
            }
    
            ObjectParameter fechaInicioParameter;
    
            if (fechaInicio.HasValue)
            {
                fechaInicioParameter = new ObjectParameter("fechaInicio", fechaInicio);
            }
            else
            {
                fechaInicioParameter = new ObjectParameter("fechaInicio", typeof(System.DateTime));
            }
    
            ObjectParameter fechaFinParameter;
    
            if (fechaFin.HasValue)
            {
                fechaFinParameter = new ObjectParameter("fechaFin", fechaFin);
            }
            else
            {
                fechaFinParameter = new ObjectParameter("fechaFin", typeof(System.DateTime));
            }
            return base.ExecuteFunction("sp_ListarProductosTop", idEmpresaParameter, ordenParameter, fechaInicioParameter, fechaFinParameter);
        }
        public virtual int  sp_ListaComprobantes(Nullable<int> pAnio, Nullable<int> pMes, Nullable<int> idEmpresa)
        {
    
            ObjectParameter pAnioParameter;
    
            if (pAnio.HasValue)
            {
                pAnioParameter = new ObjectParameter("pAnio", pAnio);
            }
            else
            {
                pAnioParameter = new ObjectParameter("pAnio", typeof(int));
            }
    
            ObjectParameter pMesParameter;
    
            if (pMes.HasValue)
            {
                pMesParameter = new ObjectParameter("pMes", pMes);
            }
            else
            {
                pMesParameter = new ObjectParameter("pMes", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListaComprobantes", pAnioParameter, pMesParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListarBajaFacturacion(Nullable<int> anio, Nullable<int> mes, Nullable<int> idEmpresa)
        {
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
    
            ObjectParameter mesParameter;
    
            if (mes.HasValue)
            {
                mesParameter = new ObjectParameter("mes", mes);
            }
            else
            {
                mesParameter = new ObjectParameter("mes", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarBajaFacturacion", anioParameter, mesParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListarResumenFacturacion(Nullable<int> anio, Nullable<int> mes, Nullable<int> idEmpresa)
        {
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
    
            ObjectParameter mesParameter;
    
            if (mes.HasValue)
            {
                mesParameter = new ObjectParameter("mes", mes);
            }
            else
            {
                mesParameter = new ObjectParameter("mes", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarResumenFacturacion", anioParameter, mesParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListaNotaCreditoVenta(Nullable<int> pAnio, Nullable<int> pMes, Nullable<int> idEmpresa)
        {
    
            ObjectParameter pAnioParameter;
    
            if (pAnio.HasValue)
            {
                pAnioParameter = new ObjectParameter("pAnio", pAnio);
            }
            else
            {
                pAnioParameter = new ObjectParameter("pAnio", typeof(int));
            }
    
            ObjectParameter pMesParameter;
    
            if (pMes.HasValue)
            {
                pMesParameter = new ObjectParameter("pMes", pMes);
            }
            else
            {
                pMesParameter = new ObjectParameter("pMes", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListaNotaCreditoVenta", pAnioParameter, pMesParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListaNotaDebitoVenta(Nullable<int> pAnio, Nullable<int> pMes, Nullable<int> idEmpresa)
        {
    
            ObjectParameter pAnioParameter;
    
            if (pAnio.HasValue)
            {
                pAnioParameter = new ObjectParameter("pAnio", pAnio);
            }
            else
            {
                pAnioParameter = new ObjectParameter("pAnio", typeof(int));
            }
    
            ObjectParameter pMesParameter;
    
            if (pMes.HasValue)
            {
                pMesParameter = new ObjectParameter("pMes", pMes);
            }
            else
            {
                pMesParameter = new ObjectParameter("pMes", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListaNotaDebitoVenta", pAnioParameter, pMesParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListaProductosBajoStock(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListaProductosBajoStock", idEmpresaParameter);
        }
        public virtual int  sp_ObtenerClienteMes(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ObtenerClienteMes", idEmpresaParameter);
        }
        public virtual ObjectResult<Nullable<decimal>>  sp_ObtenerIncrementoClientes(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction<Nullable<decimal>>("sp_ObtenerIncrementoClientes", idEmpresaParameter);
        }
        public virtual int  sp_ObtenerMejorVenta(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ObtenerMejorVenta", idEmpresaParameter);
        }
        public virtual ObjectResult<Nullable<decimal>>  sp_ObtenerPorcentajeIncremento(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction<Nullable<decimal>>("sp_ObtenerPorcentajeIncremento", idEmpresaParameter);
        }
        public virtual int  sp_ListarTallasxDetalleNotaSalida(Nullable<int> idNotaSalida)
        {
    
            ObjectParameter idNotaSalidaParameter;
    
            if (idNotaSalida.HasValue)
            {
                idNotaSalidaParameter = new ObjectParameter("idNotaSalida", idNotaSalida);
            }
            else
            {
                idNotaSalidaParameter = new ObjectParameter("idNotaSalida", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarTallasxDetalleNotaSalida", idNotaSalidaParameter);
        }
        public virtual int  sp_ListarTipoDocumentoSerie()
        {
            return base.ExecuteFunction("sp_ListarTipoDocumentoSerie");
        }
        public virtual int  sp_ListaCompras(Nullable<int> pAnio, Nullable<int> pMes, Nullable<int> idEmpresa)
        {
    
            ObjectParameter pAnioParameter;
    
            if (pAnio.HasValue)
            {
                pAnioParameter = new ObjectParameter("pAnio", pAnio);
            }
            else
            {
                pAnioParameter = new ObjectParameter("pAnio", typeof(int));
            }
    
            ObjectParameter pMesParameter;
    
            if (pMes.HasValue)
            {
                pMesParameter = new ObjectParameter("pMes", pMes);
            }
            else
            {
                pMesParameter = new ObjectParameter("pMes", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListaCompras", pAnioParameter, pMesParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListarDetalleCompra(Nullable<int> idDocumentoComercial)
        {
    
            ObjectParameter idDocumentoComercialParameter;
    
            if (idDocumentoComercial.HasValue)
            {
                idDocumentoComercialParameter = new ObjectParameter("idDocumentoComercial", idDocumentoComercial);
            }
            else
            {
                idDocumentoComercialParameter = new ObjectParameter("idDocumentoComercial", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarDetalleCompra", idDocumentoComercialParameter);
        }
        public virtual int  sp_ObtenerCompra(Nullable<int> idCompra)
        {
    
            ObjectParameter idCompraParameter;
    
            if (idCompra.HasValue)
            {
                idCompraParameter = new ObjectParameter("idCompra", idCompra);
            }
            else
            {
                idCompraParameter = new ObjectParameter("idCompra", typeof(int));
            }
            return base.ExecuteFunction("sp_ObtenerCompra", idCompraParameter);
        }
        public virtual int  sp_ListaGasto(Nullable<int> pAnio, Nullable<int> pMes, Nullable<int> idEmpresa)
        {
    
            ObjectParameter pAnioParameter;
    
            if (pAnio.HasValue)
            {
                pAnioParameter = new ObjectParameter("pAnio", pAnio);
            }
            else
            {
                pAnioParameter = new ObjectParameter("pAnio", typeof(int));
            }
    
            ObjectParameter pMesParameter;
    
            if (pMes.HasValue)
            {
                pMesParameter = new ObjectParameter("pMes", pMes);
            }
            else
            {
                pMesParameter = new ObjectParameter("pMes", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListaGasto", pAnioParameter, pMesParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListarDetalleGasto(Nullable<int> idDocumentoComercial)
        {
    
            ObjectParameter idDocumentoComercialParameter;
    
            if (idDocumentoComercial.HasValue)
            {
                idDocumentoComercialParameter = new ObjectParameter("idDocumentoComercial", idDocumentoComercial);
            }
            else
            {
                idDocumentoComercialParameter = new ObjectParameter("idDocumentoComercial", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarDetalleGasto", idDocumentoComercialParameter);
        }
        public virtual int  sp_ObtenerGasto(Nullable<int> idCompra)
        {
    
            ObjectParameter idCompraParameter;
    
            if (idCompra.HasValue)
            {
                idCompraParameter = new ObjectParameter("idCompra", idCompra);
            }
            else
            {
                idCompraParameter = new ObjectParameter("idCompra", typeof(int));
            }
            return base.ExecuteFunction("sp_ObtenerGasto", idCompraParameter);
        }
        public virtual int  sp_ListarDetalleTransferencias(Nullable<int> idTransferencia)
        {
    
            ObjectParameter idTransferenciaParameter;
    
            if (idTransferencia.HasValue)
            {
                idTransferenciaParameter = new ObjectParameter("idTransferencia", idTransferencia);
            }
            else
            {
                idTransferenciaParameter = new ObjectParameter("idTransferencia", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarDetalleTransferencias", idTransferenciaParameter);
        }
        public virtual int  sp_ObtenerTransferencia(Nullable<int> idTransferencia)
        {
    
            ObjectParameter idTransferenciaParameter;
    
            if (idTransferencia.HasValue)
            {
                idTransferenciaParameter = new ObjectParameter("idTransferencia", idTransferencia);
            }
            else
            {
                idTransferenciaParameter = new ObjectParameter("idTransferencia", typeof(int));
            }
            return base.ExecuteFunction("sp_ObtenerTransferencia", idTransferenciaParameter);
        }
        public virtual int  sp_ListarDetalleAjuste(Nullable<int> idDocumentoComercial)
        {
    
            ObjectParameter idDocumentoComercialParameter;
    
            if (idDocumentoComercial.HasValue)
            {
                idDocumentoComercialParameter = new ObjectParameter("idDocumentoComercial", idDocumentoComercial);
            }
            else
            {
                idDocumentoComercialParameter = new ObjectParameter("idDocumentoComercial", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarDetalleAjuste", idDocumentoComercialParameter);
        }
        public virtual int  sp_ObtenerAjuste(Nullable<int> idAjusteAlmacen)
        {
    
            ObjectParameter idAjusteAlmacenParameter;
    
            if (idAjusteAlmacen.HasValue)
            {
                idAjusteAlmacenParameter = new ObjectParameter("idAjusteAlmacen", idAjusteAlmacen);
            }
            else
            {
                idAjusteAlmacenParameter = new ObjectParameter("idAjusteAlmacen", typeof(int));
            }
            return base.ExecuteFunction("sp_ObtenerAjuste", idAjusteAlmacenParameter);
        }
        public virtual int  sp_ListarDetalleNotaIngresoRpt(Nullable<int> anio, Nullable<int> mes, Nullable<int> idEmpresa)
        {
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
    
            ObjectParameter mesParameter;
    
            if (mes.HasValue)
            {
                mesParameter = new ObjectParameter("mes", mes);
            }
            else
            {
                mesParameter = new ObjectParameter("mes", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarDetalleNotaIngresoRpt", anioParameter, mesParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListarDetalleNotaSalidaRpt(Nullable<int> anio, Nullable<int> mes, Nullable<int> idEmpresa)
        {
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
    
            ObjectParameter mesParameter;
    
            if (mes.HasValue)
            {
                mesParameter = new ObjectParameter("mes", mes);
            }
            else
            {
                mesParameter = new ObjectParameter("mes", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarDetalleNotaSalidaRpt", anioParameter, mesParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListarDetalleAjusteRpt(Nullable<int> anio, Nullable<int> mes, Nullable<int> idEmpresa)
        {
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
    
            ObjectParameter mesParameter;
    
            if (mes.HasValue)
            {
                mesParameter = new ObjectParameter("mes", mes);
            }
            else
            {
                mesParameter = new ObjectParameter("mes", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarDetalleAjusteRpt", anioParameter, mesParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListarDetalleTransferenciasRpt(Nullable<int> anio, Nullable<int> mes, Nullable<int> idEmpresa)
        {
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
    
            ObjectParameter mesParameter;
    
            if (mes.HasValue)
            {
                mesParameter = new ObjectParameter("mes", mes);
            }
            else
            {
                mesParameter = new ObjectParameter("mes", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarDetalleTransferenciasRpt", anioParameter, mesParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListarIngresosEgresos(Nullable<int> anio, Nullable<int> mes, Nullable<int> indicador, Nullable<int> idEmpresa)
        {
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
    
            ObjectParameter mesParameter;
    
            if (mes.HasValue)
            {
                mesParameter = new ObjectParameter("mes", mes);
            }
            else
            {
                mesParameter = new ObjectParameter("mes", typeof(int));
            }
    
            ObjectParameter indicadorParameter;
    
            if (indicador.HasValue)
            {
                indicadorParameter = new ObjectParameter("indicador", indicador);
            }
            else
            {
                indicadorParameter = new ObjectParameter("indicador", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarIngresosEgresos", anioParameter, mesParameter, indicadorParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListarPrestamosProveedores(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarPrestamosProveedores", idEmpresaParameter);
        }
        public virtual int  sp_ListarDetalleCompraRpt(Nullable<int> anio, Nullable<int> mes, Nullable<int> idEmpresa)
        {
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
    
            ObjectParameter mesParameter;
    
            if (mes.HasValue)
            {
                mesParameter = new ObjectParameter("mes", mes);
            }
            else
            {
                mesParameter = new ObjectParameter("mes", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarDetalleCompraRpt", anioParameter, mesParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListarDetalleGastoRpt(Nullable<int> anio, Nullable<int> mes, Nullable<int> idEmpresa)
        {
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
    
            ObjectParameter mesParameter;
    
            if (mes.HasValue)
            {
                mesParameter = new ObjectParameter("mes", mes);
            }
            else
            {
                mesParameter = new ObjectParameter("mes", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarDetalleGastoRpt", anioParameter, mesParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListarSimulacionCuotas(Nullable<int> p_Meses, Nullable<decimal> pPago, Nullable<decimal> pInteres, Nullable<System.DateTime> pFechaInicio)
        {
    
            ObjectParameter p_MesesParameter;
    
            if (p_Meses.HasValue)
            {
                p_MesesParameter = new ObjectParameter("p_Meses", p_Meses);
            }
            else
            {
                p_MesesParameter = new ObjectParameter("p_Meses", typeof(int));
            }
    
            ObjectParameter pPagoParameter;
    
            if (pPago.HasValue)
            {
                pPagoParameter = new ObjectParameter("pPago", pPago);
            }
            else
            {
                pPagoParameter = new ObjectParameter("pPago", typeof(decimal));
            }
    
            ObjectParameter pInteresParameter;
    
            if (pInteres.HasValue)
            {
                pInteresParameter = new ObjectParameter("pInteres", pInteres);
            }
            else
            {
                pInteresParameter = new ObjectParameter("pInteres", typeof(decimal));
            }
    
            ObjectParameter pFechaInicioParameter;
    
            if (pFechaInicio.HasValue)
            {
                pFechaInicioParameter = new ObjectParameter("pFechaInicio", pFechaInicio);
            }
            else
            {
                pFechaInicioParameter = new ObjectParameter("pFechaInicio", typeof(System.DateTime));
            }
            return base.ExecuteFunction("sp_ListarSimulacionCuotas", p_MesesParameter, pPagoParameter, pInteresParameter, pFechaInicioParameter);
        }
        public virtual int  sp_ListarCuotasxPedido(Nullable<int> idPedido)
        {
    
            ObjectParameter idPedidoParameter;
    
            if (idPedido.HasValue)
            {
                idPedidoParameter = new ObjectParameter("idPedido", idPedido);
            }
            else
            {
                idPedidoParameter = new ObjectParameter("idPedido", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarCuotasxPedido", idPedidoParameter);
        }
        public virtual int  sp_ListaCobroPagoDocumento(Nullable<int> idDocumentoComercial, Nullable<int> idTipoOrigen)
        {
    
            ObjectParameter idDocumentoComercialParameter;
    
            if (idDocumentoComercial.HasValue)
            {
                idDocumentoComercialParameter = new ObjectParameter("idDocumentoComercial", idDocumentoComercial);
            }
            else
            {
                idDocumentoComercialParameter = new ObjectParameter("idDocumentoComercial", typeof(int));
            }
    
            ObjectParameter idTipoOrigenParameter;
    
            if (idTipoOrigen.HasValue)
            {
                idTipoOrigenParameter = new ObjectParameter("idTipoOrigen", idTipoOrigen);
            }
            else
            {
                idTipoOrigenParameter = new ObjectParameter("idTipoOrigen", typeof(int));
            }
            return base.ExecuteFunction("sp_ListaCobroPagoDocumento", idDocumentoComercialParameter, idTipoOrigenParameter);
        }
        public virtual int  sp_ListaReservaRestaurant(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListaReservaRestaurant", idEmpresaParameter);
        }
        public virtual int  sp_ListarHorasDiaDisponible(Nullable<int> nroPersonas, Nullable<System.DateTime> fecha)
        {
    
            ObjectParameter nroPersonasParameter;
    
            if (nroPersonas.HasValue)
            {
                nroPersonasParameter = new ObjectParameter("nroPersonas", nroPersonas);
            }
            else
            {
                nroPersonasParameter = new ObjectParameter("nroPersonas", typeof(int));
            }
    
            ObjectParameter fechaParameter;
    
            if (fecha.HasValue)
            {
                fechaParameter = new ObjectParameter("fecha", fecha);
            }
            else
            {
                fechaParameter = new ObjectParameter("fecha", typeof(System.DateTime));
            }
            return base.ExecuteFunction("sp_ListarHorasDiaDisponible", nroPersonasParameter, fechaParameter);
        }
        public virtual int  sp_listarMesasDisponiblesxHoraDia(Nullable<int> nroPersonas, Nullable<System.DateTime> fecha, string hora)
        {
    
            ObjectParameter nroPersonasParameter;
    
            if (nroPersonas.HasValue)
            {
                nroPersonasParameter = new ObjectParameter("nroPersonas", nroPersonas);
            }
            else
            {
                nroPersonasParameter = new ObjectParameter("nroPersonas", typeof(int));
            }
    
            ObjectParameter fechaParameter;
    
            if (fecha.HasValue)
            {
                fechaParameter = new ObjectParameter("fecha", fecha);
            }
            else
            {
                fechaParameter = new ObjectParameter("fecha", typeof(System.DateTime));
            }
    
            ObjectParameter horaParameter;
    
            if (hora != null)
            {
                horaParameter = new ObjectParameter("hora", hora);
            }
            else
            {
                horaParameter = new ObjectParameter("hora", typeof(string));
            }
            return base.ExecuteFunction("sp_listarMesasDisponiblesxHoraDia", nroPersonasParameter, fechaParameter, horaParameter);
        }
        public virtual int  sp_ListarDetallePedido(Nullable<int> idPedido)
        {
    
            ObjectParameter idPedidoParameter;
    
            if (idPedido.HasValue)
            {
                idPedidoParameter = new ObjectParameter("idPedido", idPedido);
            }
            else
            {
                idPedidoParameter = new ObjectParameter("idPedido", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarDetallePedido", idPedidoParameter);
        }
        public virtual int  sp_ListaProforma(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListaProforma", idEmpresaParameter);
        }
        public virtual int  sp_ListarDetalleProforma(Nullable<int> idProforma)
        {
    
            ObjectParameter idProformaParameter;
    
            if (idProforma.HasValue)
            {
                idProformaParameter = new ObjectParameter("idProforma", idProforma);
            }
            else
            {
                idProformaParameter = new ObjectParameter("idProforma", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarDetalleProforma", idProformaParameter);
        }
        public virtual int  sp_ObtenerProforma(Nullable<int> idProforma)
        {
    
            ObjectParameter idProformaParameter;
    
            if (idProforma.HasValue)
            {
                idProformaParameter = new ObjectParameter("idProforma", idProforma);
            }
            else
            {
                idProformaParameter = new ObjectParameter("idProforma", typeof(int));
            }
            return base.ExecuteFunction("sp_ObtenerProforma", idProformaParameter);
        }
        public virtual int  sp_ListarPuntosAtencionUsuario(Nullable<int> idUsuario)
        {
    
            ObjectParameter idUsuarioParameter;
    
            if (idUsuario.HasValue)
            {
                idUsuarioParameter = new ObjectParameter("idUsuario", idUsuario);
            }
            else
            {
                idUsuarioParameter = new ObjectParameter("idUsuario", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarPuntosAtencionUsuario", idUsuarioParameter);
        }
        public virtual int  sp_ObtenerPuntoAtencion(Nullable<int> idPuntoAtencion)
        {
    
            ObjectParameter idPuntoAtencionParameter;
    
            if (idPuntoAtencion.HasValue)
            {
                idPuntoAtencionParameter = new ObjectParameter("idPuntoAtencion", idPuntoAtencion);
            }
            else
            {
                idPuntoAtencionParameter = new ObjectParameter("idPuntoAtencion", typeof(int));
            }
            return base.ExecuteFunction("sp_ObtenerPuntoAtencion", idPuntoAtencionParameter);
        }
        public virtual int  sp_ListarPuntosAtencion(Nullable<int> idPuntoAtencion)
        {
    
            ObjectParameter idPuntoAtencionParameter;
    
            if (idPuntoAtencion.HasValue)
            {
                idPuntoAtencionParameter = new ObjectParameter("idPuntoAtencion", idPuntoAtencion);
            }
            else
            {
                idPuntoAtencionParameter = new ObjectParameter("idPuntoAtencion", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarPuntosAtencion", idPuntoAtencionParameter);
        }
        public virtual int  sp_ListaSucursal(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListaSucursal", idEmpresaParameter);
        }
        public virtual int  sp_ListaTipoDocumentoSerie(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListaTipoDocumentoSerie", idEmpresaParameter);
        }
        public virtual int  sp_ListarSeriesPuntoAtencion(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarSeriesPuntoAtencion", idEmpresaParameter);
        }
        public virtual int  sp_ListarEquivalentesPrecios(Nullable<int> idProducto, Nullable<int> idTipoVenta)
        {
    
            ObjectParameter idProductoParameter;
    
            if (idProducto.HasValue)
            {
                idProductoParameter = new ObjectParameter("idProducto", idProducto);
            }
            else
            {
                idProductoParameter = new ObjectParameter("idProducto", typeof(int));
            }
    
            ObjectParameter idTipoVentaParameter;
    
            if (idTipoVenta.HasValue)
            {
                idTipoVentaParameter = new ObjectParameter("idTipoVenta", idTipoVenta);
            }
            else
            {
                idTipoVentaParameter = new ObjectParameter("idTipoVenta", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarEquivalentesPrecios", idProductoParameter, idTipoVentaParameter);
        }
        public virtual int  sp_ListaPuntoAtencion(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListaPuntoAtencion", idEmpresaParameter);
        }
        public virtual int  sp_ListarServicioProducto(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarServicioProducto", idEmpresaParameter);
        }
        public virtual int  sp_ListaVentasxResumen(Nullable<int> idResumen, Nullable<int> idEmpresa)
        {
    
            ObjectParameter idResumenParameter;
    
            if (idResumen.HasValue)
            {
                idResumenParameter = new ObjectParameter("idResumen", idResumen);
            }
            else
            {
                idResumenParameter = new ObjectParameter("idResumen", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListaVentasxResumen", idResumenParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListarVentasxCondicionPago(Nullable<int> anio, Nullable<int> idTipoDoc, Nullable<int> idEmpresa)
        {
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
    
            ObjectParameter idTipoDocParameter;
    
            if (idTipoDoc.HasValue)
            {
                idTipoDocParameter = new ObjectParameter("idTipoDoc", idTipoDoc);
            }
            else
            {
                idTipoDocParameter = new ObjectParameter("idTipoDoc", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarVentasxCondicionPago", anioParameter, idTipoDocParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListarClientesTop(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarClientesTop", idEmpresaParameter);
        }
        public virtual int  sp_ListarResumenComprobantes(Nullable<int> idEmpresa, Nullable<int> anio, Nullable<int> mes)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
    
            ObjectParameter mesParameter;
    
            if (mes.HasValue)
            {
                mesParameter = new ObjectParameter("mes", mes);
            }
            else
            {
                mesParameter = new ObjectParameter("mes", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarResumenComprobantes", idEmpresaParameter, anioParameter, mesParameter);
        }
        public virtual int  sp_ListaVentasCobranza(Nullable<int> pAnio, Nullable<int> pMes, Nullable<int> idEmpresa)
        {
    
            ObjectParameter pAnioParameter;
    
            if (pAnio.HasValue)
            {
                pAnioParameter = new ObjectParameter("pAnio", pAnio);
            }
            else
            {
                pAnioParameter = new ObjectParameter("pAnio", typeof(int));
            }
    
            ObjectParameter pMesParameter;
    
            if (pMes.HasValue)
            {
                pMesParameter = new ObjectParameter("pMes", pMes);
            }
            else
            {
                pMesParameter = new ObjectParameter("pMes", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListaVentasCobranza", pAnioParameter, pMesParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListarMovimientosCaja(Nullable<int> idCaja, Nullable<int> anio, Nullable<int> mes)
        {
    
            ObjectParameter idCajaParameter;
    
            if (idCaja.HasValue)
            {
                idCajaParameter = new ObjectParameter("idCaja", idCaja);
            }
            else
            {
                idCajaParameter = new ObjectParameter("idCaja", typeof(int));
            }
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
    
            ObjectParameter mesParameter;
    
            if (mes.HasValue)
            {
                mesParameter = new ObjectParameter("mes", mes);
            }
            else
            {
                mesParameter = new ObjectParameter("mes", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarMovimientosCaja", idCajaParameter, anioParameter, mesParameter);
        }
        public virtual int  sp_ListarGuiasRemision(Nullable<int> idEmpresa, Nullable<int> anio, Nullable<int> mes)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
    
            ObjectParameter mesParameter;
    
            if (mes.HasValue)
            {
                mesParameter = new ObjectParameter("mes", mes);
            }
            else
            {
                mesParameter = new ObjectParameter("mes", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarGuiasRemision", idEmpresaParameter, anioParameter, mesParameter);
        }
        public virtual int  sp_ListarGuiaRemisionTransportista(Nullable<int> idGuiaRemision)
        {
    
            ObjectParameter idGuiaRemisionParameter;
    
            if (idGuiaRemision.HasValue)
            {
                idGuiaRemisionParameter = new ObjectParameter("idGuiaRemision", idGuiaRemision);
            }
            else
            {
                idGuiaRemisionParameter = new ObjectParameter("idGuiaRemision", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarGuiaRemisionTransportista", idGuiaRemisionParameter);
        }
        public virtual int  sp_ListarProductosGuiaRemision(Nullable<int> idGuiaRemision)
        {
    
            ObjectParameter idGuiaRemisionParameter;
    
            if (idGuiaRemision.HasValue)
            {
                idGuiaRemisionParameter = new ObjectParameter("idGuiaRemision", idGuiaRemision);
            }
            else
            {
                idGuiaRemisionParameter = new ObjectParameter("idGuiaRemision", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarProductosGuiaRemision", idGuiaRemisionParameter);
        }
        public virtual int  sp_ListarCotizacion(Nullable<int> idEmpresa, Nullable<int> anio, Nullable<int> mes, Nullable<int> idSucursal)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
    
            ObjectParameter mesParameter;
    
            if (mes.HasValue)
            {
                mesParameter = new ObjectParameter("mes", mes);
            }
            else
            {
                mesParameter = new ObjectParameter("mes", typeof(int));
            }
    
            ObjectParameter idSucursalParameter;
    
            if (idSucursal.HasValue)
            {
                idSucursalParameter = new ObjectParameter("idSucursal", idSucursal);
            }
            else
            {
                idSucursalParameter = new ObjectParameter("idSucursal", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarCotizacion", idEmpresaParameter, anioParameter, mesParameter, idSucursalParameter);
        }
        public virtual int  sp_ListarDetalleCotizacion(Nullable<int> idCotizacion)
        {
    
            ObjectParameter idCotizacionParameter;
    
            if (idCotizacion.HasValue)
            {
                idCotizacionParameter = new ObjectParameter("idCotizacion", idCotizacion);
            }
            else
            {
                idCotizacionParameter = new ObjectParameter("idCotizacion", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarDetalleCotizacion", idCotizacionParameter);
        }
        public virtual int  sp_ObtenerCotizacion(Nullable<int> idCotizacion)
        {
    
            ObjectParameter idCotizacionParameter;
    
            if (idCotizacion.HasValue)
            {
                idCotizacionParameter = new ObjectParameter("idCotizacion", idCotizacion);
            }
            else
            {
                idCotizacionParameter = new ObjectParameter("idCotizacion", typeof(int));
            }
            return base.ExecuteFunction("sp_ObtenerCotizacion", idCotizacionParameter);
        }
        public virtual int  sp_ListarVentasPivot(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<int> idEmpresa)
        {
    
            ObjectParameter fechaInicioParameter;
    
            if (fechaInicio.HasValue)
            {
                fechaInicioParameter = new ObjectParameter("fechaInicio", fechaInicio);
            }
            else
            {
                fechaInicioParameter = new ObjectParameter("fechaInicio", typeof(System.DateTime));
            }
    
            ObjectParameter fechaFinParameter;
    
            if (fechaFin.HasValue)
            {
                fechaFinParameter = new ObjectParameter("fechaFin", fechaFin);
            }
            else
            {
                fechaFinParameter = new ObjectParameter("fechaFin", typeof(System.DateTime));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarVentasPivot", fechaInicioParameter, fechaFinParameter, idEmpresaParameter);
        }
        public virtual int  sp_buscarProductoxCodBarras(string codigo, Nullable<int> idEmpresa)
        {
    
            ObjectParameter codigoParameter;
    
            if (codigo != null)
            {
                codigoParameter = new ObjectParameter("codigo", codigo);
            }
            else
            {
                codigoParameter = new ObjectParameter("codigo", typeof(string));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_buscarProductoxCodBarras", codigoParameter, idEmpresaParameter);
        }
        public virtual int  sp_buscarProductoxSerie(string codigo, Nullable<int> idEmpresa)
        {
    
            ObjectParameter codigoParameter;
    
            if (codigo != null)
            {
                codigoParameter = new ObjectParameter("codigo", codigo);
            }
            else
            {
                codigoParameter = new ObjectParameter("codigo", typeof(string));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_buscarProductoxSerie", codigoParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListarVehiculos(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarVehiculos", idEmpresaParameter);
        }
        public virtual int  sp_ListarBienes(Nullable<int> idEmpresa, Nullable<int> idTipoBien)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter idTipoBienParameter;
    
            if (idTipoBien.HasValue)
            {
                idTipoBienParameter = new ObjectParameter("idTipoBien", idTipoBien);
            }
            else
            {
                idTipoBienParameter = new ObjectParameter("idTipoBien", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarBienes", idEmpresaParameter, idTipoBienParameter);
        }
        public virtual int  sp_ListarBienesxNI(Nullable<int> idDetalleNotaIngreso)
        {
    
            ObjectParameter idDetalleNotaIngresoParameter;
    
            if (idDetalleNotaIngreso.HasValue)
            {
                idDetalleNotaIngresoParameter = new ObjectParameter("idDetalleNotaIngreso", idDetalleNotaIngreso);
            }
            else
            {
                idDetalleNotaIngresoParameter = new ObjectParameter("idDetalleNotaIngreso", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarBienesxNI", idDetalleNotaIngresoParameter);
        }
        public virtual int  sp_ListarProcesarNI(Nullable<int> idEmpresa, Nullable<int> anio, Nullable<int> mes)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
    
            ObjectParameter mesParameter;
    
            if (mes.HasValue)
            {
                mesParameter = new ObjectParameter("mes", mes);
            }
            else
            {
                mesParameter = new ObjectParameter("mes", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarProcesarNI", idEmpresaParameter, anioParameter, mesParameter);
        }
        public virtual int  sp_ListarDepartamentos()
        {
            return base.ExecuteFunction("sp_ListarDepartamentos");
        }
        public virtual int  sp_ListarDistritos(string provincia)
        {
    
            ObjectParameter provinciaParameter;
    
            if (provincia != null)
            {
                provinciaParameter = new ObjectParameter("provincia", provincia);
            }
            else
            {
                provinciaParameter = new ObjectParameter("provincia", typeof(string));
            }
            return base.ExecuteFunction("sp_ListarDistritos", provinciaParameter);
        }
        public virtual int  sp_ListarProvincias(string departamento)
        {
    
            ObjectParameter departamentoParameter;
    
            if (departamento != null)
            {
                departamentoParameter = new ObjectParameter("departamento", departamento);
            }
            else
            {
                departamentoParameter = new ObjectParameter("departamento", typeof(string));
            }
            return base.ExecuteFunction("sp_ListarProvincias", departamentoParameter);
        }
        public virtual int  sp_buscarVehiculosProducto(Nullable<int> idProducto, Nullable<int> idEmpresa)
        {
    
            ObjectParameter idProductoParameter;
    
            if (idProducto.HasValue)
            {
                idProductoParameter = new ObjectParameter("idProducto", idProducto);
            }
            else
            {
                idProductoParameter = new ObjectParameter("idProducto", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_buscarVehiculosProducto", idProductoParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListarDetalleNotaIngresoPendientexPedido(Nullable<int> idPedido)
        {
    
            ObjectParameter idPedidoParameter;
    
            if (idPedido.HasValue)
            {
                idPedidoParameter = new ObjectParameter("idPedido", idPedido);
            }
            else
            {
                idPedidoParameter = new ObjectParameter("idPedido", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarDetalleNotaIngresoPendientexPedido", idPedidoParameter);
        }
        public virtual int  sp_EnviarInformeVentasDiarias(Nullable<System.DateTime> fecha, Nullable<int> idEmpresa)
        {
    
            ObjectParameter fechaParameter;
    
            if (fecha.HasValue)
            {
                fechaParameter = new ObjectParameter("fecha", fecha);
            }
            else
            {
                fechaParameter = new ObjectParameter("fecha", typeof(System.DateTime));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_EnviarInformeVentasDiarias", fechaParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListarUsuariosNotificacion()
        {
            return base.ExecuteFunction("sp_ListarUsuariosNotificacion");
        }
        public virtual int  sp_ListarServicioTaller(Nullable<int> idEmpresa, Nullable<int> anio, Nullable<int> mes)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
    
            ObjectParameter mesParameter;
    
            if (mes.HasValue)
            {
                mesParameter = new ObjectParameter("mes", mes);
            }
            else
            {
                mesParameter = new ObjectParameter("mes", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarServicioTaller", idEmpresaParameter, anioParameter, mesParameter);
        }
        public virtual int  sp_ListarServicioTallerDetalle(Nullable<int> idServicioTaller)
        {
    
            ObjectParameter idServicioTallerParameter;
    
            if (idServicioTaller.HasValue)
            {
                idServicioTallerParameter = new ObjectParameter("idServicioTaller", idServicioTaller);
            }
            else
            {
                idServicioTallerParameter = new ObjectParameter("idServicioTaller", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarServicioTallerDetalle", idServicioTallerParameter);
        }
        public virtual int  sp_ObtenerServicioTaller(Nullable<int> idServicioTaller)
        {
    
            ObjectParameter idServicioTallerParameter;
    
            if (idServicioTaller.HasValue)
            {
                idServicioTallerParameter = new ObjectParameter("idServicioTaller", idServicioTaller);
            }
            else
            {
                idServicioTallerParameter = new ObjectParameter("idServicioTaller", typeof(int));
            }
            return base.ExecuteFunction("sp_ObtenerServicioTaller", idServicioTallerParameter);
        }
        public virtual int  sp_ListarPreciosxCantidad(Nullable<decimal> cantidad, Nullable<int> idProducto, Nullable<int> idEmpresa, Nullable<int> idAlmacen)
        {
    
            ObjectParameter cantidadParameter;
    
            if (cantidad.HasValue)
            {
                cantidadParameter = new ObjectParameter("cantidad", cantidad);
            }
            else
            {
                cantidadParameter = new ObjectParameter("cantidad", typeof(decimal));
            }
    
            ObjectParameter idProductoParameter;
    
            if (idProducto.HasValue)
            {
                idProductoParameter = new ObjectParameter("idProducto", idProducto);
            }
            else
            {
                idProductoParameter = new ObjectParameter("idProducto", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter idAlmacenParameter;
    
            if (idAlmacen.HasValue)
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", idAlmacen);
            }
            else
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarPreciosxCantidad", cantidadParameter, idProductoParameter, idEmpresaParameter, idAlmacenParameter);
        }
        public virtual int  sp_ListarLiquidacionxProducto(Nullable<int> idCaja)
        {
    
            ObjectParameter idCajaParameter;
    
            if (idCaja.HasValue)
            {
                idCajaParameter = new ObjectParameter("idCaja", idCaja);
            }
            else
            {
                idCajaParameter = new ObjectParameter("idCaja", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarLiquidacionxProducto", idCajaParameter);
        }
        public virtual int  sp_listarHistoricoDetalleVenta(Nullable<int> idDetalleVenta)
        {
    
            ObjectParameter idDetalleVentaParameter;
    
            if (idDetalleVenta.HasValue)
            {
                idDetalleVentaParameter = new ObjectParameter("idDetalleVenta", idDetalleVenta);
            }
            else
            {
                idDetalleVentaParameter = new ObjectParameter("idDetalleVenta", typeof(int));
            }
            return base.ExecuteFunction("sp_listarHistoricoDetalleVenta", idDetalleVentaParameter);
        }
        public virtual int  sp_ListarDetalleCobros(Nullable<int> idEmpresa, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter fechaInicioParameter;
    
            if (fechaInicio.HasValue)
            {
                fechaInicioParameter = new ObjectParameter("fechaInicio", fechaInicio);
            }
            else
            {
                fechaInicioParameter = new ObjectParameter("fechaInicio", typeof(System.DateTime));
            }
    
            ObjectParameter fechaFinParameter;
    
            if (fechaFin.HasValue)
            {
                fechaFinParameter = new ObjectParameter("fechaFin", fechaFin);
            }
            else
            {
                fechaFinParameter = new ObjectParameter("fechaFin", typeof(System.DateTime));
            }
            return base.ExecuteFunction("sp_ListarDetalleCobros", idEmpresaParameter, fechaInicioParameter, fechaFinParameter);
        }
        public virtual int  sp_ListarResumenCobros(Nullable<int> idEmpresa, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<int> idCliente)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter fechaInicioParameter;
    
            if (fechaInicio.HasValue)
            {
                fechaInicioParameter = new ObjectParameter("fechaInicio", fechaInicio);
            }
            else
            {
                fechaInicioParameter = new ObjectParameter("fechaInicio", typeof(System.DateTime));
            }
    
            ObjectParameter fechaFinParameter;
    
            if (fechaFin.HasValue)
            {
                fechaFinParameter = new ObjectParameter("fechaFin", fechaFin);
            }
            else
            {
                fechaFinParameter = new ObjectParameter("fechaFin", typeof(System.DateTime));
            }
    
            ObjectParameter idClienteParameter;
    
            if (idCliente.HasValue)
            {
                idClienteParameter = new ObjectParameter("idCliente", idCliente);
            }
            else
            {
                idClienteParameter = new ObjectParameter("idCliente", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarResumenCobros", idEmpresaParameter, fechaInicioParameter, fechaFinParameter, idClienteParameter);
        }
        public virtual int  sp_BuscarVentasPendientesxChasis(string chasis, Nullable<int> idEmpresa)
        {
    
            ObjectParameter chasisParameter;
    
            if (chasis != null)
            {
                chasisParameter = new ObjectParameter("chasis", chasis);
            }
            else
            {
                chasisParameter = new ObjectParameter("chasis", typeof(string));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_BuscarVentasPendientesxChasis", chasisParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListarPrestamosCliente(Nullable<int> idEmpresa, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter fechaInicioParameter;
    
            if (fechaInicio.HasValue)
            {
                fechaInicioParameter = new ObjectParameter("fechaInicio", fechaInicio);
            }
            else
            {
                fechaInicioParameter = new ObjectParameter("fechaInicio", typeof(System.DateTime));
            }
    
            ObjectParameter fechaFinParameter;
    
            if (fechaFin.HasValue)
            {
                fechaFinParameter = new ObjectParameter("fechaFin", fechaFin);
            }
            else
            {
                fechaFinParameter = new ObjectParameter("fechaFin", typeof(System.DateTime));
            }
            return base.ExecuteFunction("sp_ListarPrestamosCliente", idEmpresaParameter, fechaInicioParameter, fechaFinParameter);
        }
        public virtual int  sp_ListarPrestamosxResponsable(Nullable<int> idResponsable)
        {
    
            ObjectParameter idResponsableParameter;
    
            if (idResponsable.HasValue)
            {
                idResponsableParameter = new ObjectParameter("idResponsable", idResponsable);
            }
            else
            {
                idResponsableParameter = new ObjectParameter("idResponsable", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarPrestamosxResponsable", idResponsableParameter);
        }
        public virtual int  sp_GenerarCronogramaCuotaDiaria(Nullable<decimal> pPago, Nullable<decimal> pInteres, Nullable<System.DateTime> pFechaInicio)
        {
    
            ObjectParameter pPagoParameter;
    
            if (pPago.HasValue)
            {
                pPagoParameter = new ObjectParameter("pPago", pPago);
            }
            else
            {
                pPagoParameter = new ObjectParameter("pPago", typeof(decimal));
            }
    
            ObjectParameter pInteresParameter;
    
            if (pInteres.HasValue)
            {
                pInteresParameter = new ObjectParameter("pInteres", pInteres);
            }
            else
            {
                pInteresParameter = new ObjectParameter("pInteres", typeof(decimal));
            }
    
            ObjectParameter pFechaInicioParameter;
    
            if (pFechaInicio.HasValue)
            {
                pFechaInicioParameter = new ObjectParameter("pFechaInicio", pFechaInicio);
            }
            else
            {
                pFechaInicioParameter = new ObjectParameter("pFechaInicio", typeof(System.DateTime));
            }
            return base.ExecuteFunction("sp_GenerarCronogramaCuotaDiaria", pPagoParameter, pInteresParameter, pFechaInicioParameter);
        }
        public virtual int  sp_ListarPrestamoClienteCronogramaxTrabajador(Nullable<int> idTrabajador, Nullable<System.DateTime> fecha)
        {
    
            ObjectParameter idTrabajadorParameter;
    
            if (idTrabajador.HasValue)
            {
                idTrabajadorParameter = new ObjectParameter("idTrabajador", idTrabajador);
            }
            else
            {
                idTrabajadorParameter = new ObjectParameter("idTrabajador", typeof(int));
            }
    
            ObjectParameter fechaParameter;
    
            if (fecha.HasValue)
            {
                fechaParameter = new ObjectParameter("fecha", fecha);
            }
            else
            {
                fechaParameter = new ObjectParameter("fecha", typeof(System.DateTime));
            }
            return base.ExecuteFunction("sp_ListarPrestamoClienteCronogramaxTrabajador", idTrabajadorParameter, fechaParameter);
        }
        public virtual int  sp_ListarPrestamoClienteCronogramaxCliente(Nullable<int> idCliente)
        {
    
            ObjectParameter idClienteParameter;
    
            if (idCliente.HasValue)
            {
                idClienteParameter = new ObjectParameter("idCliente", idCliente);
            }
            else
            {
                idClienteParameter = new ObjectParameter("idCliente", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarPrestamoClienteCronogramaxCliente", idClienteParameter);
        }
        public virtual int  sp_ListarDetalleNotaIngresoImprimir(Nullable<int> idNotaIngreso)
        {
    
            ObjectParameter idNotaIngresoParameter;
    
            if (idNotaIngreso.HasValue)
            {
                idNotaIngresoParameter = new ObjectParameter("idNotaIngreso", idNotaIngreso);
            }
            else
            {
                idNotaIngresoParameter = new ObjectParameter("idNotaIngreso", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarDetalleNotaIngresoImprimir", idNotaIngresoParameter);
        }
        public virtual int  sp_ListarHistoricoPreciosxProducto(Nullable<int> idProducto)
        {
    
            ObjectParameter idProductoParameter;
    
            if (idProducto.HasValue)
            {
                idProductoParameter = new ObjectParameter("idProducto", idProducto);
            }
            else
            {
                idProductoParameter = new ObjectParameter("idProducto", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarHistoricoPreciosxProducto", idProductoParameter);
        }
        public virtual int  sp_ListarVentaVehiculos(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarVentaVehiculos", idEmpresaParameter);
        }
        public virtual int  sp_ListarCronogramaxVenta(Nullable<int> idVenta)
        {
    
            ObjectParameter idVentaParameter;
    
            if (idVenta.HasValue)
            {
                idVentaParameter = new ObjectParameter("idVenta", idVenta);
            }
            else
            {
                idVentaParameter = new ObjectParameter("idVenta", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarCronogramaxVenta", idVentaParameter);
        }
        public virtual int  sp_GenerarCronogramaCuotaDiariaVehiculos(Nullable<int> incluyeDomingos, Nullable<decimal> pPago, Nullable<decimal> pInteres, Nullable<System.DateTime> pFechaInicio, Nullable<int> cuotasPagadas, Nullable<int> plazo)
        {
    
            ObjectParameter incluyeDomingosParameter;
    
            if (incluyeDomingos.HasValue)
            {
                incluyeDomingosParameter = new ObjectParameter("incluyeDomingos", incluyeDomingos);
            }
            else
            {
                incluyeDomingosParameter = new ObjectParameter("incluyeDomingos", typeof(int));
            }
    
            ObjectParameter pPagoParameter;
    
            if (pPago.HasValue)
            {
                pPagoParameter = new ObjectParameter("pPago", pPago);
            }
            else
            {
                pPagoParameter = new ObjectParameter("pPago", typeof(decimal));
            }
    
            ObjectParameter pInteresParameter;
    
            if (pInteres.HasValue)
            {
                pInteresParameter = new ObjectParameter("pInteres", pInteres);
            }
            else
            {
                pInteresParameter = new ObjectParameter("pInteres", typeof(decimal));
            }
    
            ObjectParameter pFechaInicioParameter;
    
            if (pFechaInicio.HasValue)
            {
                pFechaInicioParameter = new ObjectParameter("pFechaInicio", pFechaInicio);
            }
            else
            {
                pFechaInicioParameter = new ObjectParameter("pFechaInicio", typeof(System.DateTime));
            }
    
            ObjectParameter cuotasPagadasParameter;
    
            if (cuotasPagadas.HasValue)
            {
                cuotasPagadasParameter = new ObjectParameter("cuotasPagadas", cuotasPagadas);
            }
            else
            {
                cuotasPagadasParameter = new ObjectParameter("cuotasPagadas", typeof(int));
            }
    
            ObjectParameter plazoParameter;
    
            if (plazo.HasValue)
            {
                plazoParameter = new ObjectParameter("plazo", plazo);
            }
            else
            {
                plazoParameter = new ObjectParameter("plazo", typeof(int));
            }
            return base.ExecuteFunction("sp_GenerarCronogramaCuotaDiariaVehiculos", incluyeDomingosParameter, pPagoParameter, pInteresParameter, pFechaInicioParameter, cuotasPagadasParameter, plazoParameter);
        }
        public virtual int  sp_ListarUbigeo()
        {
            return base.ExecuteFunction("sp_ListarUbigeo");
        }
        public virtual int  sp_ListarOpcionMenuFlotantexRol(Nullable<int> idRol)
        {
    
            ObjectParameter idRolParameter;
    
            if (idRol.HasValue)
            {
                idRolParameter = new ObjectParameter("idRol", idRol);
            }
            else
            {
                idRolParameter = new ObjectParameter("idRol", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarOpcionMenuFlotantexRol", idRolParameter);
        }
        public virtual int  sp_ListarCobrosxCliente(Nullable<int> idCliente, Nullable<int> idEmpresa)
        {
    
            ObjectParameter idClienteParameter;
    
            if (idCliente.HasValue)
            {
                idClienteParameter = new ObjectParameter("idCliente", idCliente);
            }
            else
            {
                idClienteParameter = new ObjectParameter("idCliente", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarCobrosxCliente", idClienteParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListarDetalleNotaIngresoAdicional(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarDetalleNotaIngresoAdicional", idEmpresaParameter);
        }
        public virtual int  sp_ListarPersonasxFechaRegistro(Nullable<int> idEmpresa, Nullable<System.DateTime> fechaRegistro, Nullable<int> tipo)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter fechaRegistroParameter;
    
            if (fechaRegistro.HasValue)
            {
                fechaRegistroParameter = new ObjectParameter("fechaRegistro", fechaRegistro);
            }
            else
            {
                fechaRegistroParameter = new ObjectParameter("fechaRegistro", typeof(System.DateTime));
            }
    
            ObjectParameter tipoParameter;
    
            if (tipo.HasValue)
            {
                tipoParameter = new ObjectParameter("tipo", tipo);
            }
            else
            {
                tipoParameter = new ObjectParameter("tipo", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarPersonasxFechaRegistro", idEmpresaParameter, fechaRegistroParameter, tipoParameter);
        }
        public virtual int  sp_ListarClienteOrdenxTrabajador(Nullable<int> idTrabajador)
        {
    
            ObjectParameter idTrabajadorParameter;
    
            if (idTrabajador.HasValue)
            {
                idTrabajadorParameter = new ObjectParameter("idTrabajador", idTrabajador);
            }
            else
            {
                idTrabajadorParameter = new ObjectParameter("idTrabajador", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarClienteOrdenxTrabajador", idTrabajadorParameter);
        }
        public virtual int  sp_ListarKardexAlmacen(Nullable<int> idAlmacen, Nullable<int> idEmpresa, Nullable<System.DateTime> fechaFin)
        {
    
            ObjectParameter idAlmacenParameter;
    
            if (idAlmacen.HasValue)
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", idAlmacen);
            }
            else
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter fechaFinParameter;
    
            if (fechaFin.HasValue)
            {
                fechaFinParameter = new ObjectParameter("fechaFin", fechaFin);
            }
            else
            {
                fechaFinParameter = new ObjectParameter("fechaFin", typeof(System.DateTime));
            }
            return base.ExecuteFunction("sp_ListarKardexAlmacen", idAlmacenParameter, idEmpresaParameter, fechaFinParameter);
        }
        public virtual int  sp_ListarDetalleCobrosDia(Nullable<int> idEmpresa, Nullable<System.DateTime> fecha)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter fechaParameter;
    
            if (fecha.HasValue)
            {
                fechaParameter = new ObjectParameter("fecha", fecha);
            }
            else
            {
                fechaParameter = new ObjectParameter("fecha", typeof(System.DateTime));
            }
            return base.ExecuteFunction("sp_ListarDetalleCobrosDia", idEmpresaParameter, fechaParameter);
        }
        public virtual int  sp_ListarGastosDia(Nullable<int> idEmpresa, Nullable<System.DateTime> fechaPago)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter fechaPagoParameter;
    
            if (fechaPago.HasValue)
            {
                fechaPagoParameter = new ObjectParameter("fechaPago", fechaPago);
            }
            else
            {
                fechaPagoParameter = new ObjectParameter("fechaPago", typeof(System.DateTime));
            }
            return base.ExecuteFunction("sp_ListarGastosDia", idEmpresaParameter, fechaPagoParameter);
        }
        public virtual int  sp_ListarResumenCobrosDia(Nullable<int> idEmpresa, Nullable<System.DateTime> fecha)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter fechaParameter;
    
            if (fecha.HasValue)
            {
                fechaParameter = new ObjectParameter("fecha", fecha);
            }
            else
            {
                fechaParameter = new ObjectParameter("fecha", typeof(System.DateTime));
            }
            return base.ExecuteFunction("sp_ListarResumenCobrosDia", idEmpresaParameter, fechaParameter);
        }
        public virtual int  sp_ListarVentaVehiculosDia(Nullable<int> idEmpresa, Nullable<System.DateTime> fecha)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter fechaParameter;
    
            if (fecha.HasValue)
            {
                fechaParameter = new ObjectParameter("fecha", fecha);
            }
            else
            {
                fechaParameter = new ObjectParameter("fecha", typeof(System.DateTime));
            }
            return base.ExecuteFunction("sp_ListarVentaVehiculosDia", idEmpresaParameter, fechaParameter);
        }
        public virtual int  sp_ListarLiquidaciones(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarLiquidaciones", idEmpresaParameter);
        }
        public virtual int  sp_ObtenerEstadisticoDiario(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ObtenerEstadisticoDiario", idEmpresaParameter);
        }
        public virtual int  sp_ListarLiquidacionesDiariasxCaja(Nullable<int> idCaja, Nullable<int> anio, Nullable<int> mes)
        {
    
            ObjectParameter idCajaParameter;
    
            if (idCaja.HasValue)
            {
                idCajaParameter = new ObjectParameter("idCaja", idCaja);
            }
            else
            {
                idCajaParameter = new ObjectParameter("idCaja", typeof(int));
            }
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
    
            ObjectParameter mesParameter;
    
            if (mes.HasValue)
            {
                mesParameter = new ObjectParameter("mes", mes);
            }
            else
            {
                mesParameter = new ObjectParameter("mes", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarLiquidacionesDiariasxCaja", idCajaParameter, anioParameter, mesParameter);
        }
        public virtual int  sp_ListarLiquidacionesMensuales(Nullable<int> idCaja)
        {
    
            ObjectParameter idCajaParameter;
    
            if (idCaja.HasValue)
            {
                idCajaParameter = new ObjectParameter("idCaja", idCaja);
            }
            else
            {
                idCajaParameter = new ObjectParameter("idCaja", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarLiquidacionesMensuales", idCajaParameter);
        }
        public virtual int  sp_ListarVentaVehiculosPagados(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarVentaVehiculosPagados", idEmpresaParameter);
        }
        public virtual int  sp_ListarCobrosPrestamoxDiaTrabajador(Nullable<int> idTrabajador, Nullable<System.DateTime> fecha, Nullable<int> idEmpresa)
        {
    
            ObjectParameter idTrabajadorParameter;
    
            if (idTrabajador.HasValue)
            {
                idTrabajadorParameter = new ObjectParameter("idTrabajador", idTrabajador);
            }
            else
            {
                idTrabajadorParameter = new ObjectParameter("idTrabajador", typeof(int));
            }
    
            ObjectParameter fechaParameter;
    
            if (fecha.HasValue)
            {
                fechaParameter = new ObjectParameter("fecha", fecha);
            }
            else
            {
                fechaParameter = new ObjectParameter("fecha", typeof(System.DateTime));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarCobrosPrestamoxDiaTrabajador", idTrabajadorParameter, fechaParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListarGastosPrestamosDia(Nullable<int> idEmpresa, Nullable<System.DateTime> fechaPago, Nullable<int> idTrabajador)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter fechaPagoParameter;
    
            if (fechaPago.HasValue)
            {
                fechaPagoParameter = new ObjectParameter("fechaPago", fechaPago);
            }
            else
            {
                fechaPagoParameter = new ObjectParameter("fechaPago", typeof(System.DateTime));
            }
    
            ObjectParameter idTrabajadorParameter;
    
            if (idTrabajador.HasValue)
            {
                idTrabajadorParameter = new ObjectParameter("idTrabajador", idTrabajador);
            }
            else
            {
                idTrabajadorParameter = new ObjectParameter("idTrabajador", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarGastosPrestamosDia", idEmpresaParameter, fechaPagoParameter, idTrabajadorParameter);
        }
        public virtual int  sp_ListarPrestamosDia(Nullable<int> idTrabajador, Nullable<System.DateTime> fecha)
        {
    
            ObjectParameter idTrabajadorParameter;
    
            if (idTrabajador.HasValue)
            {
                idTrabajadorParameter = new ObjectParameter("idTrabajador", idTrabajador);
            }
            else
            {
                idTrabajadorParameter = new ObjectParameter("idTrabajador", typeof(int));
            }
    
            ObjectParameter fechaParameter;
    
            if (fecha.HasValue)
            {
                fechaParameter = new ObjectParameter("fecha", fecha);
            }
            else
            {
                fechaParameter = new ObjectParameter("fecha", typeof(System.DateTime));
            }
            return base.ExecuteFunction("sp_ListarPrestamosDia", idTrabajadorParameter, fechaParameter);
        }
        public virtual int  sp_ListarVehiculosTransportexPersona(Nullable<int> idPersona)
        {
    
            ObjectParameter idPersonaParameter;
    
            if (idPersona.HasValue)
            {
                idPersonaParameter = new ObjectParameter("idPersona", idPersona);
            }
            else
            {
                idPersonaParameter = new ObjectParameter("idPersona", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarVehiculosTransportexPersona", idPersonaParameter);
        }
        public virtual int  sp_ListaCajaDiariaLiquidar(Nullable<int> idEmpresa, Nullable<System.DateTime> fecha)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter fechaParameter;
    
            if (fecha.HasValue)
            {
                fechaParameter = new ObjectParameter("fecha", fecha);
            }
            else
            {
                fechaParameter = new ObjectParameter("fecha", typeof(System.DateTime));
            }
            return base.ExecuteFunction("sp_ListaCajaDiariaLiquidar", idEmpresaParameter, fechaParameter);
        }
        public virtual int  sp_ListarGuiasRemisionxFecha(Nullable<int> idEmpresa, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<int> idCliente)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter fechaInicioParameter;
    
            if (fechaInicio.HasValue)
            {
                fechaInicioParameter = new ObjectParameter("fechaInicio", fechaInicio);
            }
            else
            {
                fechaInicioParameter = new ObjectParameter("fechaInicio", typeof(System.DateTime));
            }
    
            ObjectParameter fechaFinParameter;
    
            if (fechaFin.HasValue)
            {
                fechaFinParameter = new ObjectParameter("fechaFin", fechaFin);
            }
            else
            {
                fechaFinParameter = new ObjectParameter("fechaFin", typeof(System.DateTime));
            }
    
            ObjectParameter idClienteParameter;
    
            if (idCliente.HasValue)
            {
                idClienteParameter = new ObjectParameter("idCliente", idCliente);
            }
            else
            {
                idClienteParameter = new ObjectParameter("idCliente", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarGuiasRemisionxFecha", idEmpresaParameter, fechaInicioParameter, fechaFinParameter, idClienteParameter);
        }
        public virtual int  sp_ListarPrestamoClientexDiaTrabajador(Nullable<int> idTrabajador, Nullable<System.DateTime> fecha)
        {
    
            ObjectParameter idTrabajadorParameter;
    
            if (idTrabajador.HasValue)
            {
                idTrabajadorParameter = new ObjectParameter("idTrabajador", idTrabajador);
            }
            else
            {
                idTrabajadorParameter = new ObjectParameter("idTrabajador", typeof(int));
            }
    
            ObjectParameter fechaParameter;
    
            if (fecha.HasValue)
            {
                fechaParameter = new ObjectParameter("fecha", fecha);
            }
            else
            {
                fechaParameter = new ObjectParameter("fecha", typeof(System.DateTime));
            }
            return base.ExecuteFunction("sp_ListarPrestamoClientexDiaTrabajador", idTrabajadorParameter, fechaParameter);
        }
        public virtual int  sp_ListarFacturarGuias(string guias)
        {
    
            ObjectParameter guiasParameter;
    
            if (guias != null)
            {
                guiasParameter = new ObjectParameter("guias", guias);
            }
            else
            {
                guiasParameter = new ObjectParameter("guias", typeof(string));
            }
            return base.ExecuteFunction("sp_ListarFacturarGuias", guiasParameter);
        }
        public virtual int  sp_ListarVentaCuotas(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarVentaCuotas", idEmpresaParameter);
        }
        public virtual int  sp_ListarProductoFormaPago(Nullable<int> idProducto)
        {
    
            ObjectParameter idProductoParameter;
    
            if (idProducto.HasValue)
            {
                idProductoParameter = new ObjectParameter("idProducto", idProducto);
            }
            else
            {
                idProductoParameter = new ObjectParameter("idProducto", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarProductoFormaPago", idProductoParameter);
        }
        public virtual int  sp_ActualizarKardexAlmacenProducto(Nullable<int> idAlmacen, Nullable<int> idProducto)
        {
    
            ObjectParameter idAlmacenParameter;
    
            if (idAlmacen.HasValue)
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", idAlmacen);
            }
            else
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", typeof(int));
            }
    
            ObjectParameter idProductoParameter;
    
            if (idProducto.HasValue)
            {
                idProductoParameter = new ObjectParameter("idProducto", idProducto);
            }
            else
            {
                idProductoParameter = new ObjectParameter("idProducto", typeof(int));
            }
            return base.ExecuteFunction("sp_ActualizarKardexAlmacenProducto", idAlmacenParameter, idProductoParameter);
        }
        public virtual int  sp_ObtenerSaldoxCaja(Nullable<int> idCaja, Nullable<int> anio, Nullable<int> mes, Nullable<int> dia)
        {
    
            ObjectParameter idCajaParameter;
    
            if (idCaja.HasValue)
            {
                idCajaParameter = new ObjectParameter("idCaja", idCaja);
            }
            else
            {
                idCajaParameter = new ObjectParameter("idCaja", typeof(int));
            }
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
    
            ObjectParameter mesParameter;
    
            if (mes.HasValue)
            {
                mesParameter = new ObjectParameter("mes", mes);
            }
            else
            {
                mesParameter = new ObjectParameter("mes", typeof(int));
            }
    
            ObjectParameter diaParameter;
    
            if (dia.HasValue)
            {
                diaParameter = new ObjectParameter("dia", dia);
            }
            else
            {
                diaParameter = new ObjectParameter("dia", typeof(int));
            }
            return base.ExecuteFunction("sp_ObtenerSaldoxCaja", idCajaParameter, anioParameter, mesParameter, diaParameter);
        }
        public virtual int  sp_ListarVentasAnticipos(Nullable<int> idEmpresa, Nullable<int> idCliente)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter idClienteParameter;
    
            if (idCliente.HasValue)
            {
                idClienteParameter = new ObjectParameter("idCliente", idCliente);
            }
            else
            {
                idClienteParameter = new ObjectParameter("idCliente", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarVentasAnticipos", idEmpresaParameter, idClienteParameter);
        }
        public virtual int  sp_ListarDetalleVentaAnticipos(string ventas)
        {
    
            ObjectParameter ventasParameter;
    
            if (ventas != null)
            {
                ventasParameter = new ObjectParameter("ventas", ventas);
            }
            else
            {
                ventasParameter = new ObjectParameter("ventas", typeof(string));
            }
            return base.ExecuteFunction("sp_ListarDetalleVentaAnticipos", ventasParameter);
        }
        public virtual int  sp_ListarGuiasSinVenta(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarGuiasSinVenta", idEmpresaParameter);
        }
        public virtual int  sp_ListarVentaCronogramaPendiente(Nullable<int> idEmpresa, Nullable<System.DateTime> fecha)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter fechaParameter;
    
            if (fecha.HasValue)
            {
                fechaParameter = new ObjectParameter("fecha", fecha);
            }
            else
            {
                fechaParameter = new ObjectParameter("fecha", typeof(System.DateTime));
            }
            return base.ExecuteFunction("sp_ListarVentaCronogramaPendiente", idEmpresaParameter, fechaParameter);
        }
        public virtual int  sp_ListarCobrosxCronograma(Nullable<int> idVenta)
        {
    
            ObjectParameter idVentaParameter;
    
            if (idVenta.HasValue)
            {
                idVentaParameter = new ObjectParameter("idVenta", idVenta);
            }
            else
            {
                idVentaParameter = new ObjectParameter("idVenta", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarCobrosxCronograma", idVentaParameter);
        }
        public virtual int  sp_ListarCobroxMovimientoCaja(Nullable<int> idVenta)
        {
    
            ObjectParameter idVentaParameter;
    
            if (idVenta.HasValue)
            {
                idVentaParameter = new ObjectParameter("idVenta", idVenta);
            }
            else
            {
                idVentaParameter = new ObjectParameter("idVenta", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarCobroxMovimientoCaja", idVentaParameter);
        }
        public virtual int  sp_ListarCobrosDetalladosxCliente(Nullable<int> idCliente, Nullable<int> formaPago)
        {
    
            ObjectParameter idClienteParameter;
    
            if (idCliente.HasValue)
            {
                idClienteParameter = new ObjectParameter("idCliente", idCliente);
            }
            else
            {
                idClienteParameter = new ObjectParameter("idCliente", typeof(int));
            }
    
            ObjectParameter formaPagoParameter;
    
            if (formaPago.HasValue)
            {
                formaPagoParameter = new ObjectParameter("formaPago", formaPago);
            }
            else
            {
                formaPagoParameter = new ObjectParameter("formaPago", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarCobrosDetalladosxCliente", idClienteParameter, formaPagoParameter);
        }
        public virtual int  sp_ListarPagosDetalladosxCompra(Nullable<int> idProveedor, Nullable<int> formaPago)
        {
    
            ObjectParameter idProveedorParameter;
    
            if (idProveedor.HasValue)
            {
                idProveedorParameter = new ObjectParameter("idProveedor", idProveedor);
            }
            else
            {
                idProveedorParameter = new ObjectParameter("idProveedor", typeof(int));
            }
    
            ObjectParameter formaPagoParameter;
    
            if (formaPago.HasValue)
            {
                formaPagoParameter = new ObjectParameter("formaPago", formaPago);
            }
            else
            {
                formaPagoParameter = new ObjectParameter("formaPago", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarPagosDetalladosxCompra", idProveedorParameter, formaPagoParameter);
        }
        public virtual int  sp_ListarPagosDetalladosxGasto(Nullable<int> idProveedor, Nullable<int> formaPago)
        {
    
            ObjectParameter idProveedorParameter;
    
            if (idProveedor.HasValue)
            {
                idProveedorParameter = new ObjectParameter("idProveedor", idProveedor);
            }
            else
            {
                idProveedorParameter = new ObjectParameter("idProveedor", typeof(int));
            }
    
            ObjectParameter formaPagoParameter;
    
            if (formaPago.HasValue)
            {
                formaPagoParameter = new ObjectParameter("formaPago", formaPago);
            }
            else
            {
                formaPagoParameter = new ObjectParameter("formaPago", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarPagosDetalladosxGasto", idProveedorParameter, formaPagoParameter);
        }
        public virtual int  sp_ListaComprobantesDiarios(Nullable<int> pAnio, Nullable<int> pMes, Nullable<int> pDia, Nullable<int> idEmpresa)
        {
    
            ObjectParameter pAnioParameter;
    
            if (pAnio.HasValue)
            {
                pAnioParameter = new ObjectParameter("pAnio", pAnio);
            }
            else
            {
                pAnioParameter = new ObjectParameter("pAnio", typeof(int));
            }
    
            ObjectParameter pMesParameter;
    
            if (pMes.HasValue)
            {
                pMesParameter = new ObjectParameter("pMes", pMes);
            }
            else
            {
                pMesParameter = new ObjectParameter("pMes", typeof(int));
            }
    
            ObjectParameter pDiaParameter;
    
            if (pDia.HasValue)
            {
                pDiaParameter = new ObjectParameter("pDia", pDia);
            }
            else
            {
                pDiaParameter = new ObjectParameter("pDia", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListaComprobantesDiarios", pAnioParameter, pMesParameter, pDiaParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListarItinerarios(Nullable<System.DateTime> fechaRegistro)
        {
    
            ObjectParameter fechaRegistroParameter;
    
            if (fechaRegistro.HasValue)
            {
                fechaRegistroParameter = new ObjectParameter("fechaRegistro", fechaRegistro);
            }
            else
            {
                fechaRegistroParameter = new ObjectParameter("fechaRegistro", typeof(System.DateTime));
            }
            return base.ExecuteFunction("sp_ListarItinerarios", fechaRegistroParameter);
        }
        public virtual int  sp_CondicionPagoxCaja(Nullable<int> idCaja)
        {
    
            ObjectParameter idCajaParameter;
    
            if (idCaja.HasValue)
            {
                idCajaParameter = new ObjectParameter("idCaja", idCaja);
            }
            else
            {
                idCajaParameter = new ObjectParameter("idCaja", typeof(int));
            }
            return base.ExecuteFunction("sp_CondicionPagoxCaja", idCajaParameter);
        }
        public virtual int  sp_FormaPagoVentaxCaja(Nullable<int> idCaja)
        {
    
            ObjectParameter idCajaParameter;
    
            if (idCaja.HasValue)
            {
                idCajaParameter = new ObjectParameter("idCaja", idCaja);
            }
            else
            {
                idCajaParameter = new ObjectParameter("idCaja", typeof(int));
            }
            return base.ExecuteFunction("sp_FormaPagoVentaxCaja", idCajaParameter);
        }
        public virtual int  sp_MovimientosxCaja(Nullable<int> idCaja)
        {
    
            ObjectParameter idCajaParameter;
    
            if (idCaja.HasValue)
            {
                idCajaParameter = new ObjectParameter("idCaja", idCaja);
            }
            else
            {
                idCajaParameter = new ObjectParameter("idCaja", typeof(int));
            }
            return base.ExecuteFunction("sp_MovimientosxCaja", idCajaParameter);
        }
        public virtual int  sp_ResumenVentasxCaja(Nullable<int> idCaja)
        {
    
            ObjectParameter idCajaParameter;
    
            if (idCaja.HasValue)
            {
                idCajaParameter = new ObjectParameter("idCaja", idCaja);
            }
            else
            {
                idCajaParameter = new ObjectParameter("idCaja", typeof(int));
            }
            return base.ExecuteFunction("sp_ResumenVentasxCaja", idCajaParameter);
        }
        public virtual int  sp_ListarDetalleNotaCredito(Nullable<int> idNotaCredito)
        {
    
            ObjectParameter idNotaCreditoParameter;
    
            if (idNotaCredito.HasValue)
            {
                idNotaCreditoParameter = new ObjectParameter("idNotaCredito", idNotaCredito);
            }
            else
            {
                idNotaCreditoParameter = new ObjectParameter("idNotaCredito", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarDetalleNotaCredito", idNotaCreditoParameter);
        }
        public virtual int  sp_ObtenerNotaCreditoVenta(Nullable<int> idNotaCredito)
        {
    
            ObjectParameter idNotaCreditoParameter;
    
            if (idNotaCredito.HasValue)
            {
                idNotaCreditoParameter = new ObjectParameter("idNotaCredito", idNotaCredito);
            }
            else
            {
                idNotaCreditoParameter = new ObjectParameter("idNotaCredito", typeof(int));
            }
            return base.ExecuteFunction("sp_ObtenerNotaCreditoVenta", idNotaCreditoParameter);
        }
        public virtual int  sp_ListarVentasAnualxCatProducto(Nullable<int> idEmpresa, Nullable<int> anio)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarVentasAnualxCatProducto", idEmpresaParameter, anioParameter);
        }
        public virtual int  sp_ListarVentasAnualxCliente(Nullable<int> idEmpresa, Nullable<int> anio)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarVentasAnualxCliente", idEmpresaParameter, anioParameter);
        }
        public virtual int  sp_ListarVentasAnualxSucursal(Nullable<int> idEmpresa, Nullable<int> anio)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter anioParameter;
    
            if (anio.HasValue)
            {
                anioParameter = new ObjectParameter("anio", anio);
            }
            else
            {
                anioParameter = new ObjectParameter("anio", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarVentasAnualxSucursal", idEmpresaParameter, anioParameter);
        }
        public virtual int  sp_ListaVentasEnEspera(Nullable<int> pAnio, Nullable<int> pMes, Nullable<int> idEmpresa, string usuarioRegistra)
        {
    
            ObjectParameter pAnioParameter;
    
            if (pAnio.HasValue)
            {
                pAnioParameter = new ObjectParameter("pAnio", pAnio);
            }
            else
            {
                pAnioParameter = new ObjectParameter("pAnio", typeof(int));
            }
    
            ObjectParameter pMesParameter;
    
            if (pMes.HasValue)
            {
                pMesParameter = new ObjectParameter("pMes", pMes);
            }
            else
            {
                pMesParameter = new ObjectParameter("pMes", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter usuarioRegistraParameter;
    
            if (usuarioRegistra != null)
            {
                usuarioRegistraParameter = new ObjectParameter("usuarioRegistra", usuarioRegistra);
            }
            else
            {
                usuarioRegistraParameter = new ObjectParameter("usuarioRegistra", typeof(string));
            }
            return base.ExecuteFunction("sp_ListaVentasEnEspera", pAnioParameter, pMesParameter, idEmpresaParameter, usuarioRegistraParameter);
        }
        public virtual int  sp_buscarProductoxLote(string codigo, Nullable<int> idEmpresa)
        {
    
            ObjectParameter codigoParameter;
    
            if (codigo != null)
            {
                codigoParameter = new ObjectParameter("codigo", codigo);
            }
            else
            {
                codigoParameter = new ObjectParameter("codigo", typeof(string));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_buscarProductoxLote", codigoParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListarStockxLoteSerie(Nullable<int> idEmpresa, Nullable<int> tipo, Nullable<int> idProducto)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter tipoParameter;
    
            if (tipo.HasValue)
            {
                tipoParameter = new ObjectParameter("tipo", tipo);
            }
            else
            {
                tipoParameter = new ObjectParameter("tipo", typeof(int));
            }
    
            ObjectParameter idProductoParameter;
    
            if (idProducto.HasValue)
            {
                idProductoParameter = new ObjectParameter("idProducto", idProducto);
            }
            else
            {
                idProductoParameter = new ObjectParameter("idProducto", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarStockxLoteSerie", idEmpresaParameter, tipoParameter, idProductoParameter);
        }
        public virtual int  sp_ListaComprasPendientes(Nullable<int> pAnio, Nullable<int> pMes, Nullable<int> idEmpresa, string estado)
        {
    
            ObjectParameter pAnioParameter;
    
            if (pAnio.HasValue)
            {
                pAnioParameter = new ObjectParameter("pAnio", pAnio);
            }
            else
            {
                pAnioParameter = new ObjectParameter("pAnio", typeof(int));
            }
    
            ObjectParameter pMesParameter;
    
            if (pMes.HasValue)
            {
                pMesParameter = new ObjectParameter("pMes", pMes);
            }
            else
            {
                pMesParameter = new ObjectParameter("pMes", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter estadoParameter;
    
            if (estado != null)
            {
                estadoParameter = new ObjectParameter("estado", estado);
            }
            else
            {
                estadoParameter = new ObjectParameter("estado", typeof(string));
            }
            return base.ExecuteFunction("sp_ListaComprasPendientes", pAnioParameter, pMesParameter, idEmpresaParameter, estadoParameter);
        }
        public virtual int  sp_ListarNotasIngresoxCompra(Nullable<int> idCompra)
        {
    
            ObjectParameter idCompraParameter;
    
            if (idCompra.HasValue)
            {
                idCompraParameter = new ObjectParameter("idCompra", idCompra);
            }
            else
            {
                idCompraParameter = new ObjectParameter("idCompra", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarNotasIngresoxCompra", idCompraParameter);
        }
        public virtual int  sp_ListarKardexAlmacenCorteFecha(Nullable<int> idAlmacen, Nullable<int> idEmpresa, Nullable<System.DateTime> fechaFin)
        {
    
            ObjectParameter idAlmacenParameter;
    
            if (idAlmacen.HasValue)
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", idAlmacen);
            }
            else
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter fechaFinParameter;
    
            if (fechaFin.HasValue)
            {
                fechaFinParameter = new ObjectParameter("fechaFin", fechaFin);
            }
            else
            {
                fechaFinParameter = new ObjectParameter("fechaFin", typeof(System.DateTime));
            }
            return base.ExecuteFunction("sp_ListarKardexAlmacenCorteFecha", idAlmacenParameter, idEmpresaParameter, fechaFinParameter);
        }
        public virtual int  sp_ObtenerGuiaRemision(Nullable<int> idGuiaRemision)
        {
    
            ObjectParameter idGuiaRemisionParameter;
    
            if (idGuiaRemision.HasValue)
            {
                idGuiaRemisionParameter = new ObjectParameter("idGuiaRemision", idGuiaRemision);
            }
            else
            {
                idGuiaRemisionParameter = new ObjectParameter("idGuiaRemision", typeof(int));
            }
            return base.ExecuteFunction("sp_ObtenerGuiaRemision", idGuiaRemisionParameter);
        }
        public virtual int  sp_ListarMovimientosxProducto(Nullable<int> idProducto, Nullable<int> idAlmacen, Nullable<System.DateTime> fechaDesde, Nullable<int> inicioTiempos)
        {
    
            ObjectParameter idProductoParameter;
    
            if (idProducto.HasValue)
            {
                idProductoParameter = new ObjectParameter("idProducto", idProducto);
            }
            else
            {
                idProductoParameter = new ObjectParameter("idProducto", typeof(int));
            }
    
            ObjectParameter idAlmacenParameter;
    
            if (idAlmacen.HasValue)
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", idAlmacen);
            }
            else
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", typeof(int));
            }
    
            ObjectParameter fechaDesdeParameter;
    
            if (fechaDesde.HasValue)
            {
                fechaDesdeParameter = new ObjectParameter("fechaDesde", fechaDesde);
            }
            else
            {
                fechaDesdeParameter = new ObjectParameter("fechaDesde", typeof(System.DateTime));
            }
    
            ObjectParameter inicioTiemposParameter;
    
            if (inicioTiempos.HasValue)
            {
                inicioTiemposParameter = new ObjectParameter("inicioTiempos", inicioTiempos);
            }
            else
            {
                inicioTiemposParameter = new ObjectParameter("inicioTiempos", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarMovimientosxProducto", idProductoParameter, idAlmacenParameter, fechaDesdeParameter, inicioTiemposParameter);
        }
        public virtual int  sp_ListarDetalleNotaDebito(Nullable<int> idNotaDebito)
        {
    
            ObjectParameter idNotaDebitoParameter;
    
            if (idNotaDebito.HasValue)
            {
                idNotaDebitoParameter = new ObjectParameter("idNotaDebito", idNotaDebito);
            }
            else
            {
                idNotaDebitoParameter = new ObjectParameter("idNotaDebito", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarDetalleNotaDebito", idNotaDebitoParameter);
        }
        public virtual int  sp_ObtenerNotaDebitoVenta(Nullable<int> idNotaDebito)
        {
    
            ObjectParameter idNotaDebitoParameter;
    
            if (idNotaDebito.HasValue)
            {
                idNotaDebitoParameter = new ObjectParameter("idNotaDebito", idNotaDebito);
            }
            else
            {
                idNotaDebitoParameter = new ObjectParameter("idNotaDebito", typeof(int));
            }
            return base.ExecuteFunction("sp_ObtenerNotaDebitoVenta", idNotaDebitoParameter);
        }
        public virtual int  sp_ListarCuentaBancaria(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarCuentaBancaria", idEmpresaParameter);
        }
        public virtual int  sp_ListarReservas(Nullable<int> idEmpresa, Nullable<int> idEstado)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter idEstadoParameter;
    
            if (idEstado.HasValue)
            {
                idEstadoParameter = new ObjectParameter("idEstado", idEstado);
            }
            else
            {
                idEstadoParameter = new ObjectParameter("idEstado", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarReservas", idEmpresaParameter, idEstadoParameter);
        }
        public virtual int  sp_ObtenerAdelantoReservaMesa(Nullable<int> idMesa)
        {
    
            ObjectParameter idMesaParameter;
    
            if (idMesa.HasValue)
            {
                idMesaParameter = new ObjectParameter("idMesa", idMesa);
            }
            else
            {
                idMesaParameter = new ObjectParameter("idMesa", typeof(int));
            }
            return base.ExecuteFunction("sp_ObtenerAdelantoReservaMesa", idMesaParameter);
        }
        public virtual int  sp_ListarProductosLotes(Nullable<int> idEmpresa, Nullable<int> idProyecto)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter idProyectoParameter;
    
            if (idProyecto.HasValue)
            {
                idProyectoParameter = new ObjectParameter("idProyecto", idProyecto);
            }
            else
            {
                idProyectoParameter = new ObjectParameter("idProyecto", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarProductosLotes", idEmpresaParameter, idProyectoParameter);
        }
        public virtual int  sp_ListarProyectosLotes(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarProyectosLotes", idEmpresaParameter);
        }
        public virtual int  sp_ListarManzanas(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarManzanas", idEmpresaParameter);
        }
        public virtual int  sp_ObtenerProductosLotes(Nullable<int> idProducto)
        {
    
            ObjectParameter idProductoParameter;
    
            if (idProducto.HasValue)
            {
                idProductoParameter = new ObjectParameter("idProducto", idProducto);
            }
            else
            {
                idProductoParameter = new ObjectParameter("idProducto", typeof(int));
            }
            return base.ExecuteFunction("sp_ObtenerProductosLotes", idProductoParameter);
        }
        public virtual int  sp_ListarEntregas(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarEntregas", idEmpresaParameter);
        }
        public virtual int  sp_ListarRenuncias(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarRenuncias", idEmpresaParameter);
        }
        public virtual int  sp_ListarTransferencia(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarTransferencia", idEmpresaParameter);
        }
        public virtual int  sp_ObtenerUbigeo(string codigo)
        {
    
            ObjectParameter codigoParameter;
    
            if (codigo != null)
            {
                codigoParameter = new ObjectParameter("codigo", codigo);
            }
            else
            {
                codigoParameter = new ObjectParameter("codigo", typeof(string));
            }
            return base.ExecuteFunction("sp_ObtenerUbigeo", codigoParameter);
        }
        public virtual ObjectResult<Nullable<decimal>>  sp_ObtenerCosto(Nullable<int> idVenta)
        {
    
            ObjectParameter idVentaParameter;
    
            if (idVenta.HasValue)
            {
                idVentaParameter = new ObjectParameter("idVenta", idVenta);
            }
            else
            {
                idVentaParameter = new ObjectParameter("idVenta", typeof(int));
            }
            return base.ExecuteFunction<Nullable<decimal>>("sp_ObtenerCosto", idVentaParameter);
        }
        public virtual int  sp_listarMesasTablero(Nullable<System.DateTime> fecha, string hora, Nullable<int> idEmpresa, Nullable<int> idEstado)
        {
    
            ObjectParameter fechaParameter;
    
            if (fecha.HasValue)
            {
                fechaParameter = new ObjectParameter("fecha", fecha);
            }
            else
            {
                fechaParameter = new ObjectParameter("fecha", typeof(System.DateTime));
            }
    
            ObjectParameter horaParameter;
    
            if (hora != null)
            {
                horaParameter = new ObjectParameter("hora", hora);
            }
            else
            {
                horaParameter = new ObjectParameter("hora", typeof(string));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter idEstadoParameter;
    
            if (idEstado.HasValue)
            {
                idEstadoParameter = new ObjectParameter("idEstado", idEstado);
            }
            else
            {
                idEstadoParameter = new ObjectParameter("idEstado", typeof(int));
            }
            return base.ExecuteFunction("sp_listarMesasTablero", fechaParameter, horaParameter, idEmpresaParameter, idEstadoParameter);
        }
        public virtual int  sp_ListarVentasDetallado(Nullable<int> idEmpresa, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<int> idResponsable, Nullable<int> idProducto)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter fechaInicioParameter;
    
            if (fechaInicio.HasValue)
            {
                fechaInicioParameter = new ObjectParameter("fechaInicio", fechaInicio);
            }
            else
            {
                fechaInicioParameter = new ObjectParameter("fechaInicio", typeof(System.DateTime));
            }
    
            ObjectParameter fechaFinParameter;
    
            if (fechaFin.HasValue)
            {
                fechaFinParameter = new ObjectParameter("fechaFin", fechaFin);
            }
            else
            {
                fechaFinParameter = new ObjectParameter("fechaFin", typeof(System.DateTime));
            }
    
            ObjectParameter idResponsableParameter;
    
            if (idResponsable.HasValue)
            {
                idResponsableParameter = new ObjectParameter("idResponsable", idResponsable);
            }
            else
            {
                idResponsableParameter = new ObjectParameter("idResponsable", typeof(int));
            }
    
            ObjectParameter idProductoParameter;
    
            if (idProducto.HasValue)
            {
                idProductoParameter = new ObjectParameter("idProducto", idProducto);
            }
            else
            {
                idProductoParameter = new ObjectParameter("idProducto", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarVentasDetallado", idEmpresaParameter, fechaInicioParameter, fechaFinParameter, idResponsableParameter, idProductoParameter);
        }
        public virtual int  sp_ListarDocRelxVenta(Nullable<int> idVenta)
        {
    
            ObjectParameter idVentaParameter;
    
            if (idVenta.HasValue)
            {
                idVentaParameter = new ObjectParameter("idVenta", idVenta);
            }
            else
            {
                idVentaParameter = new ObjectParameter("idVenta", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarDocRelxVenta", idVentaParameter);
        }
        public virtual int  sp_ObtenerMovimientoCaja(Nullable<int> idMovCaja)
        {
    
            ObjectParameter idMovCajaParameter;
    
            if (idMovCaja.HasValue)
            {
                idMovCajaParameter = new ObjectParameter("idMovCaja", idMovCaja);
            }
            else
            {
                idMovCajaParameter = new ObjectParameter("idMovCaja", typeof(int));
            }
            return base.ExecuteFunction("sp_ObtenerMovimientoCaja", idMovCajaParameter);
        }
        public virtual int  sp_AnalisisVentaxFechaDetallado(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<int> idEmpresa)
        {
    
            ObjectParameter fechaInicioParameter;
    
            if (fechaInicio.HasValue)
            {
                fechaInicioParameter = new ObjectParameter("fechaInicio", fechaInicio);
            }
            else
            {
                fechaInicioParameter = new ObjectParameter("fechaInicio", typeof(System.DateTime));
            }
    
            ObjectParameter fechaFinParameter;
    
            if (fechaFin.HasValue)
            {
                fechaFinParameter = new ObjectParameter("fechaFin", fechaFin);
            }
            else
            {
                fechaFinParameter = new ObjectParameter("fechaFin", typeof(System.DateTime));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_AnalisisVentaxFechaDetallado", fechaInicioParameter, fechaFinParameter, idEmpresaParameter);
        }
        public virtual int  sp_AnalisisVentaxFechaDetalladoProducto(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<int> idEmpresa)
        {
    
            ObjectParameter fechaInicioParameter;
    
            if (fechaInicio.HasValue)
            {
                fechaInicioParameter = new ObjectParameter("fechaInicio", fechaInicio);
            }
            else
            {
                fechaInicioParameter = new ObjectParameter("fechaInicio", typeof(System.DateTime));
            }
    
            ObjectParameter fechaFinParameter;
    
            if (fechaFin.HasValue)
            {
                fechaFinParameter = new ObjectParameter("fechaFin", fechaFin);
            }
            else
            {
                fechaFinParameter = new ObjectParameter("fechaFin", typeof(System.DateTime));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_AnalisisVentaxFechaDetalladoProducto", fechaInicioParameter, fechaFinParameter, idEmpresaParameter);
        }
        public virtual int  SP_ListarStockValorizado(Nullable<int> idAlmacen, Nullable<int> idEmpresa, Nullable<System.DateTime> fechaFin)
        {
    
            ObjectParameter idAlmacenParameter;
    
            if (idAlmacen.HasValue)
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", idAlmacen);
            }
            else
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter fechaFinParameter;
    
            if (fechaFin.HasValue)
            {
                fechaFinParameter = new ObjectParameter("fechaFin", fechaFin);
            }
            else
            {
                fechaFinParameter = new ObjectParameter("fechaFin", typeof(System.DateTime));
            }
            return base.ExecuteFunction("SP_ListarStockValorizado", idAlmacenParameter, idEmpresaParameter, fechaFinParameter);
        }
        public virtual int  sp_ListarActividadesxProyecto(Nullable<int> idProyecto)
        {
    
            ObjectParameter idProyectoParameter;
    
            if (idProyecto.HasValue)
            {
                idProyectoParameter = new ObjectParameter("idProyecto", idProyecto);
            }
            else
            {
                idProyectoParameter = new ObjectParameter("idProyecto", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarActividadesxProyecto", idProyectoParameter);
        }
        public virtual int  sp_ListarProyectos(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarProyectos", idEmpresaParameter);
        }
        public virtual int  sp_ObtenerProyecto(Nullable<int> idProyecto)
        {
    
            ObjectParameter idProyectoParameter;
    
            if (idProyecto.HasValue)
            {
                idProyectoParameter = new ObjectParameter("idProyecto", idProyecto);
            }
            else
            {
                idProyectoParameter = new ObjectParameter("idProyecto", typeof(int));
            }
            return base.ExecuteFunction("sp_ObtenerProyecto", idProyectoParameter);
        }
        public virtual int  sp_ListarActividadesxUsuario(Nullable<int> idPersona, Nullable<int> idEmpresa)
        {
    
            ObjectParameter idPersonaParameter;
    
            if (idPersona.HasValue)
            {
                idPersonaParameter = new ObjectParameter("idPersona", idPersona);
            }
            else
            {
                idPersonaParameter = new ObjectParameter("idPersona", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarActividadesxUsuario", idPersonaParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListarTareasxActividad(Nullable<int> idActividad)
        {
    
            ObjectParameter idActividadParameter;
    
            if (idActividad.HasValue)
            {
                idActividadParameter = new ObjectParameter("idActividad", idActividad);
            }
            else
            {
                idActividadParameter = new ObjectParameter("idActividad", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarTareasxActividad", idActividadParameter);
        }
        public virtual int  sp_ListarFechaVctoLote(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarFechaVctoLote", idEmpresaParameter);
        }
        public virtual int  sp_ListarAlertaCambioPrecios(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarAlertaCambioPrecios", idEmpresaParameter);
        }
        public virtual int  sp_ListaAjuste(Nullable<int> pAnio, Nullable<int> pMes, Nullable<int> idEmpresa, Nullable<int> idAlmacen)
        {
    
            ObjectParameter pAnioParameter;
    
            if (pAnio.HasValue)
            {
                pAnioParameter = new ObjectParameter("pAnio", pAnio);
            }
            else
            {
                pAnioParameter = new ObjectParameter("pAnio", typeof(int));
            }
    
            ObjectParameter pMesParameter;
    
            if (pMes.HasValue)
            {
                pMesParameter = new ObjectParameter("pMes", pMes);
            }
            else
            {
                pMesParameter = new ObjectParameter("pMes", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter idAlmacenParameter;
    
            if (idAlmacen.HasValue)
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", idAlmacen);
            }
            else
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", typeof(int));
            }
            return base.ExecuteFunction("sp_ListaAjuste", pAnioParameter, pMesParameter, idEmpresaParameter, idAlmacenParameter);
        }
        public virtual int  sp_ListarNotaSalida(Nullable<int> pAnio, Nullable<int> pMes, Nullable<int> idEmpresa, Nullable<int> idAlmacen)
        {
    
            ObjectParameter pAnioParameter;
    
            if (pAnio.HasValue)
            {
                pAnioParameter = new ObjectParameter("pAnio", pAnio);
            }
            else
            {
                pAnioParameter = new ObjectParameter("pAnio", typeof(int));
            }
    
            ObjectParameter pMesParameter;
    
            if (pMes.HasValue)
            {
                pMesParameter = new ObjectParameter("pMes", pMes);
            }
            else
            {
                pMesParameter = new ObjectParameter("pMes", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter idAlmacenParameter;
    
            if (idAlmacen.HasValue)
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", idAlmacen);
            }
            else
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarNotaSalida", pAnioParameter, pMesParameter, idEmpresaParameter, idAlmacenParameter);
        }
        public virtual int  sp_ListarNotasIngreso(Nullable<int> pAnio, Nullable<int> pMes, Nullable<int> idEmpresa, Nullable<int> idAlmacen)
        {
    
            ObjectParameter pAnioParameter;
    
            if (pAnio.HasValue)
            {
                pAnioParameter = new ObjectParameter("pAnio", pAnio);
            }
            else
            {
                pAnioParameter = new ObjectParameter("pAnio", typeof(int));
            }
    
            ObjectParameter pMesParameter;
    
            if (pMes.HasValue)
            {
                pMesParameter = new ObjectParameter("pMes", pMes);
            }
            else
            {
                pMesParameter = new ObjectParameter("pMes", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter idAlmacenParameter;
    
            if (idAlmacen.HasValue)
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", idAlmacen);
            }
            else
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarNotasIngreso", pAnioParameter, pMesParameter, idEmpresaParameter, idAlmacenParameter);
        }
        public virtual int  sp_ListaTransferencias(Nullable<int> pAnio, Nullable<int> pMes, Nullable<int> idEmpresa, Nullable<int> idAlmacen)
        {
    
            ObjectParameter pAnioParameter;
    
            if (pAnio.HasValue)
            {
                pAnioParameter = new ObjectParameter("pAnio", pAnio);
            }
            else
            {
                pAnioParameter = new ObjectParameter("pAnio", typeof(int));
            }
    
            ObjectParameter pMesParameter;
    
            if (pMes.HasValue)
            {
                pMesParameter = new ObjectParameter("pMes", pMes);
            }
            else
            {
                pMesParameter = new ObjectParameter("pMes", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter idAlmacenParameter;
    
            if (idAlmacen.HasValue)
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", idAlmacen);
            }
            else
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", typeof(int));
            }
            return base.ExecuteFunction("sp_ListaTransferencias", pAnioParameter, pMesParameter, idEmpresaParameter, idAlmacenParameter);
        }
        public virtual int  sp_ListarSaldosxProducto(Nullable<int> idProducto)
        {
    
            ObjectParameter idProductoParameter;
    
            if (idProducto.HasValue)
            {
                idProductoParameter = new ObjectParameter("idProducto", idProducto);
            }
            else
            {
                idProductoParameter = new ObjectParameter("idProducto", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarSaldosxProducto", idProductoParameter);
        }
        public virtual int  sp_ListarGanancias(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<int> idEmpresa)
        {
    
            ObjectParameter fechaInicioParameter;
    
            if (fechaInicio.HasValue)
            {
                fechaInicioParameter = new ObjectParameter("fechaInicio", fechaInicio);
            }
            else
            {
                fechaInicioParameter = new ObjectParameter("fechaInicio", typeof(System.DateTime));
            }
    
            ObjectParameter fechaFinParameter;
    
            if (fechaFin.HasValue)
            {
                fechaFinParameter = new ObjectParameter("fechaFin", fechaFin);
            }
            else
            {
                fechaFinParameter = new ObjectParameter("fechaFin", typeof(System.DateTime));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarGanancias", fechaInicioParameter, fechaFinParameter, idEmpresaParameter);
        }
        public virtual int  sp_DetalleCondicionPagoxCaja(Nullable<int> idCaja)
        {
    
            ObjectParameter idCajaParameter;
    
            if (idCaja.HasValue)
            {
                idCajaParameter = new ObjectParameter("idCaja", idCaja);
            }
            else
            {
                idCajaParameter = new ObjectParameter("idCaja", typeof(int));
            }
            return base.ExecuteFunction("sp_DetalleCondicionPagoxCaja", idCajaParameter);
        }
        public virtual int  sp_ListarDetalleOrdenTrabajo(Nullable<int> idOrdenTrabajo)
        {
    
            ObjectParameter idOrdenTrabajoParameter;
    
            if (idOrdenTrabajo.HasValue)
            {
                idOrdenTrabajoParameter = new ObjectParameter("idOrdenTrabajo", idOrdenTrabajo);
            }
            else
            {
                idOrdenTrabajoParameter = new ObjectParameter("idOrdenTrabajo", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarDetalleOrdenTrabajo", idOrdenTrabajoParameter);
        }
        public virtual int  sp_ListarOrdenTrabajo(Nullable<System.DateTime> pFechaInicio, Nullable<System.DateTime> pFechaFin, Nullable<int> idEmpresa, Nullable<int> idAlmacen)
        {
    
            ObjectParameter pFechaInicioParameter;
    
            if (pFechaInicio.HasValue)
            {
                pFechaInicioParameter = new ObjectParameter("pFechaInicio", pFechaInicio);
            }
            else
            {
                pFechaInicioParameter = new ObjectParameter("pFechaInicio", typeof(System.DateTime));
            }
    
            ObjectParameter pFechaFinParameter;
    
            if (pFechaFin.HasValue)
            {
                pFechaFinParameter = new ObjectParameter("pFechaFin", pFechaFin);
            }
            else
            {
                pFechaFinParameter = new ObjectParameter("pFechaFin", typeof(System.DateTime));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter idAlmacenParameter;
    
            if (idAlmacen.HasValue)
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", idAlmacen);
            }
            else
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarOrdenTrabajo", pFechaInicioParameter, pFechaFinParameter, idEmpresaParameter, idAlmacenParameter);
        }
        public virtual int  sp_ObtenerOrdenTrabajo(Nullable<int> idOrdenTrabajo)
        {
    
            ObjectParameter idOrdenTrabajoParameter;
    
            if (idOrdenTrabajo.HasValue)
            {
                idOrdenTrabajoParameter = new ObjectParameter("idOrdenTrabajo", idOrdenTrabajo);
            }
            else
            {
                idOrdenTrabajoParameter = new ObjectParameter("idOrdenTrabajo", typeof(int));
            }
            return base.ExecuteFunction("sp_ObtenerOrdenTrabajo", idOrdenTrabajoParameter);
        }
        public virtual int  sp_ListarDetalleTransferenciaPendiente(Nullable<int> idTranferenciaAlmacen)
        {
    
            ObjectParameter idTranferenciaAlmacenParameter;
    
            if (idTranferenciaAlmacen.HasValue)
            {
                idTranferenciaAlmacenParameter = new ObjectParameter("idTranferenciaAlmacen", idTranferenciaAlmacen);
            }
            else
            {
                idTranferenciaAlmacenParameter = new ObjectParameter("idTranferenciaAlmacen", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarDetalleTransferenciaPendiente", idTranferenciaAlmacenParameter);
        }
        public virtual int  sp_ObtenerTransferenciaPendiente(Nullable<int> idTranferenciaAlmacen)
        {
    
            ObjectParameter idTranferenciaAlmacenParameter;
    
            if (idTranferenciaAlmacen.HasValue)
            {
                idTranferenciaAlmacenParameter = new ObjectParameter("idTranferenciaAlmacen", idTranferenciaAlmacen);
            }
            else
            {
                idTranferenciaAlmacenParameter = new ObjectParameter("idTranferenciaAlmacen", typeof(int));
            }
            return base.ExecuteFunction("sp_ObtenerTransferenciaPendiente", idTranferenciaAlmacenParameter);
        }
        public virtual ObjectResult<Nullable<int>>  sp_ObtenerTotalProductos(Nullable<int> idEmpresa, Nullable<int> tipo, Nullable<int> idCategoria, Nullable<int> idAlmacen, Nullable<int> idFormaPago)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter tipoParameter;
    
            if (tipo.HasValue)
            {
                tipoParameter = new ObjectParameter("tipo", tipo);
            }
            else
            {
                tipoParameter = new ObjectParameter("tipo", typeof(int));
            }
    
            ObjectParameter idCategoriaParameter;
    
            if (idCategoria.HasValue)
            {
                idCategoriaParameter = new ObjectParameter("idCategoria", idCategoria);
            }
            else
            {
                idCategoriaParameter = new ObjectParameter("idCategoria", typeof(int));
            }
    
            ObjectParameter idAlmacenParameter;
    
            if (idAlmacen.HasValue)
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", idAlmacen);
            }
            else
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", typeof(int));
            }
    
            ObjectParameter idFormaPagoParameter;
    
            if (idFormaPago.HasValue)
            {
                idFormaPagoParameter = new ObjectParameter("idFormaPago", idFormaPago);
            }
            else
            {
                idFormaPagoParameter = new ObjectParameter("idFormaPago", typeof(int));
            }
            return base.ExecuteFunction<Nullable<int>>("sp_ObtenerTotalProductos", idEmpresaParameter, tipoParameter, idCategoriaParameter, idAlmacenParameter, idFormaPagoParameter);
        }
        public virtual int  sp_ListarOrdenTrabajoPendiente(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarOrdenTrabajoPendiente", idEmpresaParameter);
        }
        public virtual int  sp_ListarTransferenciaPendientes(Nullable<int> idEmpresa, Nullable<int> idAlmacen)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter idAlmacenParameter;
    
            if (idAlmacen.HasValue)
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", idAlmacen);
            }
            else
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarTransferenciaPendientes", idEmpresaParameter, idAlmacenParameter);
        }
        public virtual int  sp_ListarPedidosPendientes(Nullable<int> pAnio, Nullable<int> pMes, Nullable<int> idEmpresa)
        {
    
            ObjectParameter pAnioParameter;
    
            if (pAnio.HasValue)
            {
                pAnioParameter = new ObjectParameter("pAnio", pAnio);
            }
            else
            {
                pAnioParameter = new ObjectParameter("pAnio", typeof(int));
            }
    
            ObjectParameter pMesParameter;
    
            if (pMes.HasValue)
            {
                pMesParameter = new ObjectParameter("pMes", pMes);
            }
            else
            {
                pMesParameter = new ObjectParameter("pMes", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarPedidosPendientes", pAnioParameter, pMesParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListarDetalleOTSalida(Nullable<int> idOrdenTrabajo)
        {
    
            ObjectParameter idOrdenTrabajoParameter;
    
            if (idOrdenTrabajo.HasValue)
            {
                idOrdenTrabajoParameter = new ObjectParameter("idOrdenTrabajo", idOrdenTrabajo);
            }
            else
            {
                idOrdenTrabajoParameter = new ObjectParameter("idOrdenTrabajo", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarDetalleOTSalida", idOrdenTrabajoParameter);
        }
        public virtual int  sp_ListarOrdenTrabajoPendienteSalida(Nullable<int> idEmpresa, Nullable<int> idAlmacen)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter idAlmacenParameter;
    
            if (idAlmacen.HasValue)
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", idAlmacen);
            }
            else
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarOrdenTrabajoPendienteSalida", idEmpresaParameter, idAlmacenParameter);
        }
        public virtual int  sp_ListarPedidosSinVenta(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarPedidosSinVenta", idEmpresaParameter);
        }
        public virtual int  sp_ListarPedidosxCliente(Nullable<int> idCliente, Nullable<int> idEmpresa)
        {
    
            ObjectParameter idClienteParameter;
    
            if (idCliente.HasValue)
            {
                idClienteParameter = new ObjectParameter("idCliente", idCliente);
            }
            else
            {
                idClienteParameter = new ObjectParameter("idCliente", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarPedidosxCliente", idClienteParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListarCotizacionSinVenta(Nullable<int> idEmpresa, Nullable<int> idSucursal)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter idSucursalParameter;
    
            if (idSucursal.HasValue)
            {
                idSucursalParameter = new ObjectParameter("idSucursal", idSucursal);
            }
            else
            {
                idSucursalParameter = new ObjectParameter("idSucursal", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarCotizacionSinVenta", idEmpresaParameter, idSucursalParameter);
        }
        public virtual int  sp_ListarComprasPendientesIngreso(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarComprasPendientesIngreso", idEmpresaParameter);
        }
        public virtual int  sp_ListarVentasRpt(Nullable<int> idEmpresa, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter fechaInicioParameter;
    
            if (fechaInicio.HasValue)
            {
                fechaInicioParameter = new ObjectParameter("fechaInicio", fechaInicio);
            }
            else
            {
                fechaInicioParameter = new ObjectParameter("fechaInicio", typeof(System.DateTime));
            }
    
            ObjectParameter fechaFinParameter;
    
            if (fechaFin.HasValue)
            {
                fechaFinParameter = new ObjectParameter("fechaFin", fechaFin);
            }
            else
            {
                fechaFinParameter = new ObjectParameter("fechaFin", typeof(System.DateTime));
            }
            return base.ExecuteFunction("sp_ListarVentasRpt", idEmpresaParameter, fechaInicioParameter, fechaFinParameter);
        }
        public virtual int  sp_AnalisisVentaxFecha(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<int> idEmpresa, Nullable<int> idModena)
        {
    
            ObjectParameter fechaInicioParameter;
    
            if (fechaInicio.HasValue)
            {
                fechaInicioParameter = new ObjectParameter("fechaInicio", fechaInicio);
            }
            else
            {
                fechaInicioParameter = new ObjectParameter("fechaInicio", typeof(System.DateTime));
            }
    
            ObjectParameter fechaFinParameter;
    
            if (fechaFin.HasValue)
            {
                fechaFinParameter = new ObjectParameter("fechaFin", fechaFin);
            }
            else
            {
                fechaFinParameter = new ObjectParameter("fechaFin", typeof(System.DateTime));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter idModenaParameter;
    
            if (idModena.HasValue)
            {
                idModenaParameter = new ObjectParameter("idModena", idModena);
            }
            else
            {
                idModenaParameter = new ObjectParameter("idModena", typeof(int));
            }
            return base.ExecuteFunction("sp_AnalisisVentaxFecha", fechaInicioParameter, fechaFinParameter, idEmpresaParameter, idModenaParameter);
        }
        public virtual int  sp_ObtenerPedido(Nullable<int> idPedido)
        {
    
            ObjectParameter idPedidoParameter;
    
            if (idPedido.HasValue)
            {
                idPedidoParameter = new ObjectParameter("idPedido", idPedido);
            }
            else
            {
                idPedidoParameter = new ObjectParameter("idPedido", typeof(int));
            }
            return base.ExecuteFunction("sp_ObtenerPedido", idPedidoParameter);
        }
        public virtual int  sp_ListarProductosRelacionados(Nullable<int> idProducto)
        {
    
            ObjectParameter idProductoParameter;
    
            if (idProducto.HasValue)
            {
                idProductoParameter = new ObjectParameter("idProducto", idProducto);
            }
            else
            {
                idProductoParameter = new ObjectParameter("idProducto", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarProductosRelacionados", idProductoParameter);
        }
        public virtual int  sp_ListarSubscripcionEmpresa(Nullable<int> idEmpresa)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarSubscripcionEmpresa", idEmpresaParameter);
        }
        public virtual int  sp_ListarDevolucion(Nullable<System.DateTime> pFechaInicio, Nullable<System.DateTime> pFechaFin, Nullable<int> idEmpresa)
        {
    
            ObjectParameter pFechaInicioParameter;
    
            if (pFechaInicio.HasValue)
            {
                pFechaInicioParameter = new ObjectParameter("pFechaInicio", pFechaInicio);
            }
            else
            {
                pFechaInicioParameter = new ObjectParameter("pFechaInicio", typeof(System.DateTime));
            }
    
            ObjectParameter pFechaFinParameter;
    
            if (pFechaFin.HasValue)
            {
                pFechaFinParameter = new ObjectParameter("pFechaFin", pFechaFin);
            }
            else
            {
                pFechaFinParameter = new ObjectParameter("pFechaFin", typeof(System.DateTime));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarDevolucion", pFechaInicioParameter, pFechaFinParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListarDetalleDevolucion(Nullable<int> idDevolucion)
        {
    
            ObjectParameter idDevolucionParameter;
    
            if (idDevolucion.HasValue)
            {
                idDevolucionParameter = new ObjectParameter("idDevolucion", idDevolucion);
            }
            else
            {
                idDevolucionParameter = new ObjectParameter("idDevolucion", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarDetalleDevolucion", idDevolucionParameter);
        }
        public virtual int  sp_ObtenerDevolucion(Nullable<int> idDevolucion)
        {
    
            ObjectParameter idDevolucionParameter;
    
            if (idDevolucion.HasValue)
            {
                idDevolucionParameter = new ObjectParameter("idDevolucion", idDevolucion);
            }
            else
            {
                idDevolucionParameter = new ObjectParameter("idDevolucion", typeof(int));
            }
            return base.ExecuteFunction("sp_ObtenerDevolucion", idDevolucionParameter);
        }
        public virtual int  sp_ListarProductosParaVenta(Nullable<int> idEmpresa, Nullable<int> tipo, Nullable<int> idCategoria, Nullable<int> idAlmacen, Nullable<int> idFormaPago, string bq1, string bq2, string bq3, string bq4, string bq5, string bq6, string bq7, string bq8, Nullable<int> page, Nullable<int> sizePage, Nullable<int> tipoCampo, string campo)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter tipoParameter;
    
            if (tipo.HasValue)
            {
                tipoParameter = new ObjectParameter("tipo", tipo);
            }
            else
            {
                tipoParameter = new ObjectParameter("tipo", typeof(int));
            }
    
            ObjectParameter idCategoriaParameter;
    
            if (idCategoria.HasValue)
            {
                idCategoriaParameter = new ObjectParameter("idCategoria", idCategoria);
            }
            else
            {
                idCategoriaParameter = new ObjectParameter("idCategoria", typeof(int));
            }
    
            ObjectParameter idAlmacenParameter;
    
            if (idAlmacen.HasValue)
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", idAlmacen);
            }
            else
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", typeof(int));
            }
    
            ObjectParameter idFormaPagoParameter;
    
            if (idFormaPago.HasValue)
            {
                idFormaPagoParameter = new ObjectParameter("idFormaPago", idFormaPago);
            }
            else
            {
                idFormaPagoParameter = new ObjectParameter("idFormaPago", typeof(int));
            }
    
            ObjectParameter bq1Parameter;
    
            if (bq1 != null)
            {
                bq1Parameter = new ObjectParameter("bq1", bq1);
            }
            else
            {
                bq1Parameter = new ObjectParameter("bq1", typeof(string));
            }
    
            ObjectParameter bq2Parameter;
    
            if (bq2 != null)
            {
                bq2Parameter = new ObjectParameter("bq2", bq2);
            }
            else
            {
                bq2Parameter = new ObjectParameter("bq2", typeof(string));
            }
    
            ObjectParameter bq3Parameter;
    
            if (bq3 != null)
            {
                bq3Parameter = new ObjectParameter("bq3", bq3);
            }
            else
            {
                bq3Parameter = new ObjectParameter("bq3", typeof(string));
            }
    
            ObjectParameter bq4Parameter;
    
            if (bq4 != null)
            {
                bq4Parameter = new ObjectParameter("bq4", bq4);
            }
            else
            {
                bq4Parameter = new ObjectParameter("bq4", typeof(string));
            }
    
            ObjectParameter bq5Parameter;
    
            if (bq5 != null)
            {
                bq5Parameter = new ObjectParameter("bq5", bq5);
            }
            else
            {
                bq5Parameter = new ObjectParameter("bq5", typeof(string));
            }
    
            ObjectParameter bq6Parameter;
    
            if (bq6 != null)
            {
                bq6Parameter = new ObjectParameter("bq6", bq6);
            }
            else
            {
                bq6Parameter = new ObjectParameter("bq6", typeof(string));
            }
    
            ObjectParameter bq7Parameter;
    
            if (bq7 != null)
            {
                bq7Parameter = new ObjectParameter("bq7", bq7);
            }
            else
            {
                bq7Parameter = new ObjectParameter("bq7", typeof(string));
            }
    
            ObjectParameter bq8Parameter;
    
            if (bq8 != null)
            {
                bq8Parameter = new ObjectParameter("bq8", bq8);
            }
            else
            {
                bq8Parameter = new ObjectParameter("bq8", typeof(string));
            }
    
            ObjectParameter pageParameter;
    
            if (page.HasValue)
            {
                pageParameter = new ObjectParameter("page", page);
            }
            else
            {
                pageParameter = new ObjectParameter("page", typeof(int));
            }
    
            ObjectParameter sizePageParameter;
    
            if (sizePage.HasValue)
            {
                sizePageParameter = new ObjectParameter("sizePage", sizePage);
            }
            else
            {
                sizePageParameter = new ObjectParameter("sizePage", typeof(int));
            }
    
            ObjectParameter tipoCampoParameter;
    
            if (tipoCampo.HasValue)
            {
                tipoCampoParameter = new ObjectParameter("tipoCampo", tipoCampo);
            }
            else
            {
                tipoCampoParameter = new ObjectParameter("tipoCampo", typeof(int));
            }
    
            ObjectParameter campoParameter;
    
            if (campo != null)
            {
                campoParameter = new ObjectParameter("campo", campo);
            }
            else
            {
                campoParameter = new ObjectParameter("campo", typeof(string));
            }
            return base.ExecuteFunction("sp_ListarProductosParaVenta", idEmpresaParameter, tipoParameter, idCategoriaParameter, idAlmacenParameter, idFormaPagoParameter, bq1Parameter, bq2Parameter, bq3Parameter, bq4Parameter, bq5Parameter, bq6Parameter, bq7Parameter, bq8Parameter, pageParameter, sizePageParameter, tipoCampoParameter, campoParameter);
        }
        public virtual int  sp_ListaVentas(Nullable<int> pAnio, Nullable<int> pMes, Nullable<int> idEmpresa, string usuarioRegistra, Nullable<int> esAvanzada, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<int> idCliente, Nullable<int> idProducto, Nullable<int> idFormaPago, Nullable<int> idCondicionPago)
        {
    
            ObjectParameter pAnioParameter;
    
            if (pAnio.HasValue)
            {
                pAnioParameter = new ObjectParameter("pAnio", pAnio);
            }
            else
            {
                pAnioParameter = new ObjectParameter("pAnio", typeof(int));
            }
    
            ObjectParameter pMesParameter;
    
            if (pMes.HasValue)
            {
                pMesParameter = new ObjectParameter("pMes", pMes);
            }
            else
            {
                pMesParameter = new ObjectParameter("pMes", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter usuarioRegistraParameter;
    
            if (usuarioRegistra != null)
            {
                usuarioRegistraParameter = new ObjectParameter("usuarioRegistra", usuarioRegistra);
            }
            else
            {
                usuarioRegistraParameter = new ObjectParameter("usuarioRegistra", typeof(string));
            }
    
            ObjectParameter esAvanzadaParameter;
    
            if (esAvanzada.HasValue)
            {
                esAvanzadaParameter = new ObjectParameter("esAvanzada", esAvanzada);
            }
            else
            {
                esAvanzadaParameter = new ObjectParameter("esAvanzada", typeof(int));
            }
    
            ObjectParameter fechaInicioParameter;
    
            if (fechaInicio.HasValue)
            {
                fechaInicioParameter = new ObjectParameter("fechaInicio", fechaInicio);
            }
            else
            {
                fechaInicioParameter = new ObjectParameter("fechaInicio", typeof(System.DateTime));
            }
    
            ObjectParameter fechaFinParameter;
    
            if (fechaFin.HasValue)
            {
                fechaFinParameter = new ObjectParameter("fechaFin", fechaFin);
            }
            else
            {
                fechaFinParameter = new ObjectParameter("fechaFin", typeof(System.DateTime));
            }
    
            ObjectParameter idClienteParameter;
    
            if (idCliente.HasValue)
            {
                idClienteParameter = new ObjectParameter("idCliente", idCliente);
            }
            else
            {
                idClienteParameter = new ObjectParameter("idCliente", typeof(int));
            }
    
            ObjectParameter idProductoParameter;
    
            if (idProducto.HasValue)
            {
                idProductoParameter = new ObjectParameter("idProducto", idProducto);
            }
            else
            {
                idProductoParameter = new ObjectParameter("idProducto", typeof(int));
            }
    
            ObjectParameter idFormaPagoParameter;
    
            if (idFormaPago.HasValue)
            {
                idFormaPagoParameter = new ObjectParameter("idFormaPago", idFormaPago);
            }
            else
            {
                idFormaPagoParameter = new ObjectParameter("idFormaPago", typeof(int));
            }
    
            ObjectParameter idCondicionPagoParameter;
    
            if (idCondicionPago.HasValue)
            {
                idCondicionPagoParameter = new ObjectParameter("idCondicionPago", idCondicionPago);
            }
            else
            {
                idCondicionPagoParameter = new ObjectParameter("idCondicionPago", typeof(int));
            }
            return base.ExecuteFunction("sp_ListaVentas", pAnioParameter, pMesParameter, idEmpresaParameter, usuarioRegistraParameter, esAvanzadaParameter, fechaInicioParameter, fechaFinParameter, idClienteParameter, idProductoParameter, idFormaPagoParameter, idCondicionPagoParameter);
        }
        public virtual int  sp_ListarVentasxCliente(Nullable<int> idCliente, Nullable<int> idEmpresa)
        {
    
            ObjectParameter idClienteParameter;
    
            if (idCliente.HasValue)
            {
                idClienteParameter = new ObjectParameter("idCliente", idCliente);
            }
            else
            {
                idClienteParameter = new ObjectParameter("idCliente", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarVentasxCliente", idClienteParameter, idEmpresaParameter);
        }
        public virtual int  sp_ObtenerVenta(Nullable<int> idVenta)
        {
    
            ObjectParameter idVentaParameter;
    
            if (idVenta.HasValue)
            {
                idVentaParameter = new ObjectParameter("idVenta", idVenta);
            }
            else
            {
                idVentaParameter = new ObjectParameter("idVenta", typeof(int));
            }
            return base.ExecuteFunction("sp_ObtenerVenta", idVentaParameter);
        }
        public virtual int  sp_ListarProductos(Nullable<int> idEmpresa, Nullable<int> tipo, Nullable<int> idCategoria, Nullable<int> idAlmacen, Nullable<int> idFormaPago, string bq1, string bq2, string bq3, string bq4, string bq5, string bq6, string bq7, string bq8, Nullable<int> page, Nullable<int> sizePage, Nullable<int> tipoCampo, string campo)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter tipoParameter;
    
            if (tipo.HasValue)
            {
                tipoParameter = new ObjectParameter("tipo", tipo);
            }
            else
            {
                tipoParameter = new ObjectParameter("tipo", typeof(int));
            }
    
            ObjectParameter idCategoriaParameter;
    
            if (idCategoria.HasValue)
            {
                idCategoriaParameter = new ObjectParameter("idCategoria", idCategoria);
            }
            else
            {
                idCategoriaParameter = new ObjectParameter("idCategoria", typeof(int));
            }
    
            ObjectParameter idAlmacenParameter;
    
            if (idAlmacen.HasValue)
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", idAlmacen);
            }
            else
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", typeof(int));
            }
    
            ObjectParameter idFormaPagoParameter;
    
            if (idFormaPago.HasValue)
            {
                idFormaPagoParameter = new ObjectParameter("idFormaPago", idFormaPago);
            }
            else
            {
                idFormaPagoParameter = new ObjectParameter("idFormaPago", typeof(int));
            }
    
            ObjectParameter bq1Parameter;
    
            if (bq1 != null)
            {
                bq1Parameter = new ObjectParameter("bq1", bq1);
            }
            else
            {
                bq1Parameter = new ObjectParameter("bq1", typeof(string));
            }
    
            ObjectParameter bq2Parameter;
    
            if (bq2 != null)
            {
                bq2Parameter = new ObjectParameter("bq2", bq2);
            }
            else
            {
                bq2Parameter = new ObjectParameter("bq2", typeof(string));
            }
    
            ObjectParameter bq3Parameter;
    
            if (bq3 != null)
            {
                bq3Parameter = new ObjectParameter("bq3", bq3);
            }
            else
            {
                bq3Parameter = new ObjectParameter("bq3", typeof(string));
            }
    
            ObjectParameter bq4Parameter;
    
            if (bq4 != null)
            {
                bq4Parameter = new ObjectParameter("bq4", bq4);
            }
            else
            {
                bq4Parameter = new ObjectParameter("bq4", typeof(string));
            }
    
            ObjectParameter bq5Parameter;
    
            if (bq5 != null)
            {
                bq5Parameter = new ObjectParameter("bq5", bq5);
            }
            else
            {
                bq5Parameter = new ObjectParameter("bq5", typeof(string));
            }
    
            ObjectParameter bq6Parameter;
    
            if (bq6 != null)
            {
                bq6Parameter = new ObjectParameter("bq6", bq6);
            }
            else
            {
                bq6Parameter = new ObjectParameter("bq6", typeof(string));
            }
    
            ObjectParameter bq7Parameter;
    
            if (bq7 != null)
            {
                bq7Parameter = new ObjectParameter("bq7", bq7);
            }
            else
            {
                bq7Parameter = new ObjectParameter("bq7", typeof(string));
            }
    
            ObjectParameter bq8Parameter;
    
            if (bq8 != null)
            {
                bq8Parameter = new ObjectParameter("bq8", bq8);
            }
            else
            {
                bq8Parameter = new ObjectParameter("bq8", typeof(string));
            }
    
            ObjectParameter pageParameter;
    
            if (page.HasValue)
            {
                pageParameter = new ObjectParameter("page", page);
            }
            else
            {
                pageParameter = new ObjectParameter("page", typeof(int));
            }
    
            ObjectParameter sizePageParameter;
    
            if (sizePage.HasValue)
            {
                sizePageParameter = new ObjectParameter("sizePage", sizePage);
            }
            else
            {
                sizePageParameter = new ObjectParameter("sizePage", typeof(int));
            }
    
            ObjectParameter tipoCampoParameter;
    
            if (tipoCampo.HasValue)
            {
                tipoCampoParameter = new ObjectParameter("tipoCampo", tipoCampo);
            }
            else
            {
                tipoCampoParameter = new ObjectParameter("tipoCampo", typeof(int));
            }
    
            ObjectParameter campoParameter;
    
            if (campo != null)
            {
                campoParameter = new ObjectParameter("campo", campo);
            }
            else
            {
                campoParameter = new ObjectParameter("campo", typeof(string));
            }
            return base.ExecuteFunction("sp_ListarProductos", idEmpresaParameter, tipoParameter, idCategoriaParameter, idAlmacenParameter, idFormaPagoParameter, bq1Parameter, bq2Parameter, bq3Parameter, bq4Parameter, bq5Parameter, bq6Parameter, bq7Parameter, bq8Parameter, pageParameter, sizePageParameter, tipoCampoParameter, campoParameter);
        }
        public virtual int  sp_ListarDetalleVenta(Nullable<int> idDocumentoComercial)
        {
    
            ObjectParameter idDocumentoComercialParameter;
    
            if (idDocumentoComercial.HasValue)
            {
                idDocumentoComercialParameter = new ObjectParameter("idDocumentoComercial", idDocumentoComercial);
            }
            else
            {
                idDocumentoComercialParameter = new ObjectParameter("idDocumentoComercial", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarDetalleVenta", idDocumentoComercialParameter);
        }
        public virtual int  sp_ListaVentaxCliente(Nullable<int> idCliente, Nullable<int> idEmpresa)
        {
    
            ObjectParameter idClienteParameter;
    
            if (idCliente.HasValue)
            {
                idClienteParameter = new ObjectParameter("idCliente", idCliente);
            }
            else
            {
                idClienteParameter = new ObjectParameter("idCliente", typeof(int));
            }
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
            return base.ExecuteFunction("sp_ListaVentaxCliente", idClienteParameter, idEmpresaParameter);
        }
        public virtual int  sp_ListarProductosConStock(Nullable<int> idEmpresa, Nullable<int> tipo, Nullable<int> idCategoria, Nullable<int> idAlmacen, Nullable<int> idFormaPago, Nullable<int> tipoCampo)
        {
    
            ObjectParameter idEmpresaParameter;
    
            if (idEmpresa.HasValue)
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", idEmpresa);
            }
            else
            {
                idEmpresaParameter = new ObjectParameter("idEmpresa", typeof(int));
            }
    
            ObjectParameter tipoParameter;
    
            if (tipo.HasValue)
            {
                tipoParameter = new ObjectParameter("tipo", tipo);
            }
            else
            {
                tipoParameter = new ObjectParameter("tipo", typeof(int));
            }
    
            ObjectParameter idCategoriaParameter;
    
            if (idCategoria.HasValue)
            {
                idCategoriaParameter = new ObjectParameter("idCategoria", idCategoria);
            }
            else
            {
                idCategoriaParameter = new ObjectParameter("idCategoria", typeof(int));
            }
    
            ObjectParameter idAlmacenParameter;
    
            if (idAlmacen.HasValue)
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", idAlmacen);
            }
            else
            {
                idAlmacenParameter = new ObjectParameter("idAlmacen", typeof(int));
            }
    
            ObjectParameter idFormaPagoParameter;
    
            if (idFormaPago.HasValue)
            {
                idFormaPagoParameter = new ObjectParameter("idFormaPago", idFormaPago);
            }
            else
            {
                idFormaPagoParameter = new ObjectParameter("idFormaPago", typeof(int));
            }
    
            ObjectParameter tipoCampoParameter;
    
            if (tipoCampo.HasValue)
            {
                tipoCampoParameter = new ObjectParameter("tipoCampo", tipoCampo);
            }
            else
            {
                tipoCampoParameter = new ObjectParameter("tipoCampo", typeof(int));
            }
            return base.ExecuteFunction("sp_ListarProductosConStock", idEmpresaParameter, tipoParameter, idCategoriaParameter, idAlmacenParameter, idFormaPagoParameter, tipoCampoParameter);
        }
        public virtual int  sp_ComprobarDisponibilidadHabitacion(Nullable<int> idHabitacion, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<int> cantidadAReservar)
        {
    
            ObjectParameter idHabitacionParameter;
    
            if (idHabitacion.HasValue)
            {
                idHabitacionParameter = new ObjectParameter("idHabitacion", idHabitacion);
            }
            else
            {
                idHabitacionParameter = new ObjectParameter("idHabitacion", typeof(int));
            }
    
            ObjectParameter fechaInicioParameter;
    
            if (fechaInicio.HasValue)
            {
                fechaInicioParameter = new ObjectParameter("fechaInicio", fechaInicio);
            }
            else
            {
                fechaInicioParameter = new ObjectParameter("fechaInicio", typeof(System.DateTime));
            }
    
            ObjectParameter fechaFinParameter;
    
            if (fechaFin.HasValue)
            {
                fechaFinParameter = new ObjectParameter("fechaFin", fechaFin);
            }
            else
            {
                fechaFinParameter = new ObjectParameter("fechaFin", typeof(System.DateTime));
            }
    
            ObjectParameter cantidadAReservarParameter;
    
            if (cantidadAReservar.HasValue)
            {
                cantidadAReservarParameter = new ObjectParameter("cantidadAReservar", cantidadAReservar);
            }
            else
            {
                cantidadAReservarParameter = new ObjectParameter("cantidadAReservar", typeof(int));
            }
            return base.ExecuteFunction("sp_ComprobarDisponibilidadHabitacion", idHabitacionParameter, fechaInicioParameter, fechaFinParameter, cantidadAReservarParameter);
        }
        public virtual int  sp_ListarHabitacionesReservadas(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
    
            ObjectParameter fechaInicioParameter;
    
            if (fechaInicio.HasValue)
            {
                fechaInicioParameter = new ObjectParameter("fechaInicio", fechaInicio);
            }
            else
            {
                fechaInicioParameter = new ObjectParameter("fechaInicio", typeof(System.DateTime));
            }
    
            ObjectParameter fechaFinParameter;
    
            if (fechaFin.HasValue)
            {
                fechaFinParameter = new ObjectParameter("fechaFin", fechaFin);
            }
            else
            {
                fechaFinParameter = new ObjectParameter("fechaFin", typeof(System.DateTime));
            }
            return base.ExecuteFunction("sp_ListarHabitacionesReservadas", fechaInicioParameter, fechaFinParameter);
        }
        public virtual ObjectResult<sp_ListarPersonas_Result>  sp_ListarPersonas()
        {
            return base.ExecuteFunction<sp_ListarPersonas_Result>("sp_ListarPersonas");
        }
        public virtual ObjectResult<sp_ListarPublicaciones_Result>  sp_ListarPublicaciones()
        {
            return base.ExecuteFunction<sp_ListarPublicaciones_Result>("sp_ListarPublicaciones");
        }
        public virtual ObjectResult<sp_ListarArticulosxAutor_Result>  sp_ListarArticulosxAutor(Nullable<int> id)
        {
    
            ObjectParameter idParameter;
    
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(int));
            }
            return base.ExecuteFunction<sp_ListarArticulosxAutor_Result>("sp_ListarArticulosxAutor", idParameter);
        }
        public virtual ObjectResult<sp_ListarPerfiles_Result>  sp_ListarPerfiles()
        {
            return base.ExecuteFunction<sp_ListarPerfiles_Result>("sp_ListarPerfiles");
        }
        public virtual ObjectResult<sp_BuscarPorPalabraClave_Result>  sp_BuscarPorPalabraClave(string palabraBusqueda)
        {
    
            ObjectParameter palabraBusquedaParameter;
    
            if (palabraBusqueda != null)
            {
                palabraBusquedaParameter = new ObjectParameter("palabraBusqueda", palabraBusqueda);
            }
            else
            {
                palabraBusquedaParameter = new ObjectParameter("palabraBusqueda", typeof(string));
            }
            return base.ExecuteFunction<sp_BuscarPorPalabraClave_Result>("sp_BuscarPorPalabraClave", palabraBusquedaParameter);
        }

        #endregion

    }
    
}
