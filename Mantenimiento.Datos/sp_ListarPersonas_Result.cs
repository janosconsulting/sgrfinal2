//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
//     el código se vuelve a generar.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
using System.ComponentModel.DataAnnotations;

namespace Mantenimiento.Datos.Entidades
{
    
    public partial class sp_ListarPersonas_Result : INotifyComplexPropertyChanging, INotifyPropertyChanged
    {
        #region Propiedades primitivas
    
        [DataMember]
        public int idAutor
        {
            get { return _idAutor; }
            set
            {
                if (_idAutor != value)
                {
                    OnComplexPropertyChanging();
                    _idAutor = value;
                    OnPropertyChanged("idAutor");
                }
            }
        }
        private int _idAutor;
    
        [DataMember]
        public int idTipoIdentidad
        {
            get { return _idTipoIdentidad; }
            set
            {
                if (_idTipoIdentidad != value)
                {
                    OnComplexPropertyChanging();
                    _idTipoIdentidad = value;
                    OnPropertyChanged("idTipoIdentidad");
                }
            }
        }
        private int _idTipoIdentidad;
    
        [DataMember]
        public string documentoIdentidad
        {
            get { return _documentoIdentidad; }
            set
            {
                if (_documentoIdentidad != value)
                {
                    OnComplexPropertyChanging();
                    _documentoIdentidad = value;
                    OnPropertyChanged("documentoIdentidad");
                }
            }
        }
        private string _documentoIdentidad;
    
        [DataMember]
        public string nroIdentidad
        {
            get { return _nroIdentidad; }
            set
            {
                if (_nroIdentidad != value)
                {
                    OnComplexPropertyChanging();
                    _nroIdentidad = value;
                    OnPropertyChanged("nroIdentidad");
                }
            }
        }
        private string _nroIdentidad;
    
        [DataMember]
        public string nombres
        {
            get { return _nombres; }
            set
            {
                if (_nombres != value)
                {
                    OnComplexPropertyChanging();
                    _nombres = value;
                    OnPropertyChanged("nombres");
                }
            }
        }
        private string _nombres;
    
        [DataMember]
        public string apellidoPaterno
        {
            get { return _apellidoPaterno; }
            set
            {
                if (_apellidoPaterno != value)
                {
                    OnComplexPropertyChanging();
                    _apellidoPaterno = value;
                    OnPropertyChanged("apellidoPaterno");
                }
            }
        }
        private string _apellidoPaterno;
    
        [DataMember]
        public string apellidoMaterno
        {
            get { return _apellidoMaterno; }
            set
            {
                if (_apellidoMaterno != value)
                {
                    OnComplexPropertyChanging();
                    _apellidoMaterno = value;
                    OnPropertyChanged("apellidoMaterno");
                }
            }
        }
        private string _apellidoMaterno;
    
        [DataMember]
        public string fechaRegistroStr
        {
            get { return _fechaRegistroStr; }
            set
            {
                if (_fechaRegistroStr != value)
                {
                    OnComplexPropertyChanging();
                    _fechaRegistroStr = value;
                    OnPropertyChanged("fechaRegistroStr");
                }
            }
        }
        private string _fechaRegistroStr;
    
        [DataMember]
        public int esAlumno
        {
            get { return _esAlumno; }
            set
            {
                if (_esAlumno != value)
                {
                    OnComplexPropertyChanging();
                    _esAlumno = value;
                    OnPropertyChanged("esAlumno");
                }
            }
        }
        private int _esAlumno;
    
        [DataMember]
        public string esAlumnoStr
        {
            get { return _esAlumnoStr; }
            set
            {
                if (_esAlumnoStr != value)
                {
                    OnComplexPropertyChanging();
                    _esAlumnoStr = value;
                    OnPropertyChanged("esAlumnoStr");
                }
            }
        }
        private string _esAlumnoStr;

        #endregion

        #region ChangeTracking
    
        private void OnComplexPropertyChanging()
        {
            if (_complexPropertyChanging != null)
            {
                _complexPropertyChanging(this, new EventArgs());
            }
        }
    
        event EventHandler INotifyComplexPropertyChanging.ComplexPropertyChanging { add { _complexPropertyChanging += value; } remove { _complexPropertyChanging -= value; } }
        private event EventHandler _complexPropertyChanging;
    
        private void OnPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged { add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
        public static void RecordComplexOriginalValues(String parentPropertyName, sp_ListarPersonas_Result complexObject, ObjectChangeTracker changeTracker)
        {
            if (String.IsNullOrEmpty(parentPropertyName))
            {
                throw new ArgumentException("El parámetro de cadena no puede ser NULL ni estar vacío.", "parentPropertyName");
            }
    
            if (changeTracker == null)
            {
                throw new ArgumentNullException("changeTracker");
            }
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.idAutor", parentPropertyName), complexObject == null ? null : (object)complexObject.idAutor);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.idTipoIdentidad", parentPropertyName), complexObject == null ? null : (object)complexObject.idTipoIdentidad);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.documentoIdentidad", parentPropertyName), complexObject == null ? null : (object)complexObject.documentoIdentidad);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.nroIdentidad", parentPropertyName), complexObject == null ? null : (object)complexObject.nroIdentidad);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.nombres", parentPropertyName), complexObject == null ? null : (object)complexObject.nombres);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.apellidoPaterno", parentPropertyName), complexObject == null ? null : (object)complexObject.apellidoPaterno);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.apellidoMaterno", parentPropertyName), complexObject == null ? null : (object)complexObject.apellidoMaterno);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.fechaRegistroStr", parentPropertyName), complexObject == null ? null : (object)complexObject.fechaRegistroStr);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.esAlumno", parentPropertyName), complexObject == null ? null : (object)complexObject.esAlumno);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.esAlumnoStr", parentPropertyName), complexObject == null ? null : (object)complexObject.esAlumnoStr);
        }

        #endregion

    }
}
