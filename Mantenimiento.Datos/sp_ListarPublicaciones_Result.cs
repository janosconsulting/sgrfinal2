//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
//     el código se vuelve a generar.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
using System.ComponentModel.DataAnnotations;

namespace Mantenimiento.Datos.Entidades
{
    
    public partial class sp_ListarPublicaciones_Result : INotifyComplexPropertyChanging, INotifyPropertyChanged
    {
        #region Propiedades primitivas
    
        [DataMember]
        public int idArticulo
        {
            get { return _idArticulo; }
            set
            {
                if (_idArticulo != value)
                {
                    OnComplexPropertyChanging();
                    _idArticulo = value;
                    OnPropertyChanged("idArticulo");
                }
            }
        }
        private int _idArticulo;
    
        [DataMember]
        public string titulo
        {
            get { return _titulo; }
            set
            {
                if (_titulo != value)
                {
                    OnComplexPropertyChanging();
                    _titulo = value;
                    OnPropertyChanged("titulo");
                }
            }
        }
        private string _titulo;
    
        [DataMember]
        public string resumen
        {
            get { return _resumen; }
            set
            {
                if (_resumen != value)
                {
                    OnComplexPropertyChanging();
                    _resumen = value;
                    OnPropertyChanged("resumen");
                }
            }
        }
        private string _resumen;
    
        [DataMember]
        public string autor
        {
            get { return _autor; }
            set
            {
                if (_autor != value)
                {
                    OnComplexPropertyChanging();
                    _autor = value;
                    OnPropertyChanged("autor");
                }
            }
        }
        private string _autor;
    
        [DataMember]
        public string fechaPublicacionStr
        {
            get { return _fechaPublicacionStr; }
            set
            {
                if (_fechaPublicacionStr != value)
                {
                    OnComplexPropertyChanging();
                    _fechaPublicacionStr = value;
                    OnPropertyChanged("fechaPublicacionStr");
                }
            }
        }
        private string _fechaPublicacionStr;

        #endregion

        #region ChangeTracking
    
        private void OnComplexPropertyChanging()
        {
            if (_complexPropertyChanging != null)
            {
                _complexPropertyChanging(this, new EventArgs());
            }
        }
    
        event EventHandler INotifyComplexPropertyChanging.ComplexPropertyChanging { add { _complexPropertyChanging += value; } remove { _complexPropertyChanging -= value; } }
        private event EventHandler _complexPropertyChanging;
    
        private void OnPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged { add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
        public static void RecordComplexOriginalValues(String parentPropertyName, sp_ListarPublicaciones_Result complexObject, ObjectChangeTracker changeTracker)
        {
            if (String.IsNullOrEmpty(parentPropertyName))
            {
                throw new ArgumentException("El parámetro de cadena no puede ser NULL ni estar vacío.", "parentPropertyName");
            }
    
            if (changeTracker == null)
            {
                throw new ArgumentNullException("changeTracker");
            }
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.idArticulo", parentPropertyName), complexObject == null ? null : (object)complexObject.idArticulo);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.titulo", parentPropertyName), complexObject == null ? null : (object)complexObject.titulo);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.resumen", parentPropertyName), complexObject == null ? null : (object)complexObject.resumen);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.autor", parentPropertyName), complexObject == null ? null : (object)complexObject.autor);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.fechaPublicacionStr", parentPropertyName), complexObject == null ? null : (object)complexObject.fechaPublicacionStr);
        }

        #endregion

    }
}
